00008146 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 10/4/2015 1:23:36 AM

00000000                             1  *=======================================================================*
00000000                             2  * MOTOROLA EDUCATION COMPUTER BOARD ROM PROGRAM "TUTOR"  REVISION # 1.3
00000000                             3  * This version modified for EASy68K
00000000                             4  *     ftp://nyquist.ee.ualberta.ca/pub/motorola/m68k/x68k.zip
00000000                             5  *=======================================================================*
00000000                             6  
00000000                             7  * MACROS
00000000                             8  
00000000                             9  
00000000                            10  ADDR2MEM MACRO
00000000                            11        PEA     \1(PC)         MOVE ADDRESS TO MEMORY; POSITION
00000000                            12        MOVE.L  (A7)+,\2       INDEPENDANT = TO "MOVE.L #\1,\2"
00000000                            13        ENDM
00000000                            14  
00000000                            15  
00000000                            16  SAVEREGS MACRO
00000000                            17        MOVE.L  A7,REGA7       SAVE STACK POINTER
00000000                            18        LEA     SV\@(PC),A7    A7 = RETURN ADDRESS (FOR CALL TO SAVE)
00000000                            19        MOVE.L  A7,TEMP        TEMP = RETURN ADDRESS
00000000                            20        BRA     SAVE           BSR WITHOUT USING STACK
00000000                            21  SV\@  DS      0
00000000                            22        ENDM
00000000                            23  
00000000                            24  
00000000                            25  
00000000                            26  
00000000                            27  *-------------------------------------------------------------------------
00000000                            28  
00000000                            29  * EQUATES (in alphabetical order)
00000000                            30  
00000000  =00000007                 31  BELL     EQU     $07
00000000  =00000020                 32  BLANK    EQU     $20
00000000  =00004AFB                 33  BKPOINT  EQU     $4AFB
00000000  =00000080                 34  BUFFSIZE EQU     $80
00000000  =00000050                 35  BUFSIZE  EQU     80
00000000  =0000000D                 36  CR       EQU     $0D
00000000  =00000003                 37  CTLC     EQU     $03
00000000  =00000004                 38  CTLD     EQU     $04
00000000  =00000008                 39  CTLH     EQU     $08
00000000  =00000017                 40  CTLW     EQU     $17
00000000  =00000018                 41  CTLX     EQU     $18
00000000  =0000007F                 42  DEL      EQU     $7F
00000000  =00001000                 43  DELAYC1  EQU     $1000
00000000  =00000004                 44  EOT      EQU     $04
00000000  =0000000A                 45  LF       EQU     $0A
00000000  =00000010                 46  LOCVARSZ EQU     16
00000000                            47  
00000000                            48  
00000000                            49  
00000000                            50  *-------------------------------------------------------------------------
00000000                            51  * File ARAM      DATA VARIABLES                                   05/10/82
00000000                            52  
00000000                            53  ****************************************************************
00000000                            54  *  N O T E:  Ram locations:   starting at zero                 *
00000000                            55  ****************************************************************
00000000                            56  
00000000                            57           ORG     $000000
00000000                            58  
00000000                            59  *                               DEC HEX  DESCRIPTION
00000000= 01000000                  60           DC.L    $1000000       0   $00  RESET STACK LOCATION
00000004= 00008146                  61           DC.L    START          1   $01  RESET PC
00000008                            62  
00000008                            63  
00000008                            64  AV2      DS.L    1              2   $02  BUS ERROR            "BUS "
0000000C                            65  AV3      DS.L    1              3   $03  ADDRESS ERROR        "ADDR"
00000010                            66  AV4      DS.L    1              4   $04  ILL INSTRUCTION      "OPCO"
00000014                            67           DS.L    1              5   $05  DIVIDE BY ZERO       "DIV0"
00000018                            68           DS.L    1              6   $06  CHECK TRAP           "CHCK"
0000001C                            69           DS.L    1              7   $07  TRAP V               "TP V"
00000020                            70  AV8      DS.L    1              8   $08  PRIVILEDGE VIOLATION "PRIV"
00000024                            71  AV9      DS.L    1              9   $09  TRACE
00000028                            72           DS.L    1              10  $0A  1010 LINE EMULATION  "1010"
0000002C                            73  AV11     DS.L    1              11  $0B  1111 LINE EMULATION  "1111"
00000030                            74  AV12     DS.L    1              12  $0C  USED AS TEMPORARY STORAGE FOR VECTOR MSGS.
00000034                            75           DS.L    1              13  $0D  NOT USED
00000038                            76           DS.L    1              14  $0E
0000003C                            77           DS.L    1              15  $0F
00000040                            78           DS.L    1              16  $10
00000044                            79           DS.L    1              17  $11
00000048                            80           DS.L    1              18  $12
0000004C                            81           DS.L    1              19  $13
00000050                            82           DS.L    1              20  $14
00000054                            83           DS.L    1              21  $15
00000058                            84           DS.L    1              22  $16
0000005C                            85           DS.L    1              23  $17
00000060                            86  AV24     DS.L    1              24  $18   0  AUTO VECTORS     "SPUR"
00000064                            87           DS.L    1              25  $19   1                   "AV#1"
00000068                            88           DS.L    1              26  $1A   2                   "AV#2"   TEST BUTTON
0000006C                            89           DS.L    1              27  $1B   3                   "AV#3"
00000070                            90           DS.L    1              28  $1C   4                   "AV#4"
00000074                            91           DS.L    1              29  $1D   5                   "AV#5"
00000078                            92           DS.L    1              30  $1E   6                   "AV#6"
0000007C                            93  AV31     DS.L    1              31  $1F   7                   "AV#7   [ABORT BUTTON]
00000080                            94           DS.L    1              32  $20   TRAP  0             "UT 0"
00000084                            95           DS.L    1              33  $21   TRAP  1             "UT 1"
00000088                            96           DS.L    1              34  $22   TRAP  2             "UT 2"
0000008C                            97           DS.L    1              35  $23   TRAP  3             "UT 3"
00000090                            98           DS.L    1              36  $24   TRAP  4             "UT 4"
00000094                            99           DS.L    1              37  $25   TRAP  5             "UT 5"
00000098                           100           DS.L    1              38  $26   TRAP  6             "UT 6"
0000009C                           101           DS.L    1              39  $27   TRAP  7             "UT 7"
000000A0                           102           DS.L    1              40  $28   TRAP  8             "UT 8"
000000A4                           103           DS.L    1              41  $29   TRAP  9             "UT 9"
000000A8                           104           DS.L    1              42  $2A   TRAP 10             "UT A"
000000AC                           105           DS.L    1              43  $2B   TRAP 11             "UT B"
000000B0                           106           DS.L    1              44  $2C   TRAP 12             "UT C"
000000B4                           107           DS.L    1              45  $2D   TRAP 13             "UT D"
000000B8                           108  AV46     DS.L    1              46  $2E   TRAP 14             "UT E"
000000BC                           109  AV47     DS.L    1              47  $2F   TRAP 15             "UT F"
000000C0                           110  AV48     DS.L    1              48  $30
000000C4                           111           DS.L    1              49  $31
000000C8                           112           DS.L    1              50  $32
000000CC                           113           DS.L    1              51  $33
000000D0                           114           DS.L    1              52  $34
000000D4                           115           DS.L    1              53  $35
000000D8                           116           DS.L    1              54  $36
000000DC                           117           DS.L    1              55  $37
000000E0                           118           DS.L    1              56  $38
000000E4                           119           DS.L    1              57  $39
000000E8                           120           DS.L    1              58  $3A
000000EC                           121           DS.L    1              59  $3B
000000F0                           122           DS.L    1              60  $3C
000000F4                           123           DS.L    1              61  $3D
000000F8                           124           DS.L    1              62  $3E
000000FC                           125           DS.L    1              63  $3F
00000100                           126           DS.L    1              64  $40
00000104                           127           DS.L    1              65  $41
00000108                           128           DS.L    1              66  $42
0000010C                           129           DS.L    1              67  $43
00000110                           130           DS.L    1              68  $44
00000114                           131           DS.L    1              69  $45
00000118                           132           DS.L    1              70  $46
0000011C                           133           DS.L    1              71  $47
00000120                           134           DS.L    1              72  $48
00000124                           135           DS.L    1              73  $49
00000128                           136           DS.L    1              74  $4A
0000012C                           137           DS.L    1              75  $4B
00000130                           138           DS.L    1              76  $4C
00000134                           139           DS.L    1              77  $4D
00000138                           140           DS.L    1              78  $4E
0000013C                           141           DS.L    1              79  $4F
00000140                           142           DS.L    1              80  $50
00000144                           143           DS.L    1              81  $51
00000148                           144           DS.L    1              82  $52
0000014C                           145           DS.L    1              83  $53
00000150                           146           DS.L    1              84  $54
00000154                           147           DS.L    1              85  $55
00000158                           148           DS.L    1              86  $56
0000015C                           149           DS.L    1              87  $57
00000160                           150           DS.L    1              88  $58
00000164                           151           DS.L    1              89  $59
00000168                           152           DS.L    1              90  $5A
0000016C                           153           DS.L    1              91  $5B
00000170                           154           DS.L    1              92  $5C
00000174                           155           DS.L    1              93  $5D
00000178                           156           DS.L    1              94  $5E
0000017C                           157           DS.L    1              95  $5F
00000180                           158           DS.L    1              96  $60
00000184                           159           DS.L    1              97  $61
00000188                           160           DS.L    1              98  $62
0000018C                           161           DS.L    1              99  $63
00000190                           162           DS.L    1              100  $64
00000194                           163           DS.L    1              101  $65
00000198                           164           DS.L    1              102  $66
0000019C                           165           DS.L    1              103  $67
000001A0                           166           DS.L    1              104  $68
000001A4                           167           DS.L    1              105  $69
000001A8                           168           DS.L    1              106  $6A
000001AC                           169           DS.L    1              107  $6B
000001B0                           170           DS.L    1              108  $6C
000001B4                           171           DS.L    1              109  $6D
000001B8                           172           DS.L    1              110  $6E
000001BC                           173           DS.L    1              111  $6F
000001C0                           174           DS.L    1              112  $70
000001C4                           175           DS.L    1              113  $71
000001C8                           176           DS.L    1              114  $72
000001CC                           177           DS.L    1              115  $73
000001D0                           178           DS.L    1              116  $74
000001D4                           179           DS.L    1              117  $75
000001D8                           180           DS.L    1              118  $76
000001DC                           181           DS.L    1              119  $77
000001E0                           182           DS.L    1              120  $78
000001E4                           183           DS.L    1              121  $79
000001E8                           184           DS.L    1              122  $7A
000001EC                           185           DS.L    1              123  $7B
000001F0                           186           DS.L    1              124  $7C
000001F4                           187           DS.L    1              125  $7D
000001F8                           188           DS.L    1              126  $7E
000001FC                           189           DS.L    1              127  $7F
00000200                           190           DS.L    1              128  $80
00000204                           191           DS.L    1              129  $81
00000208                           192           DS.L    1              130  $82
0000020C                           193           DS.L    1              131  $83
00000210                           194           DS.L    1              132  $84
00000214                           195           DS.L    1              133  $85
00000218                           196           DS.L    1              134  $86
0000021C                           197           DS.L    1              135  $87
00000220                           198           DS.L    1              136  $88
00000224                           199           DS.L    1              137  $89
00000228                           200           DS.L    1              138  $8A
0000022C                           201           DS.L    1              139  $8B
00000230                           202           DS.L    1              140  $8C
00000234                           203           DS.L    1              141  $8D
00000238                           204           DS.L    1              142  $8E
0000023C                           205           DS.L    1              143  $8F
00000240                           206           DS.L    1              144  $90
00000244                           207           DS.L    1              145  $91
00000248                           208           DS.L    1              146  $92
0000024C                           209           DS.L    1              147  $93
00000250                           210           DS.L    1              148  $94
00000254                           211           DS.L    1              149  $95
00000258                           212           DS.L    1              150  $96
0000025C                           213           DS.L    1              151  $97
00000260                           214           DS.L    1              152  $98
00000264                           215           DS.L    1              153  $99
00000268                           216           DS.L    1              154  $9A
0000026C                           217           DS.L    1              155  $9B
00000270                           218           DS.L    1              156  $9C
00000274                           219           DS.L    1              157  $9D
00000278                           220           DS.L    1              158  $9E
0000027C                           221           DS.L    1              159  $9F
00000280                           222           DS.L    1              160  $A0
00000284                           223           DS.L    1              161  $A1
00000288                           224           DS.L    1              162  $A2
0000028C                           225           DS.L    1              163  $A3
00000290                           226           DS.L    1              164  $A4
00000294                           227           DS.L    1              165  $A5
00000298                           228           DS.L    1              166  $A6
0000029C                           229           DS.L    1              167  $A7
000002A0                           230           DS.L    1              168  $A8
000002A4                           231           DS.L    1              169  $A9
000002A8                           232           DS.L    1              170  $AA
000002AC                           233           DS.L    1              171  $AB
000002B0                           234           DS.L    1              172  $AC
000002B4                           235           DS.L    1              173  $AD
000002B8                           236           DS.L    1              174  $AE
000002BC                           237           DS.L    1              175  $AF
000002C0                           238           DS.L    1              176  $B0
000002C4                           239           DS.L    1              177  $B1
000002C8                           240           DS.L    1              178  $B2
000002CC                           241           DS.L    1              179  $B3
000002D0                           242           DS.L    1              180  $B4
000002D4                           243           DS.L    1              181  $B5
000002D8                           244           DS.L    1              182  $B6
000002DC                           245           DS.L    1              183  $B7
000002E0                           246           DS.L    1              184  $B8
000002E4                           247           DS.L    1              185  $B9
000002E8                           248           DS.L    1              186  $BA
000002EC                           249           DS.L    1              187  $BB
000002F0                           250           DS.L    1              188  $BC
000002F4                           251           DS.L    1              189  $BD
000002F8                           252           DS.L    1              190  $BE
000002FC                           253           DS.L    1              191  $BF
00000300                           254           DS.L    1              192  $C0
00000304                           255           DS.L    1              193  $C1
00000308                           256           DS.L    1              194  $C2
0000030C                           257           DS.L    1              195  $C3
00000310                           258           DS.L    1              196  $C4
00000314                           259           DS.L    1              197  $C5
00000318                           260           DS.L    1              198  $C6
0000031C                           261           DS.L    1              199  $C7
00000320                           262           DS.L    1              200  $C8
00000324                           263           DS.L    1              201  $C9
00000328                           264           DS.L    1              202  $CA
0000032C                           265           DS.L    1              203  $CB
00000330                           266           DS.L    1              204  $CC
00000334                           267           DS.L    1              205  $CD
00000338                           268           DS.L    1              206  $CE
0000033C                           269           DS.L    1              207  $CF
00000340                           270           DS.L    1              208  $D0
00000344                           271           DS.L    1              209  $D1
00000348                           272           DS.L    1              210  $D2
0000034C                           273           DS.L    1              211  $D3
00000350                           274           DS.L    1              212  $D4
00000354                           275           DS.L    1              213  $D5
00000358                           276           DS.L    1              214  $D6
0000035C                           277           DS.L    1              215  $D7
00000360                           278           DS.L    1              216  $D8
00000364                           279           DS.L    1              217  $D9
00000368                           280           DS.L    1              218  $DA
0000036C                           281           DS.L    1              219  $DB
00000370                           282           DS.L    1              220  $DC
00000374                           283           DS.L    1              221  $DD
00000378                           284           DS.L    1              222  $DE
0000037C                           285           DS.L    1              223  $DF
00000380                           286           DS.L    1              224  $E0
00000384                           287           DS.L    1              225  $E1
00000388                           288           DS.L    1              226  $E2
0000038C                           289           DS.L    1              227  $E3
00000390                           290           DS.L    1              228  $E4
00000394                           291           DS.L    1              229  $E5
00000398                           292           DS.L    1              230  $E6
0000039C                           293           DS.L    1              231  $E7
000003A0                           294           DS.L    1              232  $E8
000003A4                           295           DS.L    1              233  $E9
000003A8                           296           DS.L    1              234  $EA
000003AC                           297           DS.L    1              235  $EB
000003B0                           298           DS.L    1              236  $EC
000003B4                           299           DS.L    1              237  $ED
000003B8                           300           DS.L    1              238  $EE
000003BC                           301           DS.L    1              239  $EF
000003C0                           302           DS.L    1              240  $F0
000003C4                           303           DS.L    1              241  $F1
000003C8                           304           DS.L    1              242  $F2
000003CC                           305           DS.L    1              243  $F3
000003D0                           306           DS.L    1              244  $F4
000003D4                           307           DS.L    1              245  $F5
000003D8                           308           DS.L    1              246  $F6
000003DC                           309           DS.L    1              247  $F7
000003E0                           310           DS.L    1              248  $F8
000003E4                           311           DS.L    1              249  $F9
000003E8                           312           DS.L    1              250  $FA
000003EC                           313           DS.L    1              251  $FB
000003F0                           314           DS.L    1              252  $FC
000003F4                           315           DS.L    1              253  $FD            3RD
000003F8                           316           DS.L    1              254  $FE            2ND
000003FC                           317           DS.L    1              255  $FF VECTOR FOR 1ST IPC DISK CONTROLLER
00000400                           318  
00000400                           319  
00000400                           320  *  PSEUDO REGISTERS
00000400                           321  
00000400                           322  REGPC    DS.L    1              USERS PROGRAM COUNTER
00000404                           323  REGSR    DS.L    1              USERS CONDITION CODES
00000408                           324  REGS     DS.L    8              D REGISTERS
00000428                           325           DS.L    7              A0 THROUGH A6 REGISTERS
00000444                           326  REGA7    DS.L    1              A7 REGISTER
00000448                           327  REGUS    DS.L    1              USER STACK
0000044C                           328  
0000044C                           329  
0000044C                           330  
0000044C                           331  ****************************************************************
0000044C                           332  *              WORKING STORAGE                                 *
0000044C                           333  *  NOTE: SUBROUTINE "INITHRAM" ZEROES RAM...                   *
0000044C                           334  *        FROM "BEGHRAM" THROUGH "ENDHRAM" WHEN IT IS EXECUTED  *
0000044C                           335  ****************************************************************
0000044C                           336  
0000044C                           337  BEGHRAM  DS      0              INITIALIZE STARTS HERE
0000044C                           338  
0000044C                           339  OFFSET   DS.L    8              ASSUMED OFFSETS (VIA "R@" FORMAT)
0000046C                           340  MEMSIZE  DS.L    1              MEMORY SIZE IN BYTES
00000470                           341  BPADD    DS.L    8              BREAKPOINT ADDRESSES
00000490                           342  BPTILL   DS.L    1              TEMPORARY BREAKPOINT
00000494                           343  BPCNT    DS.L    9              BREAKPOINT COUNTS
000004B8                           344  BPDATA   DS.W    9              HOLD USER WORDS REPLACED BY TRAP IN SET BP
000004CA                           345  BERRD    DS.L    2              SPECIAL DATA FOR BUS AND ADDR ERROR EXCEPTIONS
000004D2                           346  SAVEAV4  DS.L    1              HOLDS USER'S AV4 VECTOR (WE USE FOR BP)
000004D6                           347  TEMP     DS.L    1              TEMP
000004DA                           348  TRACECNT DS.L    1              TRACE COUNTER (-1=TRACE 1 & RUN)
000004DE                           349  TRACEON  DS.W    1              FLAG FOR TRACE ON
000004E0                           350  BPSTATUS DS.W    1              1=PB ARE IN  0=ARE OUT OF MEMORY
000004E2                           351  ECHOPT1  DS.L    1              ECHO FLAG TO PORT ONE
000004E6                           352  
000004E6                           353  
000004E6                           354  
000004E6                           355  * THE FOLLOWING MUST REMAIN AS IS
000004E6                           356  *  User docomentation DEPENDS upon it!
000004E6                           357  *
000004E6                           358  OPTIONS  DS.W    0              FORCE WORD BOUNDRY
000004E6                           359           DS.B    1              X-ON CHARACTER
000004E7                           360           DS.B    1              X-OFF CHARACTER
000004E8                           361           DS.B    1              NO NO-AUTO LINEFEED
000004E9                           362           DS.B    1              SHORT FORM REGISTER DISPLAY
000004EA                           363           DS.B    1              TM  trailing character
000004EB                           364           DS.B    1              TM  exit character
000004EC  =000004E6                365  XONOFF   EQU     OPTIONS
000004EC  =000004EA                366  TMCHARS  EQU     OPTIONS+4
000004EC                           367  
000004EC                           368  * END of as is section
000004EC                           369  
000004EC                           370  
000004EC                           371  
000004EC                           372  ***************************
000004EC                           373  * TARGET SUPERVISOR STACK *
000004EC                           374  ***************************
000004EC                           375  
000004EC                           376           DS.L    20
0000053C                           377  SSA7     DS.L    1
00000540                           378  
00000540                           379  
00000540                           380  
00000540                           381  **************
00000540                           382  * I/O BUFFER *
00000540                           383  **************
00000540                           384  
00000540                           385  BUFFER   DS.B    BUFFSIZE
000005C0                           386  
000005C0                           387  DUMPTEMP DS.B    80             HEADER TEMP BUFFER
00000610                           388  
00000610                           389  SCREEN1  DS.L    1              PRINT THIS BEFORE TRACE DISPLAY
00000614                           390  SCREEN2  DS.L    1              PRINT THIS AFTER TRACE DISPLAY
00000618                           391  
00000618                           392  NULLPADS DS.B    2              CHARACTER NULL PADS
0000061A                           393  CRPADS   DS.B    2              CARRIAGE RETURN NULL PADS
0000061C                           394  
0000061C                           395  OUTTO    DS.L    1              HOLDS ADDRESS OF OUTPUT ROUTINE
00000620                           396  INFROM   DS.L    1              HOLDS ADDRESS OF INPUT ROUTINE
00000624                           397  ALTSER1  DS.L    1              ALTERNATE SERIAL PORT#1
00000628                           398  ALTSER2  DS.L    1              ALTERNATE SERIAL PORT#2
0000062C                           399  INPORT1  DS.L    1              INPUT ROUTINE ADDRESS
00000630                           400  OUTPORT1 DS.L    1              ADDRESS FOR OUPUT ROUTINE
00000634                           401  INPORT2  DS.L    1              ADDRESS FOR INPUT ROUTINE
00000638                           402  OUTPORT2 DS.L    1              FOR OUTPURT ROUTINE
0000063C                           403  INPORT3  DS.L    1              THIS MIGHT BE FOR TAPE
00000640                           404  OUTPORT3 DS.L    1              THIS MIGHT BE FOR PRINTER
00000644                           405  *INPORT4  DS.L    1              CASSETTE
00000644                           406  *OUTPORT4 DS.L    1              CASSETTE
00000644                           407  *MD1CON   DS.W    1              ACIA PROFILE (PORT1/PORT2)
00000644                           408  PDIPORT  DS.L    1              PDIPORT ADDRESS
00000648                           409  CRTPNT   DS.W    1              OUTPUT TO PRINTER AND CRT
0000064A                           410  TAPENULS DS.B    1              NULLS FOR CASSETTE
0000064B                           411  
0000064B                           412           DS.B    1              PAD BYTE
0000064C                           413  
0000064C                           414  CTLINK   DS.L    1              POINTER TO FIRST TABLE
00000650                           415  
00000650                           416  
00000650                           417  
00000650                           418  ENDHRAM  DS.W    0              MUST START ON WORD BOUNDRY
00000650                           419  
00000650                           420  
00000650                           421  
00000650                           422  *********************
00000650                           423  * SYSTEM STACK AREA *
00000650                           424  *********************
00000650                           425  
00000650                           426           DS.W    0              FORCE ON WORD BOUNDRY
00000650                           427           DS.B    300            ROOM FOR STACK
0000077C                           428  SYSTACK  DS.W    1              START OF STACK (ADDRESS DECREASES)
0000077E                           429           DS.B    4              STRETCHED STACK (USED BY 'SAVE')
00000782                           430  
00000782                           431           DS.B    120            EXTENDED AREA USED IF DISASSEMBLER
000007FA                           432  
000007FA                           433           DS.B    0              LAST LOW MEMORY LOCATION USED + 1
000007FA                           434  
000007FA                           435  
000007FA                           436  *-------------------------------------------------------------------------
000007FA                           437  
000007FA                           438  *CODE68K
00000000=                          439           OFFSET  0
00000000=                          440  ESKB     DS      0
00000000=                          441  TDATA    DS.B    10
0000000A=                          442  TNB      DS.B    1
0000000B=                          443  TLSPEC   DS.B    1
0000000C=                          444  TLENGTH  DS.W    1
0000000E=                          445  PCOUNTER DS.L    1
00000012=                          446  PTROP    DS.L    1              POINTER TO OPERAND
00000016=                          447  PENDOP   DS.L    1              POINTER END OF OPERAND
0000001A=                          448  PTRBUFE  DS.L    1              POINTER TO END OF FORMATED SOURCE
0000001E=                          449  LINK     DS.L    1              SAVE FOR UNLINK
00000022=                          450  ESKE     DS.B    0
00000022=                          451  
00000022=                          452  
00000022=                          453  *DCODE68K
FFFFFFF0=                          454           OFFSET  -LOCVARSZ
FFFFFFF0=                          455  DDATA    DS.L    3
FFFFFFFC=                          456  HISPC    DS.L    1
00000000=                          457  
00000000=                          458  
00000000=                          459  *LOAD
FFFFFFBC=                          460           OFFSET  -((BUFFSIZE/2)+4)
FFFFFFBC=                          461  CC       DS.L    1              CC (BYTE COUNT)
FFFFFFC0=                          462  ADDRESS  DS.L    1              ADDRESS + OFFSET
FFFFFFC4=                          463  LDATA    DS.B    1
FFFFFFC5=                          464  
FFFFFFC5=                          465  
FFFFFFC5=                          466  
FFFFFFC5=                          467  
FFFFFFC5=                          468  *-------------------------------------------------------------------------
FFFFFFC5=                          469  * File B         Init Vectors+Ram                                 05/29/82
FFFFFFC5=                          470  
00008000                           471           ORG     $008000
00008000                           472  
00008000= 00000444                 473  FIRST    DC.L    REGA7          SUPERVISOR STACK
00008004= 00008146                 474           DC.L    START          PROGRAM COUNTER
00008008  6000 0C22                475  V2       BRA.L   TRACE
0000800C                           476  
0000800C                           477  
0000800C                           478  **********************************
0000800C                           479  * INITIALIZE HIGH RAM SUBROUTINE *
0000800C                           480  **********************************
0000800C                           481  
0000800C  41F8 044C                482  INITHRAM LEA     BEGHRAM,A0     START OF WORK RAM (PAST REGISTERS)
00008010  203C 00000204            483           MOVE.L  #(ENDHRAM-BEGHRAM),D0  BYTES TO ZERO
00008016  4281                     484           CLR.L   D1
00008018  10C1                     485  INIT     MOVE.B  D1,(A0)+       ZERO MEMORY
0000801A  5380                     486           SUBQ.L  #1,D0
0000801C  66FA                     487           BNE     INIT
0000801E                           488  
0000801E                           489m          ADDR2MEM BERRMSG,AV2   POINT AT BUS TRAP ERROR MESSAGE ROUTINE
00008026                           490  
00008026                           491m          ADDR2MEM ADDRMSG,AV3   POINT AT ADDRESS TRAP ERROR MESSAGE ROUTINE
0000802E                           492  
0000802E  4E75                     493           RTS
00008030                           494  
00008030                           495  
00008030                           496  ****************************************************
00008030                           497  * SPECIAL HANDLING FOR BUS ERROR AND ADDRESS ERROR *
00008030                           498  ****************************************************
00008030                           499  
00008030  21FC 42555320 0030       500  BERRMSG  MOVE.L  #'BUS ',$30
00008038                           501  
00008038  6008                     502           BRA.S   VECTBE
0000803A                           503  
0000803A  21FC 41444452 0030       504  ADDRMSG  MOVE.L  #'ADDR',$30
00008042                           505  
00008042                           506  
00008042  21DF 04CA                507  VECTBE   MOVE.L  (A7)+,BERRD
00008046  21DF 04CE                508           MOVE.L  (A7)+,BERRD+4
0000804A                           509  
0000804A                           510m          SAVEREGS
0000805A  6100 184E                511           BSR     FIXBUF
0000805E  3CFC 0D0A                512           MOVE.W  #$D0A,(A6)+
00008062  3038 04CA                513           MOVE.W  BERRD,D0
00008066  6100 157A                514           BSR     PNT4HX         FORMAT FUNCTION CODE
0000806A                           515  
0000806A  1CFC 0020                516           MOVE.B  #BLANK,(A6)+   SPACE
0000806E  2038 04CC                517           MOVE.L  BERRD+2,D0
00008072  6100 1560                518           BSR     PNT8HX         FORMAT ACCESS ADDRESS
00008076                           519  
00008076  1CFC 0020                520           MOVE.B  #BLANK,(A6)+   SPACE
0000807A  3038 04D0                521           MOVE.W  BERRD+6,D0
0000807E  6100 1562                522           BSR     PNT4HX         FORMAT INSTRUCTION REGISTER
00008082                           523  
00008082  6100 17B8                524           BSR     OUTPUT
00008086  6000 1528                525           BRA     EVECT2         GO DISPLAY REGISTERS & PROMPT
0000808A                           526  
0000808A= 53 59 4E 54 41 58 20     527  MSG008   DC.B    'SYNTAX '
00008091                           528  
00008091= 45 52 52 4F 52 20        529  MSG008E  DC.B    'ERROR '
00008097                           530  
00008097= 04                       531  MSGEOT   DC.B    EOT
00008098                           532  
00008098= 57 48 41 54 04           533  MSG021   DC.B    'WHAT',EOT
0000809D                           534  
0000809D= 00                       535           DC.B    0              PAD BYTE
0000809E                           536  
0000809E                           537  
0000809E                           538  * PRINT WHAT
0000809E                           539  
0000809E  4BFA FFF8                540  WHAT     LEA     MSG021(PC),A5  PRINT 'WHAT' AND ENTER MACSBUG
000080A2  614E                     541  WHAT93   BSR.S   FIXDATA
000080A4  4278 04DE                542           CLR.W   TRACEON
000080A8  6100 1778                543  MSG      BSR     OUT1CR
000080AC  6000 0116                544           BRA     MACSBUG
000080B0                           545  
000080B0                           546  
000080B0                           547  * PRINT ERROR
000080B0                           548  
000080B0  4BFA FFDF                549  ERROR    LEA     MSG008E(PC),A5
000080B4  60EC                     550           BRA     WHAT93
000080B6                           551  
000080B6  4BFA FFD2                552  SYNTAX   LEA     MSG008(PC),A5  'SYNTAX ERROR'
000080BA  60E6                     553           BRA     WHAT93
000080BC                           554  
000080BC                           555  * FORMAT PHYSICAL ADDRESS FROM (D0)
000080BC  4BFA 0022                556  PPHY     LEA     MSG019(PC),A5
000080C0  6130                     557           BSR.S   FIXDATA
000080C2  6012                     558           BRA.S   P2PHY2
000080C4                           559  
000080C4                           560  * FORMAT TWO PHYSICAL ADDRESSES FROM (A0) & (A1)
000080C4  4BFA 001A                561  P2PHY    LEA     MSG019(PC),A5  'PHYSICAL ADDRESS='
000080C8  6128                     562           BSR.S   FIXDATA
000080CA  2008                     563           MOVE.L  A0,D0
000080CC  6100 1506                564           BSR     PNT8HX         FORMAT ADDR1
000080D0  1CFC 0020                565           MOVE.B  #BLANK,(A6)+   SPACE FOR FORMATING
000080D4  2009                     566           MOVE.L  A1,D0
000080D6  6100 14FC                567  P2PHY2   BSR     PNT8HX         FORMAT ADDR2
000080DA  6100 1746                568           BSR     OUT1CR         DISPLAY IT
000080DE  4E75                     569           RTS
000080E0                           570  
000080E0= 50 48 59 53 49 43 ...    571  MSG019   DC.B    'PHYSICAL ADDRESS=',EOT
000080F2                           572  
000080F2                           573  
000080F2                           574  
000080F2                           575  
000080F2                           576  
000080F2                           577  *************************************************************
000080F2                           578  * -FIXDATA- SUBROUTINE...  MOVES MESSAGE POINTED TO BY (A5) *
000080F2                           579  *                          INTO "BUFFER". EOT, ($04), ENDS  *
000080F2                           580  *                          THE MOVE. AT COMPLETION (A5) IS  *
000080F2                           581  *                          POINTING AT THE BEGINNING, (A6)  *
000080F2                           582  *                          POINTS AT END.                   *
000080F2                           583  *************************************************************
000080F2                           584  
000080F2  4DF8 0540                585  FIXDATA  LEA     BUFFER,A6
000080F6  0C15 0004                586  FIXDADD  CMPI.B  #EOT,(A5)
000080FA  6704                     587           BEQ.S   FIXD2
000080FC  1CDD                     588           MOVE.B  (A5)+,(A6)+
000080FE  60F6                     589           BRA     FIXDADD
00008100  4BF8 0540                590  FIXD2    LEA     BUFFER,A5
00008104  4E75                     591           RTS
00008106                           592  
00008106                           593  
00008106                           594  ************************************************************
00008106                           595  * -FIXDCRLF- SUBROUTINE INSERTS A CARRIAGE RETURN AND LINE *
00008106                           596  *                       FEED IN FRONT OF THE TEXT, THEN    *
00008106                           597  *                       USES THE REMAINING PORTION OF THE  *
00008106                           598  *                       FIXDATA.                           *
00008106                           599  ************************************************************
00008106                           600  
00008106  4DF8 0540                601  FIXDCRLF LEA     BUFFER,A6
0000810A  3CFC 0D0A                602           MOVE.W  #$0D0A,(A6)+   CR,LF
0000810E  60E6                     603           BRA     FIXDADD
00008110                           604  
00008110                           605  
00008110                           606  
00008110                           607  
00008110                           608  *-------------------------------------------------------------------------
00008110                           609  * File E         VERSAbug entry point                             01/08/81
00008110                           610  
00008110                           611  **********************
00008110                           612  * INITIALIZE VECTORS *
00008110                           613  **********************
00008110                           614  *                               Set most vectors to point at "????" routine
00008110  41F8 0008                615  INITVECT LEA     8,A0           Skip (Restart) STACK & ADDRESS vectors
00008114  43FA 1482                616           LEA     ABORTE(PC),A1  A1 = "Default" TRAP ERROR routine address
00008118                           617  
00008118  20C9                     618  INIT0    MOVE.L  A1,(A0)+       INITIALIZE VECTOR
0000811A  B1FC 00000400            619           CMPA.L  #$400,A0       Done?
00008120  6BF6                     620           BMI.S   INIT0          *
00008122  4E75                     621           RTS
00008124                           622  
00008124                           623  
00008124                           624  * SPECIAL ENTRY THAT DOES NOT CHANGE VECTORS
00008124                           625  
00008124  48B8 0001 0406           626  START1S  MOVEM.W D0,REGSR+2     Assure good parity.
0000812A  40F8 0406                627           MOVE.W  SR,REGSR+2     SAVE TARGET'S STATUS REGISTER
0000812E  21CF 0444                628           MOVE.L  A7,REGA7       SAVE TARGET'S STACK
00008132  21D7 0400                629           MOVE.L  (A7),REGPC     .PROGRAM COUNTER
00008136  4FF8 0444                630           LEA     REGA7,A7
0000813A  48E7 FFFE                631           MOVEM.L D0-D7/A0-A6,-(A7) .REGISTERS
0000813E  4FF8 077C                632           LEA     SYSTACK,A7
00008142  6000 0020                633           BRA     START11
00008146                           634  
00008146                           635  
00008146                           636  ************************
00008146                           637  *    INITIALIZATION    *
00008146                           638  ************************
00008146                           639  
00008146                           640  * SAVE PROCESSOR REGISTERS (EXCEPT A7 & PC)
00008146                           641  
00008146  48B8 0001 0406           642  START    MOVEM.W D0,REGSR+2     Assure good parity
0000814C  40F8 0406                643           MOVE.W  SR,REGSR+2     SAVE STATUS REGISTER
00008150  48E7 FFFE                644           MOVEM.L D0-D7/A0-A6,-(A7)
00008154                           645  
00008154  4FF8 077C                646           LEA     SYSTACK,A7     SET UP STACK
00008158  21CF 0444                647           MOVE.L  A7,REGA7
0000815C                           648  
0000815C  4281                     649           CLR.L   D1
0000815E  21C1 0400                650           MOVE.L  D1,REGPC       PC = 000000
00008162                           651  
00008162  61AC                     652           BSR     INITVECT
00008164                           653  
00008164                           654  
00008164  46FC 2700                655  START11  MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
00008168                           656  
00008168  48E7 C000                657           MOVEM.L  D0-D1,-(A7)
0000816C  4201                     658           CLR.B    D1
0000816E  103C 000C                659           MOVE.B   #12,D0         EASy68K trap task (turn off keyboard echo)
00008172  4E4F                     660           TRAP     #15
00008174  4CDF 0003                661           MOVEM.L  (A7)+,D0-D1
00008178                           662  
00008178  4E68                     663           MOVE.L  USP,A0
0000817A  21C8 0448                664           MOVE.L  A0,REGUS       USER STACK
0000817E                           665  
0000817E  6100 FE8C                666           BSR     INITHRAM       ZERO (INITIALIZE) HIGH RAM
00008182                           667  
00008182                           668  
00008182                           669  * VECTMSG.SA
00008182  6100 0168                670           BSR     INITVMSG
00008186                           671  
00008186                           672  
00008186                           673  * H.SA
00008186                           674m          ADDR2MEM CHKBP,AV4     ILLEGAL INSTRUCTION
0000818E                           675  
0000818E                           676  
0000818E                           677  * TM.SA
0000818E  31FC 1801 04EA           678           MOVE.W  #$1801,TMCHARS CNTLX,CNTL/A
00008194                           679  
00008194                           680  
00008194                           681  * W.SA
00008194                           682m          ADDR2MEM  ABORTB,AV31  ABORT
0000819C                           683  
0000819C                           684  
0000819C                           685  * Y.SA
0000819C                           686m          ADDR2MEM  OUT1CR0,OUTPORT1 INITIALIZE I/O ROUTINES
000081A4                           687m          ADDR2MEM  PORTIN10,INPORT1
000081AC                           688  
000081AC                           689  
000081AC                           690  * INITIALIZE XON/XOFF (READER ON / READER OFF)
000081AC                           691  *            AUTO-LINE FEED OVERRIDE
000081AC                           692  
000081AC  21FC 00000000 04E6       693           MOVE.L  #$00000000,XONOFF
000081B4                           694  
000081B4                           695  * TRAP14.SA
000081B4                           696m          ADDR2MEM  TRAP14,AV46
000081BC  21FC FE00B716 064C       697           MOVE.L  #(254<<24)+CT,CTLINK
000081C4                           698  
000081C4                           699  
000081C4                           700  ************************************************************************
000081C4                           701  *                    V E R S I O N   N U M B E R   A N D   P R O M P T *
000081C4                           702  ************************************************************************
000081C4                           703  
000081C4  46FC 2700                704  MACSBUG  MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
000081C8  4FF8 077C                705           LEA     SYSTACK,A7     RESTORE SYSTEM STACK
000081CC  6100 0B40                706           BSR     SWAPOUT        GET BP OUT OF USER MEMORY
000081D0                           707  
000081D0  42B8 0490                708           CLR.L   BPTILL         GET RID OF 'TILL' BREAKPOINT
000081D4  42B8 061C                709           CLR.L   OUTTO          INITIALIZE I/O TO DEFAULT
000081D8  42B8 0620                710           CLR.L   INFROM         INITIALIZE I/O TO DEFAULT
000081DC  4238 04E2                711           CLR.B   ECHOPT1        NO ECHO TO PORT1
000081E0                           712  
000081E0  4BFA 00AA                713           LEA     MSG001(PC),A5  > (Prompt)
000081E4  6100 FF0C                714           BSR     FIXDATA
000081E8                           715  
000081E8  4A78 04DE                716           TST.W   TRACEON        SEE IF IN TRACE MODE
000081EC  6704                     717           BEQ.S   MACSBUG1
000081EE  1CFC 003A                718           MOVE.B  #':',(A6)+     IN TRACE MODE
000081F2  1CFC 003E                719  MACSBUG1 MOVE.B  #'>',(A6)+     PROMPT
000081F6  1CFC 0020                720           MOVE.B  #BLANK,(A6)+   .. SPACE
000081FA  6100 1640                721           BSR     OUTPUT         GO PRINT IT
000081FE                           722  
000081FE                           723  * INPUT LINE
000081FE  6100 16AA                724           BSR     FIXBUF         GET READY FOR INPUT
00008202  6100 16AE                725           BSR     PORTIN1        GET A COMMAND
00008206  1CBC 0020                726  DECODE6  MOVE.B  #BLANK,(A6)    BLANK OUT END+1
0000820A                           727  
0000820A                           728  *  DECODE A COMMAND
0000820A                           729  *
0000820A                           730  *  DECODE SPECIAL CHARACTER USAGE:
0000820A                           731  *    LEADING SPACES IGNORED
0000820A                           732  *    LEADING NULLS IGNORED
0000820A                           733  *    IF SECOND CHAR  *  CHAR CAN BE ANY CHAR
0000820A                           734  
0000820A  BBCE                     735           CMP.L   A6,A5          SEE IF ANYTHING ENTERED
0000820C  6B08                     736           BMI.S   DECODE1
0000820E  4A78 04DE                737           TST.W   TRACEON        SEE IF IN TRACE MODE
00008212  6600 02FA                738           BNE     TCMDHOT        DIRECT TO TRACE 1 COMMAND
00008216                           739  
00008216  BBCE                     740  DECODE1  CMP.L   A6,A5          SEE IF AT END OF BUFFER
00008218  6200 FE84                741           BHI     WHAT           GO TO 'WHAT' IF CONFUSED
0000821C  1015                     742           MOVE.B  (A5),D0        GRAB FIRST CHARACTER
0000821E  0C00 002A                743           CMPI.B  #'*',D0        SEND LINE COMMAND
00008222  6608                     744           BNE.S   DECODE10
00008224  528D                     745           ADDQ.L  #1,A5          GET PAST PHOENY PROMPT
00008226  6100 161E                746           BSR     OUTPUT2        SEND LINE+CR (NO LF) TO PORT2
0000822A  6098                     747           BRA     MACSBUG        REENTER COMMAND MODE
0000822C                           748  
0000822C  0C00 0020                749  DECODE10 CMPI.B  #$20,D0        IGNORE LEADING SPACES
00008230  6604                     750           BNE.S   DECODE2        WHERE TO GO IF NOT A SPACE
00008232  528D                     751           ADDQ.L  #1,A5          BUMP START OF BUFFER
00008234  60E0                     752           BRA.S   DECODE1        TRY NEXT CHARACTER
00008236                           753  *
00008236  1215                     754  DECODE2  MOVE.B  (A5),D1        GET 2 LETTERS OF COMMAND
00008238  E149                     755           LSL.W   #8,D1          MAKE ROOM FOR SECOND CHAR
0000823A  122D 0001                756           MOVE.B  1(A5),D1       GET SECOND CHAR
0000823E  4283                     757           CLR.L   D3             D3 = CLEAR "NO" SWITCH
00008240                           758  
00008240  43FA 0058                759  DECODE21 LEA     SOLIST(PC),A1  A1 = COMMAND LIST ADDRESS
00008244  3419                     760  DECODE4  MOVE.W  (A1)+,D2       D2 = 2 CHAR COMMAND FROM LIST
00008246  4280                     761           CLR.L   D0             CLEAR HIGH BITS
00008248  3019                     762           MOVE.W  (A1)+,D0       D0 = OFFSET FROM START OF ROM
0000824A                           763  
0000824A  4A83                     764           TST.L   D3
0000824C  6704                     765           BEQ.S   DECODE41       NOT A "NO"
0000824E  4A02                     766           TST.B   D2             IS "NO" OPTION SUPPORTED THIS COMMAND?
00008250  6AF2                     767           BPL     DECODE4        NO...THEN RUN OUT OF COMMANDS
00008252                           768  
00008252  0242 7F7F                769  DECODE41 ANDI.W  #$7F7F,D2      CLEAR "INVISABLE" & "NO" BITS
00008256  0C42 7F7F                770           CMPI.W  #$7F7F,D2      END OF LIST?
0000825A  6700 FE42                771           BEQ     WHAT           Command not found
0000825E                           772  
0000825E  0C02 002A                773           CMPI.B  #'*',D2        SEE IF DON'T CARE CHARACTER
00008262  6602                     774           BNE.S   DECODE3
00008264  1401                     775           MOVE.B  D1,D2          DEFAULT
00008266                           776  
00008266  B441                     777  DECODE3  CMP.W   D1,D2          Command from table = the input?
00008268  66DA                     778           BNE     DECODE4        COMMAND NOT FOUND
0000826A                           779  
0000826A  4278 04DE                780           CLR.W   TRACEON        TURN OFF TRACE MODE
0000826E                           781  
0000826E  548D                     782           ADDQ.L  #2,A5          POINT A5 PAST 2 DIGIT COMMAND
00008270                           783  
00008270  487A FD8E                784           PEA     FIRST(PC)      BUILD GO TO ADDRESS
00008274  D197                     785           ADD.L   D0,(A7)        ON STACK.
00008276  D797                     786           ADD.L   D3,(A7)
00008278                           787  
00008278  205F                     788           MOVE.L  (A7)+,A0       GO TO COMMAND
0000827A  4E90                     789           JSR     (A0)           * SAVE MARK FOR RETURN
0000827C  6000 FF46                790           BRA     MACSBUG        *  RETURN HERE
00008280                           791  
00008280                           792  *
00008280                           793  *    NO COMMAND
00008280                           794  *
00008280  76FC                     795  NOCMD    MOVEQ   #-4,D3         SET "NO" SWITCH
00008282  1215                     796           MOVE.B  (A5),D1        MOVE CHAR #3
00008284  E141                     797           ASL.W   #8,D1          MOVE OVER 1 CHAR
00008286  122D 0001                798           MOVE.B  1(A5),D1       MOVE CHAR #4
0000828A  60B4                     799           BRA     DECODE21       WHICH "NO" COMMAND?
0000828C                           800  
0000828C                           801  
0000828C                           802  *-------------------------------------------------------------------------
0000828C                           803  * File COMMANDS  Command list                                     06/20/82
0000828C                           804  
0000828C= 0D 0A 54 55 54 4F ...    805  MSG001   DC.B    CR,LF,'TUTOR  1.3 ',EOT    "PROMPT"
0000829A                           806  
0000829A                           807  *******************************************************
0000829A                           808  * C O P Y R I G H T . 1 9 8 1 . B Y . M O T O R O L A *
0000829A                           809  *******************************************************
0000829A                           810  
0000829A                           811  * VERSAbug command generation macro
0000829A                           812  CMD      MACRO
0000829A                           813  FLAG     SET     0              *
0000829A                           814           IFC     '\2','HELP=NO'
0000829A                           815  FLAG     SET     FLAG+$8000     * "Help" will not display this command
0000829A                           816           ENDC
0000829A                           817           IFC     '\3','HELP=NO'
0000829A                           818  FLAG     SET     FLAG+$8000     * "Help" will not display this command
0000829A                           819           ENDC
0000829A                           820           IFC     '\2','NORTN=YES'
0000829A                           821  FLAG     SET     FLAG+$80       * "NO\1".Command
0000829A                           822           ENDC
0000829A                           823           IFC     '\3','NORTN=YES'
0000829A                           824  FLAG     SET     FLAG+$80       * "NO\1".Command
0000829A                           825           ENDC
0000829A                           826           IFC     '\1','PER'     Check for the "PER" command
0000829A                           827           DC.W    '.*'+FLAG      * Reg commands (.A2 .D6 .PC .R0 etc.)
0000829A                           828           DC.W    \1CMD-FIRST    *************************************
0000829A                           829           ENDC
0000829A                           830           IFNC    '\1','PER'     If not PERCMD...
0000829A                           831           IFEQ    '\1'&($00FF)   If 1 digit code, 2nd will be a blank.
0000829A                           832           DC.W    '\1 '+FLAG     * "\1"....Command  -  -  (Single Digit)
0000829A                           833           ENDC
0000829A                           834           IFNE    '\1'&($00FF)   If 2 digit code, leave as is.
0000829A                           835           DC.W    '\1'+FLAG      * "\1"...Command
0000829A                           836           ENDC
0000829A                           837           DC.W    \1CMD-FIRST    *************************************
0000829A                           838           ENDC
0000829A                           839           ENDM
0000829A                           840  
0000829A                           841  SOLIST   DS      0              Start Of LIST
0000829A                           842m          CMD     PER,HELP=NO,X
0000829E                           843m          CMD     NO,HELP=NO,X
000082A2                           844m          CMD     BF,X,X
000082A6                           845m          CMD     BM,X,X
000082AA                           846m          CMD     BR,NORTN=YES,X
000082AE                           847m          CMD     BS,X,X
000082B2                           848m          CMD     BT,X,X
000082B6                           849m          CMD     DC,X,X
000082BA                           850m          CMD     DF,X,X
000082BE                           851m          CMD     DU,X,X
000082C2                           852m          CMD     GD,X,X
000082C6                           853m          CMD     GO,X,X
000082CA                           854m          CMD     GT,X,X
000082CE                           855m          CMD     HE,X,X
000082D2                           856m          CMD     MD,X,X
000082D6                           857m          CMD     MM,X,X
000082DA                           858m          CMD     MS,X,X
000082DE                           859m          CMD     OF,X,X
000082E2                           860  *         CMD     TM,X,X
000082E2                           861m          CMD     TR,X,X
000082E6                           862m          CMD     TT,X,X
000082EA= FFFF                     863           DC.W      $FFFF     End of list indicator
000082EC                           864  
000082EC                           865  
000082EC                           866  *-------------------------------------------------------------------------
000082EC                           867  * File VECTMSG   Messages for vectors                             05/29/82
000082EC                           868  
000082EC                           869  ************************************************************
000082EC                           870  *Reprogram some VECTORS to specific ERROR handler routines *
000082EC                           871  ************************************************************
000082EC                           872  
000082EC  41FA 0026                873  INITVMSG LEA     VECT(PC),A0    A0 = START OF VECTOR TABLE
000082F0  43F8 0010                874           LEA     AV4,A1         A1 = FIRST VECTOR TO INITIALIZE
000082F4  700A                     875           MOVEQ   #10,D0         D0 = COUNT
000082F6  22C8                     876  VECTI    MOVE.L  A0,(A1)+       MOVE ADDRESS TO VECTOR
000082F8  D1C0                     877           ADD.L   D0,A0          BUMP ADDRESS
000082FA  B3FC 00000030            878           CMPA.L  #AV11+4,A1
00008300  66F4                     879           BNE     VECTI
00008302                           880  
00008302  43F8 0060                881           LEA     AV24,A1        A1 = NEXT VECTOR TO INITIALIZE
00008306  22C8                     882  VECTI2   MOVE.L  A0,(A1)+       MOVE ADDRESS TO VECTOR
00008308  D1C0                     883           ADD.L   D0,A0          BUMP ADDRESS
0000830A  B3FC 000000C0            884           CMPA.L  #AV48,A1
00008310  66F4                     885           BNE     VECTI2
00008312  4E75                     886           RTS
00008314                           887  
00008314                           888  
00008314                           889  *************************************************************************
00008314                           890  * STANDARD VECTOR "MESSAGE" HANDLING ROUTINE ($30 IS TEMP STORAGE AREA) *
00008314                           891  *************************************************************************
00008314                           892  
00008314  21FC 4F50434F 0030       893  VECT     MOVE.L  #'OPCO',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000831C                           894  
0000831C  604E                     895           BRA.S   EVECT5
0000831E  21FC 44495630 0030       896           MOVE.L  #'DIV0',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008326                           897  
00008326  6044                     898           BRA.S   EVECT5
00008328  21FC 4348434B 0030       899           MOVE.L  #'CHCK',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008330                           900  
00008330  603A                     901           BRA.S   EVECT5
00008332  21FC 54502056 0030       902           MOVE.L  #'TP V',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000833A                           903  
0000833A  6030                     904           BRA.S   EVECT5
0000833C  21FC 50524956 0030       905           MOVE.L  #'PRIV',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008344                           906  
00008344  6026                     907           BRA.S   EVECT5
00008346  21FC 54524143 0030       908           MOVE.L  #'TRAC',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000834E                           909  
0000834E  601C                     910           BRA.S   EVECT5
00008350  21FC 31303130 0030       911           MOVE.L  #'1010',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008358                           912  
00008358  6012                     913           BRA.S   EVECT5
0000835A  21FC 31313131 0030       914           MOVE.L  #'1111',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008362                           915  
00008362  6008                     916           BRA.S   EVECT5
00008364  21FC 53505552 0030       917           MOVE.L  #'SPUR',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000836C                           918  
0000836C  6044                     919  EVECT5   BRA.S   EVECT6
0000836E  21FC 41562331 0030       920           MOVE.L  #'AV#1',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008376                           921  
00008376  603A                     922           BRA.S   EVECT6
00008378  21FC 41562332 0030       923           MOVE.L  #'AV#2',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008380                           924  
00008380  6030                     925           BRA.S   EVECT6
00008382  21FC 41562333 0030       926           MOVE.L  #'AV#3',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000838A                           927  
0000838A  6026                     928           BRA.S   EVECT6
0000838C  21FC 41562334 0030       929           MOVE.L  #'AV#4',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008394                           930  
00008394  601C                     931           BRA.S   EVECT6
00008396  21FC 41562335 0030       932           MOVE.L  #'AV#5',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000839E                           933  
0000839E  6012                     934           BRA.S   EVECT6
000083A0  21FC 41562336 0030       935           MOVE.L  #'AV#6',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083A8                           936  
000083A8  6008                     937           BRA.S   EVECT6
000083AA  21FC 41562337 0030       938           MOVE.L  #'AV#7',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083B2                           939  
000083B2  604E                     940  EVECT6   BRA.S   EVECT7
000083B4  21FC 55542030 0030       941           MOVE.L  #'UT 0',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083BC                           942  
000083BC  6044                     943           BRA.S   EVECT7
000083BE  21FC 55542031 0030       944           MOVE.L  #'UT 1',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083C6                           945  
000083C6  603A                     946           BRA.S   EVECT7
000083C8  21FC 55542032 0030       947           MOVE.L  #'UT 2',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083D0                           948  
000083D0  6030                     949           BRA.S   EVECT7
000083D2  21FC 55542033 0030       950           MOVE.L  #'UT 3',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083DA                           951  
000083DA  6026                     952           BRA.S   EVECT7
000083DC  21FC 55542034 0030       953           MOVE.L  #'UT 4',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083E4                           954  
000083E4  601C                     955           BRA.S   EVECT7
000083E6  21FC 55542035 0030       956           MOVE.L  #'UT 5',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083EE                           957  
000083EE  6012                     958           BRA.S   EVECT7
000083F0  21FC 55542036 0030       959           MOVE.L  #'UT 6',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
000083F8                           960  
000083F8  6008                     961           BRA.S   EVECT7
000083FA  21FC 55542037 0030       962           MOVE.L  #'UT 7',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008402                           963  
00008402  604E                     964  EVECT7   BRA.S   EVECT
00008404  21FC 55542038 0030       965           MOVE.L  #'UT 8',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000840C                           966  
0000840C  6044                     967           BRA.S   EVECT
0000840E  21FC 55542039 0030       968           MOVE.L  #'UT 9',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008416                           969  
00008416  603A                     970           BRA.S   EVECT
00008418  21FC 55542041 0030       971           MOVE.L  #'UT A',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008420                           972  
00008420  6030                     973           BRA.S   EVECT
00008422  21FC 55542042 0030       974           MOVE.L  #'UT B',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000842A                           975  
0000842A  6026                     976           BRA.S   EVECT
0000842C  21FC 55542043 0030       977           MOVE.L  #'UT C',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008434                           978  
00008434  601C                     979           BRA.S   EVECT
00008436  21FC 55542044 0030       980           MOVE.L  #'UT D',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
0000843E                           981  
0000843E  6012                     982           BRA.S   EVECT
00008440  21FC 55542045 0030       983           MOVE.L  #'UT E',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008448                           984  
00008448  6108                     985           BSR.S   EVECT
0000844A  21FC 55542046 0030       986           MOVE.L  #'UT F',$30    MOVE TO $30, USE SHORT BRANCHES AND PRINT IT
00008452                           987  
00008452                           988  
00008452                           989  *
00008452                           990  *    SAVE REGISTERS AND PRINT VECTOR MSG
00008452                           991  *
00008452  6000 114C                992  EVECT    BRA     EVECTL
00008456                           993  
00008456                           994  
00008456                           995  
00008456                           996  
00008456                           997  *-------------------------------------------------------------------------
00008456                           998  * File BF        Block Fill command                               06/16/82
00008456                           999  
00008456                          1000  *  BLOCK FILL    ADDRESS1 ADDRESS2 WORD-DATA
00008456                          1001  
00008456  41FA FC5E               1002  BFCMD    LEA     SYNTAX(PC),A0
0000845A  6100 124A               1003           BSR     FNEXTF
0000845E  6100 064C               1004           BSR     GETA
00008462  6100 1260               1005           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
00008466  2C00                    1006           MOVE.L  D0,D6          D6 = FROM BEGIN ADDRESS
00008468                          1007  
00008468  6100 123C               1008           BSR     FNEXTF
0000846C  6100 063E               1009           BSR     GETA
00008470  6100 1252               1010           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
00008474  2240                    1011           MOVE.L  D0,A1          A1 = FROM END ADDRESS
00008476                          1012  
00008476  6100 122E               1013           BSR     FNEXTF         FIND NEXT FIELD
0000847A  6100 12AC               1014           BSR     GETNUMA        D0 = VALUE
0000847E  2E00                    1015           MOVE.L  D0,D7
00008480                          1016  
00008480  2046                    1017           MOVE.L  D6,A0          A0 = FROM BEGIN ADDRESS
00008482  6100 FC40               1018           BSR     P2PHY          DISPLAY ADDRESSES
00008486  B3C8                    1019           CMP.L   A0,A1
00008488  6500 FC2C               1020           BCS     SYNTAX         END ADDR TOO SMALL
0000848C                          1021  
0000848C  0C87 00010000           1022           CMPI.L  #$10000,D7
00008492  6400 FC22               1023           BCC     SYNTAX         WORD OVERFLOW
00008496                          1024  
00008496                          1025  BFCMD11
00008496  3087                    1026           MOVE.W  D7,(A0)        STORE DATA
00008498  3218                    1027           MOVE.W  (A0)+,D1
0000849A  B247                    1028           CMP.W   D7,D1          VERIFY DATA
0000849C  6600 0DB6               1029           BNE     MM90           'DATA DID NOT STORE'
000084A0                          1030  
000084A0  B3C8                    1031           CMP.L   A0,A1
000084A2  64F2                    1032           BCC     BFCMD11
000084A4  6000 FD1E               1033           BRA     MACSBUG
000084A8                          1034  
000084A8                          1035  
000084A8                          1036  
000084A8                          1037  
000084A8                          1038  *-------------------------------------------------------------------------
000084A8                          1039  * File BM        BM (Block Move) Command                          11/27/81
000084A8                          1040  
000084A8                          1041  *  BLOCK MOVE
000084A8                          1042  
000084A8  41FA FC0C               1043  BMCMD    LEA     SYNTAX(PC),A0
000084AC  6100 11F8               1044           BSR     FNEXTF
000084B0  6100 05FA               1045           BSR     GETA
000084B4  2640                    1046           MOVE.L  D0,A3          A3 = FROM BEGIN ADDRESS
000084B6                          1047  
000084B6  6100 11EE               1048           BSR     FNEXTF
000084BA  6100 05F0               1049           BSR     GETA
000084BE  2240                    1050           MOVE.L  D0,A1          A1 = FROM END ADDRESS
000084C0                          1051  
000084C0  6100 11E4               1052           BSR     FNEXTF
000084C4  6100 05E6               1053           BSR     GETA
000084C8  2440                    1054           MOVE.L  D0,A2          A2 = TO BEGIN ADDRESS
000084CA                          1055  
000084CA  204B                    1056           MOVE.L  A3,A0
000084CC  6100 FBF6               1057           BSR     P2PHY          PRINT ADDRESSES (A0) & (A1)
000084D0  200A                    1058           MOVE.L  A2,D0
000084D2  6100 FBE8               1059           BSR     PPHY           PRINT TO ADDRESS
000084D6                          1060  
000084D6  2209                    1061           MOVE.L  A1,D1
000084D8  928B                    1062           SUB.L   A3,D1          D1 =  SIZE - 1
000084DA  6500 FBDA               1063           BCS     SYNTAX         END LESS THAN BEGIN
000084DE  5281                    1064           ADDQ.L  #1,D1          D1 = COUNT (SIZE)
000084E0                          1065  
000084E0  B5CB                    1066           CMP.L   A3,A2
000084E2  6408                    1067           BCC.S   BM122          MOVING LOW TO HIGH
000084E4                          1068  
000084E4  14DB                    1069  BM112    MOVE.B  (A3)+,(A2)+    MOVING HIGH TO LOW
000084E6  5381                    1070           SUBQ.L  #1,D1          COUNT
000084E8  66FA                    1071           BNE     BM112
000084EA  600A                    1072           BRA.S   BM142
000084EC                          1073  
000084EC  D7C1                    1074  BM122    ADD.L   D1,A3          MOVING LOW TO HIGH
000084EE  D5C1                    1075           ADD.L   D1,A2
000084F0  1523                    1076  BM132    MOVE.B  -(A3),-(A2)
000084F2  5381                    1077           SUBQ.L  #1,D1
000084F4  66FA                    1078           BNE     BM132
000084F6  6000 FCCC               1079  BM142    BRA     MACSBUG
000084FA                          1080  
000084FA                          1081  
000084FA                          1082  
000084FA                          1083  *
000084FA                          1084  * ** TR **   TRACE COMMAND
000084FA                          1085  *
000084FA                          1086  
000084FA  41FA 0012               1087  TRCMD    LEA     TCMDHOT(PC),A0 IF NO PARAMTERS
000084FE  6100 11A6               1088           BSR     FNEXTF         FIND NEXT FIELD
00008502  6100 1224               1089           BSR     GETNUMA        FIND NUMBER OF INST TO TRACE
00008506  6100 11C2               1090           BSR     CKADDR         INSURE 24 BITS OR LESS
0000850A  4A80                    1091           TST.L   D0
0000850C  6602                    1092           BNE.S   TCMD15
0000850E                          1093  
0000850E                          1094  TCMDHOT  DS      0              SPECIAL ENTRY FROM DECODE
0000850E  7001                    1095           MOVEQ   #1,D0          ZERO; MAKE TRACE ONE
00008510  21C0 04DA               1096  TCMD15   MOVE.L  D0,TRACECNT
00008514  6022                    1097           BRA.S   TRACE2
00008516                          1098  
00008516                          1099  
00008516                          1100  *
00008516                          1101  * ** TT ** "TRACE TILL" COMMAND
00008516                          1102  *
00008516                          1103  
00008516  41FA FB9E               1104  TTCMD    LEA     SYNTAX(PC),A0
0000851A  6100 118A               1105           BSR     FNEXTF         FIND NEXT FIELD
0000851E  6100 058C               1106           BSR     GETA           GET ADDRESS
00008522  6100 11A0               1107           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
00008526                          1108  
00008526  2C00                    1109           MOVE.L  D0,D6
00008528  6100 FB92               1110           BSR     PPHY           DISPLAY TILL ADDRESS
0000852C                          1111  
0000852C  21C6 0490               1112           MOVE.L  D6,BPTILL      9TH BP
00008530  21FC 0000FFFF 04DA      1113           MOVE.L  #$FFFF,TRACECNT  SET FOR A VERY LONG TIME
00008538                          1114  
00008538                          1115  
00008538  31FC FFFF 04DE          1116  TRACE2   MOVE.W  #-1,TRACEON    FOR DECODE OF NEXT COMMAND
0000853E                          1117  
0000853E  2038 0400               1118           MOVE.L  REGPC,D0
00008542  6100 FB78               1119           BSR     PPHY           DISPLAY START (PC) ADDRESS
00008546  6000 0778               1120           BRA     UNTRACE
0000854A                          1121  
0000854A                          1122  
0000854A                          1123  *
0000854A                          1124  *   ***GT***  RUN PROGRAM TO TEMP BREAKPOINT
0000854A                          1125  *
0000854A                          1126  
0000854A  41FA FB6A               1127  GTCMD    LEA     SYNTAX(PC),A0  GET NUMBER ELSE PRINT "WHAT"
0000854E  6100 1156               1128           BSR     FNEXTF         FIND NEXT FIELD
00008552  6100 0558               1129           BSR     GETA           GET ADDRESS
00008556  6100 116C               1130           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
0000855A  2C00                    1131           MOVE.L  D0,D6          D6 = UNTIL ADDRESS
0000855C  6100 FB5E               1132           BSR     PPHY           PRINT PHYSICAL ADDRESS
00008560                          1133  
00008560                          1134  * IF TILL ADDRESS IN BREAKPOINT TABLE; DISPLAY WHAT
00008560                          1135  
00008560  41F8 0470               1136           LEA     BPADD,A0       A0 = POINTER TO BP ADDRESSES
00008564  7E08                    1137           MOVEQ   #8,D7          D7 = # OF ADDRESS ALLOWED
00008566  BC98                    1138  GT21     CMP.L   (A0)+,D6
00008568  6700 00A0               1139           BEQ     BCMD55         ALREADY IN TABLE -SHOW TABLE-
0000856C  5387                    1140           SUBQ.L  #1,D7
0000856E  66F6                    1141           BNE     GT21
00008570                          1142  
00008570  21C6 0490               1143           MOVE.L  D6,BPTILL      9TH BREAKPOINT
00008574  6116                    1144           BSR.S   GOCMD1A        NORMAL STARTUP
00008576  6020                    1145           BRA.S   GOCMD1
00008578                          1146  
00008578  41FA 0012               1147  GOSET1   LEA     GOCMD1A(PC),A0 WHERE TO GO IF NO PARAMERS
0000857C  6100 1128               1148           BSR     FNEXTF         FIND NEXT FIELD
00008580  6100 052A               1149           BSR     GETA           GET ADDRESS
00008584  6100 113E               1150           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
00008588  21C0 0400               1151           MOVE.L  D0,REGPC
0000858C                          1152  
0000858C  2038 0400               1153  GOCMD1A  MOVE.L  REGPC,D0       (ALSO SUBROUTINE ENTRY)
00008590  6100 FB2A               1154           BSR     PPHY           PRINT ".PC" PHYSICAL ADDRESS
00008594  4E75                    1155           RTS
00008596                          1156  
00008596  61E0                    1157  GOCMD    BSR     GOSET1         "GO" (AFTER TRACING ONE INST)
00008598  21FC FFFFFFFF 04DA      1158  GOCMD1   MOVE.L  #-1,TRACECNT   "FLAG" COUNTER AS SPECIAL
000085A0                          1159  
000085A0  6000 071E               1160           BRA     UNTRACE
000085A4                          1161  
000085A4  61D2                    1162  GDCMD    BSR     GOSET1         "GO DIRECT" Command
000085A6  6000 0726               1163           BRA     UNSTACK
000085AA                          1164  
000085AA                          1165  
000085AA                          1166  *   ***BR***  SET AND PRINT BREAKPOINTS
000085AA                          1167  
000085AA                          1168  *                   DELETE ALL BREAKPOINTS
000085AA                          1169  
000085AA  6108                    1170  NOBRCMD  BSR.S   FIXBP          GET POINTERS
000085AC  4298                    1171  BCMD01   CLR.L   (A0)+          CLEAR THE ADDRESS TABLE
000085AE  5387                    1172           SUBQ.L  #1,D7          DO IT 8 TIMES
000085B0  66FA                    1173           BNE     BCMD01
000085B2  6060                    1174           BRA.S   BCMD7          DISPLAY EMPTY TABLE
000085B4                          1175  
000085B4  41F8 0470               1176  FIXBP    LEA     BPADD,A0       SET UP ADDRESS & COUNTER
000085B8  7E08                    1177           MOVEQ   #8,D7          COUNTER
000085BA  45F8 0494               1178           LEA     BPCNT,A2       COUNTS
000085BE  4E75                    1179           RTS
000085C0                          1180  
000085C0                          1181  ************************************************************
000085C0                          1182  * THIS COMMAND SUPPORTS THE "NO" OPTION. COMMANDS THAT ALLOW
000085C0                          1183  * THE "NO" OPTION PROVIDE A HARD BRANCH 4 BYTES BEFORE THE
000085C0                          1184  * REGULAR COMMAND.
000085C0                          1185  ************************************************************
000085C0                          1186  
000085C0  6000 009A               1187           BRA.L   NOBR0          ENTRY FOR "NOBR" (IT LOOKS FOR PARMS OR NOT)
000085C4  41FA 004E               1188  BRCMD    LEA     BCMD7(PC),A0   WHERE TO GO IF NO PARMS
000085C8  6100 10DC               1189  BCMD0    BSR     FNEXTF         FIND NEXT FIELD
000085CC  6100 04DE               1190           BSR     GETA           GET ADDRESS
000085D0  6100 10F2               1191           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
000085D4                          1192  
000085D4  61DE                    1193           BSR     FIXBP          SET UP COUNTER & ADDRESS
000085D6  B090                    1194  BCMD00   CMP.L   (A0),D0        SEE IF ALREADY IN TABLE
000085D8  6710                    1195           BEQ.S   BCMD33         GO CHECK FOR COUNT
000085DA  588A                    1196           ADDQ.L  #4,A2          BUMP OTHER POINTER
000085DC  5888                    1197           ADDQ.L  #4,A0          BUMP MAIN POINTER
000085DE  5387                    1198           SUBQ.L  #1,D7
000085E0  66F4                    1199           BNE     BCMD00
000085E2                          1200  
000085E2  61D0                    1201           BSR     FIXBP          GET ADDRESS & POINTERS
000085E4  4A90                    1202  BCMD3    TST.L   (A0)           FIND AN EMPTY STOP
000085E6  661A                    1203           BNE.S   BCMD5
000085E8  2080                    1204           MOVE.L  D0,(A0)        PUT NEW ADDRESS IN TABLE
000085EA  4292                    1205  BCMD33   CLR.L   (A2)           CLEAR CURRENT COUNT
000085EC  1215                    1206           MOVE.B  (A5),D1        CHECK INPUT FOR COUNT
000085EE  0C01 003B               1207           CMPI.B  #';',D1
000085F2  6608                    1208           BNE.S   BCMD6          NO COUNT
000085F4  528D                    1209           ADDQ.L  #1,A5          BUMP THE BUFFER SCANNER
000085F6  6100 1130               1210           BSR     GETNUMA        GO GET THE COUNT
000085FA  2480                    1211           MOVE.L  D0,(A2)        MOVE TO TABLE
000085FC                          1212  
000085FC  41FA 0016               1213  BCMD6    LEA     BCMD7(PC),A0   WHERE TO GO IF NO MORE PARAMETERS
00008600  60C6                    1214           BRA     BCMD0
00008602                          1215  
00008602  5888                    1216  BCMD5    ADDQ.L  #4,A0          BUMP TABLE POINTER
00008604  588A                    1217           ADDQ.L  #4,A2          BUMP POINTER TO COUNTS
00008606  5387                    1218           SUBQ.L  #1,D7          LOOP AROUND
00008608  66DA                    1219           BNE     BCMD3
0000860A                          1220  
0000860A  4BFA FA85               1221  BCMD55   LEA     MSG008E(PC),A5 TABLE FULL; ERROR MESSAGE
0000860E  6100 FAE2               1222           BSR     FIXDATA
00008612  6008                    1223           BRA.S   BCMD77
00008614                          1224  
00008614  4BFA 003A               1225  BCMD7    LEA     MSGBR(PC),A5   "BREAKPOINTS"
00008618  6100 FAEC               1226           BSR     FIXDCRLF
0000861C  6100 1204               1227  BCMD77   BSR     OUT1CR
00008620                          1228  
00008620  6192                    1229           BSR     FIXBP          SET ADDRESS & COUNTER
00008622  2C1A                    1230  BCMD8    MOVE.L  (A2)+,D6       D6 = COUNT
00008624  2010                    1231           MOVE.L  (A0),D0        D0 = ADDRESS
00008626  671E                    1232           BEQ.S   BCMD9          ZERO ADDRESS
00008628  6100 0FDC               1233           BSR     FRELADDR       FORMAT RELATIVE ADDRESS
0000862C  1CFC 0020               1234           MOVE.B  #BLANK,(A6)+
00008630                          1235  
00008630  2010                    1236           MOVE.L  (A0),D0        FORMAT ABSOLUTE ADDRESS
00008632  6100 0FA8               1237           BSR     PNT6HX
00008636  2006                    1238           MOVE.L  D6,D0
00008638  6708                    1239           BEQ.S   BCMD81         DON'T PRINT ZERO COUNT
0000863A  1CFC 003B               1240           MOVE.B  #';',(A6)+
0000863E  6100 1020               1241           BSR     PNTZHX         PRINT WITH ZERO SURPRESS
00008642                          1242  
00008642  6100 11DE               1243  BCMD81   BSR     OUT1CR
00008646  5888                    1244  BCMD9    ADDQ.L  #4,A0
00008648  5387                    1245           SUBQ.L  #1,D7          LOOP AROUND
0000864A  66D6                    1246           BNE     BCMD8
0000864C  6000 FB76               1247           BRA     MACSBUG
00008650                          1248  
00008650= 42 52 45 41 4B 50 ...   1249  MSGBR    DC.B    'BREAKPOINTS',EOT
0000865C                          1250  
0000865C                          1251  
0000865C                          1252  
0000865C                          1253  * NOBR COMMAND
0000865C                          1254  
0000865C  41FA FF4C               1255  NOBR0    LEA     NOBRCMD(PC),A0 WHERE TO GO IF NO PARAMETERS
00008660  6100 1044               1256  NOBR1    BSR     FNEXTF         FIND NEXT FIELD
00008664  6100 0446               1257           BSR     GETA           GO DECODE NUMBER/ADDRESS
00008668  4A80                    1258           TST.L   D0
0000866A  679E                    1259           BEQ     BCMD55         ZERO NOT VALID BREAKPOINT
0000866C  6100 1056               1260           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
00008670                          1261  
00008670  41F8 0470               1262           LEA     BPADD,A0       SET UP TABLE POINTER
00008674  7E08                    1263           MOVEQ   #8,D7          COUNTER
00008676  2210                    1264  NOBR3    MOVE.L  (A0),D1        GET BREAKPOINT IN TABLE
00008678  B081                    1265           CMP.L   D1,D0          SEE IF SAME
0000867A  6706                    1266           BEQ.S   NOBR4
0000867C  5888                    1267           ADDQ.L  #4,A0
0000867E  5387                    1268           SUBQ.L  #1,D7
00008680  66F4                    1269           BNE     NOBR3
00008682  4290                    1270  NOBR4    CLR.L   (A0)           CLEAR THIS BREAKPOINT
00008684  41FA FF8E               1271           LEA     BCMD7(PC),A0   WHERE TO GO IF NO PARAMETER
00008688  60D6                    1272           BRA     NOBR1
0000868A                          1273  
0000868A                          1274  
0000868A                          1275  
0000868A                          1276  
0000868A                          1277  *-------------------------------------------------------------------------
0000868A                          1278  * File BS        BS (Block Search) Command                        11/27/81
0000868A                          1279  
0000868A                          1280  *
0000868A                          1281  *  BLOCK SEARCH   BS <ADDR1> <ADDR2> 'LITERAL STRING'
0000868A                          1282  *                 BS <ADDR1> <ADDR2> <DATA> [<MASK>] [;<OPTION>]
0000868A                          1283  
0000868A  41FA FA2A               1284  BSCMD    LEA     SYNTAX(PC),A0
0000868E  6100 1016               1285           BSR     FNEXTF
00008692  6100 0418               1286           BSR     GETA
00008696  2640                    1287           MOVE.L  D0,A3          A3 = FROM BEGIN ADDRESS
00008698                          1288  
00008698  6100 100C               1289           BSR     FNEXTF
0000869C  6100 040E               1290           BSR     GETA
000086A0  2240                    1291           MOVE.L  D0,A1          A1 = FROM END ADDRESS
000086A2                          1292  
000086A2  6100 1002               1293           BSR     FNEXTF
000086A6  1015                    1294           MOVE.B  (A5),D0
000086A8  0C00 0027               1295           CMPI.B  #$27,D0
000086AC  6700 00B0               1296           BEQ     BS311          LITERAL STRING SEARCH
000086B0                          1297  
000086B0  6100 1076               1298           BSR     GETNUMA
000086B4  2E00                    1299           MOVE.L  D0,D7          D7 = DATA WE ARE LOOKING FOR
000086B6  4285                    1300           CLR.L   D5             SCAN FOR OPTIONS
000086B8  204D                    1301           MOVE.L  A5,A0
000086BA  B1CE                    1302  BS91     CMP.L   A6,A0
000086BC  6426                    1303           BCC.S   BS97           AT END OF BUFFER
000086BE                          1304  
000086BE  1018                    1305           MOVE.B  (A0)+,D0
000086C0  0C00 003B               1306           CMPI.B  #';',D0
000086C4  66F4                    1307           BNE     BS91           NOT SEMICOLON
000086C6                          1308  
000086C6  2C48                    1309           MOVE.L  A0,A6
000086C8  538E                    1310           SUBQ.L  #1,A6          ADJUST END OF BUFFER POINTER
000086CA                          1311  
000086CA  1010                    1312           MOVE.B  (A0),D0        D0 = OPTION CHARACTER
000086CC  0C00 0042               1313           CMPI.B  #'B',D0
000086D0  6712                    1314           BEQ.S   BS97           BYTE  D5 = 0
000086D2                          1315  
000086D2  7A01                    1316           MOVEQ   #1,D5
000086D4  0C00 0057               1317           CMPI.B  #'W',D0
000086D8  670A                    1318           BEQ.S   BS97                WORD  D5 = +
000086DA                          1319  
000086DA  7AFF                    1320           MOVEQ   #-1,D5         LONG WORD  D5 = -
000086DC  0C00 004C               1321           CMPI.B  #'L',D0
000086E0  6600 F9D4               1322           BNE     SYNTAX
000086E4                          1323  BS97     DS      0
000086E4                          1324  
000086E4  78FF                    1325           MOVEQ   #-1,D4         D4 = DEFAULT SEARCH MASK
000086E6  41FA 000C               1326           LEA     BS101(PC),A0
000086EA  6100 0FBA               1327           BSR     FNEXTF         FIND NEXT FIELD
000086EE  6100 1038               1328           BSR     GETNUMA
000086F2  2800                    1329           MOVE.L  D0,D4          D4 = MASK
000086F4                          1330  BS101    DS      0
000086F4                          1331  
000086F4  204B                    1332           MOVE.L  A3,A0
000086F6  6100 F9CC               1333           BSR     P2PHY          PRINT ADDRESSES (A0) & (A1)
000086FA                          1334  
000086FA  B3CB                    1335           CMP.L   A3,A1
000086FC  6500 F9B8               1336           BCS     SYNTAX         END LESS THAN BEGIN
00008700                          1337  
00008700  B7C9                    1338  BS200    CMP.L   A1,A3
00008702  6400 FAC0               1339           BCC     MACSBUG        DONE
00008706                          1340  
00008706  6100 11A2               1341           BSR     FIXBUF
0000870A  200B                    1342           MOVE.L  A3,D0
0000870C  6100 0ECE               1343           BSR     PNT6HX         FORMAT ADDRESS
00008710  1CFC 0020               1344           MOVE.B  #BLANK,(A6)+   SPACE INTO BUFFER
00008714                          1345  
00008714  4A85                    1346           TST.L   D5
00008716  6734                    1347           BEQ.S   BS225          BYTE SIZE
00008718                          1348  
00008718  200B                    1349           MOVE.L  A3,D0
0000871A  6100 0FA8               1350           BSR     CKWADR         INSURE WORD BOUNDRY
0000871E  4A85                    1351           TST.L   D5
00008720  6A18                    1352           BPL.S   BS219          WORD SIZE (2 BYTES)
00008722                          1353  
00008722  7C02                    1354           MOVEQ   #2,D6          D6 =  SIZE (LONG WORD)
00008724  2013                    1355           MOVE.L  (A3),D0        FETCH
00008726  C084                    1356           AND.L   D4,D0          MASK
00008728  B087                    1357           CMP.L   D7,D0          COMPARE
0000872A  660A                    1358           BNE.S   BS215
0000872C                          1359  
0000872C  2013                    1360           MOVE.L  (A3),D0        DISPLAY NON-MASKED DATA
0000872E  6100 0EA4               1361           BSR     PNT8HX
00008732                          1362  
00008732  6100 10EE               1363  BS213    BSR     OUT1CR
00008736                          1364  
00008736  D7C6                    1365  BS215    ADD.L   D6,A3          BUMP FETCH ADDRESS  (D6 = SIZE)
00008738  60C6                    1366           BRA     BS200
0000873A                          1367  
0000873A  7C02                    1368  BS219    MOVEQ   #2,D6          SIZE = WORD
0000873C  3013                    1369           MOVE.W  (A3),D0
0000873E  C044                    1370           AND.W   D4,D0
00008740  B047                    1371           CMP.W   D7,D0
00008742  66F2                    1372           BNE     BS215
00008744                          1373  
00008744  3013                    1374           MOVE.W  (A3),D0
00008746  6100 0E9A               1375           BSR     PNT4HX         DISPLAY
0000874A  60E6                    1376           BRA     BS213
0000874C                          1377  
0000874C  7C01                    1378  BS225    MOVEQ   #1,D6          SIZE = BYTE
0000874E  1013                    1379           MOVE.B  (A3),D0
00008750  C004                    1380           AND.B   D4,D0
00008752  B007                    1381           CMP.B   D7,D0
00008754  66E0                    1382           BNE     BS215
00008756                          1383  
00008756  1013                    1384           MOVE.B  (A3),D0
00008758  6100 0E90               1385           BSR     PNT2HX         DISPLAY
0000875C  60D4                    1386           BRA     BS213
0000875E                          1387  
0000875E                          1388  * LITERAL STRING SEARCH
0000875E                          1389  *   SAVE STRING
0000875E                          1390  
0000875E  45F8 05C0               1391  BS311    LEA     DUMPTEMP,A2
00008762  528D                    1392  BS313    ADDQ.L  #1,A5
00008764  BBCE                    1393           CMP.L   A6,A5
00008766  6400 F94E               1394           BCC     SYNTAX         ADDR1 GREATER THAN ADDR2
0000876A  14D5                    1395           MOVE.B  (A5),(A2)+
0000876C  1015                    1396           MOVE.B  (A5),D0
0000876E  0C00 0027               1397           CMPI.B  #$27,D0
00008772  66EE                    1398           BNE     BS313
00008774  538A                    1399           SUBQ.L  #1,A2          A2 = END OF STRING + 1
00008776                          1400  
00008776  204B                    1401           MOVE.L  A3,A0
00008778  6100 F94A               1402           BSR     P2PHY          DISPLAY ADDRESSES
0000877C                          1403  
0000877C  B3CB                    1404           CMP.L   A3,A1
0000877E  6500 F936               1405           BCS     SYNTAX
00008782                          1406  
00008782                          1407  * LOOK FOR STRING MATCH
00008782                          1408  
00008782  49F8 05C0               1409  BS323    LEA     DUMPTEMP,A4    A4 = BEGIN OF STRING
00008786  204B                    1410           MOVE.L  A3,A0          A0 = BEGIN OF MEMORY
00008788  1010                    1411  BS325    MOVE.B  (A0),D0
0000878A  B01C                    1412           CMP.B   (A4)+,D0       DATA COMPARE
0000878C  662C                    1413           BNE.S   BS365          MIS-MATCH
0000878E                          1414  
0000878E  B3C8                    1415           CMP.L   A0,A1          ADDRESS CHECK
00008790  6500 FA32               1416           BCS     MACSBUG        OUT OF MEMORY
00008794                          1417  
00008794  5288                    1418           ADDQ.L  #1,A0
00008796  B9CA                    1419           CMP.L   A2,A4
00008798  65EE                    1420           BCS     BS325          MORE STRING TO CHECK
0000879A                          1421  
0000879A  6100 110E               1422           BSR     FIXBUF         HAVE MATCH
0000879E  200B                    1423           MOVE.L  A3,D0          FORMAT ADDRESS
000087A0  6100 0E3A               1424           BSR     PNT6HX
000087A4  1CFC 0020               1425           MOVE.B  #BLANK,(A6)+   SPACE
000087A8                          1426  
000087A8  1CFC 0027               1427           MOVE.B  #$27,(A6)+     LEADING QUOTE
000087AC  49F8 05C0               1428           LEA     DUMPTEMP,A4    MOVE STRING TO BUFFER
000087B0  1CDC                    1429  BS355    MOVE.B  (A4)+,(A6)+
000087B2  B5CC                    1430           CMP.L   A4,A2
000087B4  64FA                    1431           BCC     BS355
000087B6                          1432  
000087B6  6100 106A               1433           BSR     OUT1CR         DISPLAY
000087BA                          1434  
000087BA  528B                    1435  BS365    ADDQ.L  #1,A3
000087BC  B3CB                    1436           CMP.L   A3,A1
000087BE  6500 FA04               1437           BCS     MACSBUG        DONE
000087C2  60BE                    1438           BRA     BS323
000087C4                          1439  
000087C4                          1440  
000087C4                          1441  
000087C4                          1442  
000087C4                          1443  *-------------------------------------------------------------------------
000087C4                          1444  * File BT        BT (Block Test) command                          11/30/81
000087C4                          1445  
000087C4                          1446  * BT   BLOCK OF MEMORY TEST
000087C4                          1447  
000087C4  6100 0B5C               1448  BTCMD    BSR     MTSETUP        PREPARE PARMS (FROM,TO/COUNT)
000087C8  6100 0D3E               1449           BSR     RAMTEST        EXEC MEMORY TEST SUBROUTINE
000087CC  6700 F9F6               1450           BEQ     MACSBUG        NO ERRORS, RETURN TO MACSBUG
000087D0  2F01                    1451           MOVE.L  D1,-(A7)       SAVE DATA READ
000087D2  2F00                    1452           MOVE.L  D0,-(A7)       SAVE DATA WRITTEN CAUSING ERROR
000087D4                          1453  
000087D4  6100 10D4               1454           BSR     FIXBUF         SET UP TO PRINT
000087D8  2CFC 4641494C           1455           MOVE.L  #'FAIL',(A6)+
000087DE  2CFC 45442041           1456           MOVE.L  #'ED A',(A6)+
000087E4  3CFC 5420               1457           MOVE.W  #'T ',(A6)+
000087E8  200A                    1458           MOVE.L  A2,D0          ADDRESS WHERE IT FAILED
000087EA  6100 0DF0               1459           BSR     PNT6HX
000087EE                          1460  
000087EE  2CFC 20205752           1461           MOVE.L  #'  WR',(A6)+
000087F4  2CFC 4F54453D           1462           MOVE.L  #'OTE=',(A6)+
000087FA  201F                    1463           MOVE.L  (A7)+,D0       WHAT WAS WRITTEN
000087FC  6100 0DE4               1464           BSR     PNT4HX
00008800                          1465  
00008800  2CFC 20202052           1466           MOVE.L  #'   R',(A6)+
00008806  2CFC 4541443D           1467           MOVE.L  #'EAD=',(A6)+
0000880C  201F                    1468           MOVE.L  (A7)+,D0       WHAT WAS READ
0000880E  6100 0DD2               1469           BSR     PNT4HX
00008812                          1470  
00008812  6000 F894               1471           BRA     MSG            PRINT IT
00008816                          1472  
00008816                          1473  
00008816                          1474  
00008816                          1475  
00008816                          1476  *-------------------------------------------------------------------------
00008816                          1477  * File DC        DC (Data Conversion) Command                     12/10/81
00008816                          1478  
00008816                          1479  *
00008816                          1480  *
00008816                          1481  *  ***DC***  NUMBER CONVERSIONS
00008816                          1482  *
00008816                          1483  DCCMD    DS      0              -DATA CONVERT COMMAND-
00008816  41FA F89E               1484  NUMCON0  LEA     SYNTAX(PC),A0  IF NO PARAMETERS
0000881A  6100 0E8A               1485           BSR     FNEXTF         POINT TO NEXT PARAMETER
0000881E  6100 028C               1486           BSR     GETA           EVALUATE EXPRESSION
00008822                          1487  
00008822  6100 1086               1488           BSR     FIXBUF         SET UP FOR PRINT
00008826  2E00                    1489           MOVE.L  D0,D7          D7=VALUE
00008828  4A87                    1490           TST.L   D7             SEE IF NEGATIVE
0000882A  6A0E                    1491           BPL.S   NUMCON1
0000882C  1CFC 0024               1492           MOVE.B  #'$',(A6)+
00008830  2007                    1493           MOVE.L  D7,D0          MOVE NEGATIVE RESULT TO D0
00008832  6100 0DA0               1494           BSR     PNT8HX
00008836  1CFC 003D               1495           MOVE.B  #'=',(A6)+
0000883A  2007                    1496  NUMCON1  MOVE.L  D7,D0          RESTORE
0000883C  6A08                    1497           BPL.S   NUMCON2
0000883E  4480                    1498           NEG.L   D0
00008840  6B04                    1499           BMI.S   NUMCON2        SPECIAL CASE (-0)
00008842  1CFC 002D               1500           MOVE.B  #'-',(A6)+
00008846  1CFC 0024               1501  NUMCON2  MOVE.B  #'$',(A6)+
0000884A  6100 0E14               1502           BSR     PNTZHX
0000884E  1CFC 003D               1503           MOVE.B  #'=',(A6)+     NOW PRINT DECIMAL VALUE
00008852  2007                    1504           MOVE.L  D7,D0
00008854  6A08                    1505           BPL.S   NUMCON3
00008856  4480                    1506           NEG.L   D0
00008858  6B04                    1507           BMI.S   NUMCON3        SPECIAL CASE (-0)
0000885A  1CFC 002D               1508           MOVE.B  #'-',(A6)+
0000885E  1CFC 0026               1509  NUMCON3  MOVE.B  #'&',(A6)+
00008862  6100 066A               1510           BSR     HEX2DEC        PUT VALUE IN BUFFER
00008866  6000 F840               1511           BRA     MSG            GO PRINT IT
0000886A                          1512  
0000886A                          1513  
0000886A                          1514  
0000886A                          1515  
0000886A                          1516  *-------------------------------------------------------------------------
0000886A                          1517  * File DFDI      DF (Display registers) WITH disassembler         05/27/82
0000886A                          1518  
0000886A= 50435352                1519  REGNAMES DC.L    'PCSR'         TABLE OF NAMES OF REGISTERS
0000886E= 55535353                1520           DC.L    'USSS'
00008872= 3F3F                    1521           DC.W    '??'           END OF TABLE
00008874                          1522  
00008874                          1523  DFCMD    DS      0              DF COMMAND  ENTRY
00008874  600A                    1524           BRA.S   TD07
00008876                          1525  
00008876  6100 1032               1526  TDISPLY  BSR     FIXBUF         PRINT TRACE DISPLAY SUBROUTINE
0000887A  4A38 04E9               1527           TST.B   XONOFF+3
0000887E  6652                    1528           BNE.S   TD25           SHORT DISPLAY
00008880                          1529  
00008880  6100 1028               1530  TD07     BSR     FIXBUF         PRINT PRELUDE
00008884  42B8 061C               1531           CLR.L   OUTTO          FORCE DISPLAY TO OPERATORS CONSOLE
00008888  2CF8 0610               1532           MOVE.L  SCREEN1,(A6)+
0000888C  6704                    1533           BEQ.S   TD09           SKIP PRELUDE
0000888E  6100 0FAC               1534           BSR     OUTPUT
00008892                          1535  TD09
00008892                          1536  
00008892  49FA FFD6               1537           LEA     REGNAMES(PC),A4 REGISTER NAMES
00008896  45F8 0400               1538           LEA     REGPC,A2       REGISTER DATA
0000889A  6100 100E               1539           BSR     FIXBUF         SET UP I/O BUFFER
0000889E                          1540  
0000889E  301C                    1541  TD1      MOVE.W  (A4)+,D0       GET REG NAME
000088A0  2E1A                    1542           MOVE.L  (A2)+,D7       GET REG CONTENT
000088A2  0C40 3F3F               1543           CMPI.W  #'??',D0       SEE IF AT END OF REGS
000088A6  6650                    1544           BNE.S   TD4
000088A8  6100 0F78               1545           BSR     OUT1CR         PRINT BUFFER
000088AC                          1546  
000088AC  1E3C 0044               1547           MOVE.B  #'D',D7        CLASS=DATA
000088B0  47F8 0408               1548           LEA     REGS,A3        OFFSET
000088B4  6100 0BF6               1549           BSR     PNTCLS         GO PRINT THE BLOCK
000088B8                          1550  
000088B8  1E3C 0041               1551           MOVE.B  #'A',D7        CLASS=ADDRESS
000088BC  47F8 0428               1552           LEA     REGS+32,A3     OFFSET
000088C0  6100 0BEA               1553           BSR     PNTCLS         GO PRINT THE BLOCK
000088C4                          1554  
000088C4  6100 0FE4               1555           BSR     FIXBUF
000088C8  7214                    1556           MOVEQ   #20,D1         LOOP COUNTER
000088CA  1CFC 002D               1557  TD27     MOVE.B  #'-',(A6)+     FILL BUFFER WITH BOARDER
000088CE  5381                    1558           SUBQ.L  #1,D1
000088D0  66F8                    1559           BNE TD27
000088D2                          1560  
000088D2  2878 0400               1561  TD25     MOVE.L  REGPC,A4       DISASSEMBLE
000088D6  4CD4 0007               1562           MOVEM.L (A4),D0-D2
000088DA  2A4E                    1563           MOVE.L  A6,A5
000088DC  6100 2998               1564           BSR     DCODE68K
000088E0  4BF8 0540               1565           LEA     BUFFER,A5
000088E4                          1566  
000088E4  6100 0F3C               1567           BSR     OUT1CR         PRINT
000088E8                          1568  
000088E8  6100 0FC0               1569           BSR     FIXBUF         PRINT END STUFF FOR SCREEN CONTROL
000088EC  2CF8 0614               1570           MOVE.L  SCREEN2,(A6)+
000088F0  6704                    1571           BEQ.S   TD39           SKIP END STUFF
000088F2  6100 0F48               1572           BSR     OUTPUT
000088F6  4E75                    1573  TD39     RTS     RETURN FOR MORE WORK
000088F8                          1574  
000088F8  3400                    1575  TD4      MOVE.W  D0,D2          PRINT REG NAME IN BUFFER
000088FA  E040                    1576           ASR.W   #8,D0          MOVE IT OVER
000088FC  1600                    1577           MOVE.B  D0,D3          SAVE REGISTER TYPE A,D,W,M ETC
000088FE  1CC0                    1578           MOVE.B  D0,(A6)+       SAVE FIRST LETTER
00008900  1CC2                    1579           MOVE.B  D2,(A6)+       SAVE NEXT LETTER
00008902  1CFC 003D               1580           MOVE.B  #'=',(A6)+     EQUAL SIGN
00008906  0C42 5553               1581           CMPI.W  #'US',D2
0000890A  6606                    1582           BNE.S   T44
0000890C  2038 0448               1583           MOVE.L  REGUS,D0       USER STACK
00008910  6014                    1584           BRA.S   T449
00008912                          1585  
00008912  0C42 5353               1586  T44      CMPI.W  #'SS',D2       SUPER STACK IS SPECIAL
00008916  6606                    1587           BNE.S   T448
00008918  2038 0444               1588           MOVE.L  REGA7,D0       GET A7
0000891C  6008                    1589           BRA.S   T449
0000891E                          1590  
0000891E  2007                    1591  T448     MOVE.L  D7,D0          REGISTER VALUE
00008920  0C42 5352               1592           CMPI.W  #'SR',D2       SEE IF STATUS REGISTER
00008924  670C                    1593           BEQ.S   TDCC
00008926  6100 0CAC               1594  T449     BSR     PNT8HX         FORMAT 8 HEX CHAR
0000892A  1CFC 0020               1595  TD9      MOVE.B  #BLANK,(A6)+   SPACE BETWEEN REGS
0000892E  6000 FF6E               1596           BRA TD1
00008932                          1597  
00008932                          1598  *   CONDITION CODE FORMAT
00008932                          1599  *
00008932  3600                    1600  TDCC     MOVE.W  D0,D3          SAVE FOR A MOMENT
00008934  6100 0CAC               1601           BSR     PNT4HX
00008938  1CFC 003D               1602           MOVE.B  #'=',(A6)+
0000893C  2E3C 80000054           1603           MOVE.L  #$80000054,D7  TRACE BIT
00008942  613E                    1604           BSR.S   TDCC9
00008944  2E3C 20000053           1605           MOVE.L  #$20000053,D7  SUPERVISOR BIT
0000894A  6136                    1606           BSR.S   TDCC9
0000894C  3003                    1607           MOVE.W  D3,D0          INTERRUPT LEVEL
0000894E  E048                    1608           LSR.W   #8,D0
00008950  0200 0007               1609           ANDI.B  #$07,D0        "7" MAX IN SR FOR LEVEL
00008954  6100 0C9C               1610           BSR     PUTHEX
00008958  2E3C 00100058           1611           MOVE.L  #$100058,D7    X BIT
0000895E  6122                    1612           BSR.S   TDCC9
00008960  2E3C 0008004E           1613           MOVE.L  #$8004E,D7     N BIT
00008966  611A                    1614           BSR.S   TDCC9
00008968  2E3C 0004005A           1615           MOVE.L  #$4005A,D7     Z BIT
0000896E  6112                    1616           BSR.S   TDCC9
00008970  2E3C 00020056           1617           MOVE.L  #$20056,D7     V BIT
00008976  610A                    1618           BSR.S   TDCC9
00008978  2E3C 00010043           1619           MOVE.L  #$10043,D7     C BIT
0000897E  6102                    1620           BSR.S   TDCC9
00008980  60A8                    1621           BRA     TD9
00008982                          1622  *
00008982  2C07                    1623  TDCC9    MOVE.L  D7,D6          DUPLICATE STUFF
00008984  4846                    1624           SWAP    D6             GET BIT POSITION
00008986  CC43                    1625           AND.W   D3,D6          SEE IF ON
00008988  6604                    1626           BNE.S   TDCC91
0000898A  1E3C 002E               1627           MOVE.B  #'.',D7        PUT IN PERIOD IF OFF
0000898E  1CC7                    1628  TDCC91   MOVE.B  D7,(A6)+       PUT IN LETTER IF ON
00008990  4E75                    1629           RTS
00008992                          1630  
00008992                          1631  
00008992                          1632  
00008992                          1633  
00008992                          1634  *-------------------------------------------------------------------------
00008992                          1635  * File DUMP      DU     Dump "S-Records"                          05/10/82
00008992                          1636  
00008992                          1637  *   ***DUMP***  DUMP  'S' RECORDS
00008992                          1638  *    FORMAT:  DU  ADDRESS1 ADDRESS2  [TEXT....]
00008992                          1639  *
00008992                          1640  DUCMD    DS      0
00008992  6100 102E               1641           BSR     SCANPORT       SEE WHERE TO SEND OUTPUT (DUMMY CALL)
00008996  2C38 061C               1642           MOVE.L  OUTTO,D6       SAVE OUTTO FOR ACTUAL S-RECORD DUMP
0000899A  42B8 061C               1643           CLR.L   OUTTO          OVERRIDE SCANPORT CALL
0000899E                          1644  
0000899E  41FA F716               1645           LEA     SYNTAX(PC),A0  WHERE TO GO IF NO PARAMTERS
000089A2  6100 0D02               1646           BSR     FNEXTF         FIND NEXT FIELD
000089A6  6100 0104               1647           BSR     GETA           GET ADDRESS1
000089AA  2640                    1648           MOVE.L  D0,A3          A3 = BEGIN ADDRESS
000089AC                          1649  
000089AC  6100 0CF8               1650           BSR     FNEXTF
000089B0  6100 00FA               1651           BSR     GETA           GET ADDRESS2
000089B4  2840                    1652           MOVE.L  D0,A4          A4 = END ADDRESS
000089B6                          1653  
000089B6                          1654  * PROCESS HEADER
000089B6  41FA 0006               1655           LEA     PUNCH5(PC),A0  WHERE TO GO IF NO HEADER
000089BA  6100 0CEA               1656           BSR     FNEXTF         LOOK FOR HEADER
000089BE                          1657  PUNCH5   DS      0
000089BE                          1658  
000089BE                          1659  * MOVE TEXT TO 'TEMP STORAGE'
000089BE  45F8 05C0               1660           LEA     DUMPTEMP,A2
000089C2  2A0A                    1661           MOVE.L  A2,D5          D5 = START OF TEXT
000089C4  BDCD                    1662  PUM11    CMP.L   A5,A6
000089C6  6704                    1663           BEQ.S   PUM13
000089C8  14DD                    1664           MOVE.B  (A5)+,(A2)+    MOVE
000089CA  60F8                    1665           BRA     PUM11
000089CC  CB8A                    1666  PUM13    EXG     A2,D5          D5 = END OF TEXT +1
000089CE                          1667  
000089CE                          1668  * DISPLAY ADDRESSES
000089CE  204B                    1669           MOVE.L  A3,A0
000089D0  224C                    1670           MOVE.L  A4,A1
000089D2  6100 F6F0               1671           BSR     P2PHY          DISPLAY TWO ADDRESSES
000089D6                          1672  
000089D6                          1673  * INSURE END EQUAL GREATER THAN BEG
000089D6  B9CB                    1674           CMP.L   A3,A4
000089D8  6500 F6DC               1675           BCS     SYNTAX
000089DC                          1676  
000089DC  21C6 061C               1677           MOVE.L  D6,OUTTO       RESTORE OPTIONAL DESTINATION OF DUMP
000089E0                          1678  
000089E0                          1679  * FINISH PROCESSING HEADER
000089E0                          1680  *  A2 = START OF TEXT
000089E0  6100 0EC8               1681           BSR     FIXBUF         A5,A6=#BUFFER
000089E4  7C02                    1682           MOVEQ   #2,D6          THE BYTE COUNT
000089E6  4284                    1683           CLR.L   D4             CLEAR THE CHECKSUM
000089E8  2CFC 53303F3F           1684           MOVE.L  #'S0??',(A6)+  START OF S RECORD
000089EE  2CFC 30303030           1685           MOVE.L  #'0000',(A6)+  DUMMY ADDRESS
000089F4  B5C5                    1686  MORES0   CMP.L   D5,A2          SEE IF AT END OF TEXT
000089F6  6C0C                    1687           BGE.S   ENDS0          WHERE TO GO WHEN ALL CHARACTERS USED
000089F8  5286                    1688           ADDQ.L  #1,D6          ANOTHER BYTE
000089FA                          1689  
000089FA  101A                    1690           MOVE.B  (A2)+,D0       GET ANOTHER BYTE OF TEXT
000089FC                          1691  
000089FC  D880                    1692           ADD.L   D0,D4          FOR CHECKSUM
000089FE  6100 0BEA               1693           BSR     PNT2HX         PUT IT IN BUFFER
00008A02  60F0                    1694           BRA     MORES0
00008A04                          1695  ENDS0    DS      0
00008A04                          1696  
00008A04  6100 0084               1697           BSR     PNTSREC        GO PRINT THE 'S' RECORD
00008A08  344B                    1698           MOVE    A3,A2          A2 WILL SCAN BETWEEN A3-A4
00008A0A                          1699  
00008A0A                          1700  * DO ANOTHER 'S' RECORD
00008A0A  6100 0E9E               1701  MORESP   BSR     FIXBUF         A5,A6=#BUFFER
00008A0E  4284                    1702           CLR.L   D4             CLEAR CHECKSUM REGISTER
00008A10  200B                    1703           MOVE.L  A3,D0          READY TO PRINT ADDRESS
00008A12  220B                    1704           MOVE.L  A3,D1          GET READY TO AND ADDRESS
00008A14  7610                    1705           MOVEQ   #$10,D3        MAXIMUM BYTES ON S REC LINE
00008A16  D283                    1706           ADD.L   D3,D1          INSURE END OF LINE ADDRESS IS MAX
00008A18  0281 00FF0000           1707           ANDI.L  #$FF0000,D1    SEE IF 3 BYTE ADDRESS
00008A1E  6618                    1708           BNE.S   S2REC          WHERE TO GO IF 3 BYTES NEEDED
00008A20  2CFC 53313F3F           1709           MOVE.L  #'S1??',(A6)+  PUSH
00008A26  300B                    1710           MOVE    A3,D0          SET UP TO PRINT 2 BYTE ADDRESS
00008A28  6100 0BB8               1711           BSR     PNT4HX         PRINT 4 HEX CHAR ADDRESS
00008A2C  7C02                    1712           MOVEQ   #2,D6          BYTE COUNT
00008A2E  300B                    1713           MOVE.W  A3,D0          FIX UP CHECKSUM
00008A30  D800                    1714           ADD.B   D0,D4          LOW BYTE
00008A32  E040                    1715           ASR     #8,D0          SHIFT IT OVER
00008A34  D800                    1716           ADD.B   D0,D4          HIGH BYTE OF ADDRESS
00008A36  6018                    1717           BRA.S   PNCA3          GO PUNCH A LINE
00008A38                          1718  
00008A38  2CFC 53323F3F           1719  S2REC    MOVE.L  #'S2??',(A6)+  PUSH
00008A3E  6100 0B9C               1720           BSR     PNT6HX         PRINT 6 HEX CHAR ADDRESS
00008A42  7C03                    1721           MOVEQ   #3,D6          BYTE COUNT
00008A44  200B                    1722           MOVE.L  A3,D0          FIX UP CHECKSUM
00008A46  D800                    1723           ADD.B   D0,D4          LOW BYTE
00008A48  E040                    1724           ASR     #8,D0          SHIFT IT OVER
00008A4A  D800                    1725           ADD.B   D0,D4          MIDDLE BYTE
00008A4C  4840                    1726           SWAP    D0             SET UP FOR HIGH BYTE
00008A4E  D800                    1727           ADD.B   D0,D4          ADD HIGH BYTE
00008A50  B7CC                    1728  PNCA3    CMP.L   A4,A3          SEE IF AT ENDING ADDRESS
00008A52                          1729  
00008A52                          1730  * END OF FILE
00008A52  6F1C                    1731           BLE.S   A3OUT          WHERE TO GO IF BELOW OR AT END ADDRESS
00008A54  612E                    1732           BSR.S   PNTSRECX       END IT BY PRINTING LAST RECORD
00008A56  6100 0E52               1733           BSR     FIXBUF         A5,A6=#BUFFER
00008A5A  4284                    1734           CLR.L   D4             CLEAR THE CHECKSUM
00008A5C  2CFC 53393F3F           1735           MOVE.L  #'S9??',(A6)+  MOVE TO PRINT BUFFER
00008A62  2CFC 30303030           1736           MOVE.L  #'0000',(A6)+  MOVE '0000' TO PRIT BUFFER
00008A68  7C02                    1737           MOVEQ   #2,D6          BYTE COUNT
00008A6A  611E                    1738           BSR.S   PNTSREC        PRINT 'S9' END-OF-FILE RECORD
00008A6C  6000 F756               1739           BRA     MACSBUG        REENTER MACSBUG
00008A70                          1740  
00008A70  101B                    1741  A3OUT    MOVE.B  (A3)+,D0       GRAB THE BYTE FROM MEMORY
00008A72  D840                    1742           ADD.W   D0,D4          ADD TO CHECKSUM
00008A74  5246                    1743           ADDQ.W  #1,D6          BUMP THE BYTE COUNT
00008A76  5289                    1744           ADDQ.L  #1,A1          ADD TO COUNT OF BYTES PROCESSED
00008A78  6100 0B70               1745           BSR     PNT2HX         PUT THE HEX IN THE PRINT BUFFER
00008A7C  5383                    1746           SUBQ.L  #1,D3          COUNT DOWN CHAR TO GO IN LINE
00008A7E  66D0                    1747           BNE     PNCA3
00008A80  6108                    1748           BSR.S   PNTSREC        END OF LINE-PUNCH IT
00008A82  6086                    1749           BRA     MORESP         GO FIX UP NEXT LINE
00008A84                          1750  
00008A84                          1751  * FIX UP & PRINT THE 'S' RECORD/LINE
00008A84                          1752  
00008A84  B2FC 0000               1753  PNTSRECX CMP.W   #0,A1          SEE IF ANY CHAR MOVED
00008A88  6720                    1754           BEQ.S   PNTSRTS        NO CHAR MOVED
00008A8A                          1755  
00008A8A  5246                    1756  PNTSREC  ADD     #1,D6          ONE MORE BYTE (CHECKSUM)
00008A8C  D846                    1757           ADD.W   D6,D4          ADD BYTE COUNT TO CHECKSUM
00008A8E  4604                    1758           NOT.B   D4             COMPLIMENT THE CHECKSUM
00008A90  2004                    1759           MOVE.L  D4,D0          READY FOR PRINT-HEX
00008A92  6100 0B56               1760           BSR     PNT2HX         PUT CHECKSUM IN RECORD
00008A96  2E0E                    1761           MOVE.L  A6,D7          SAVE FOR THE MOMENT
00008A98  2C4D                    1762           MOVE.L  A5,A6          START OF BUFFER
00008A9A  548E                    1763           ADDQ.L  #2,A6          BYPASS RECORD TYPE (4 CHAR)
00008A9C  1006                    1764           MOVE.B  D6,D0          SET UP BYTE COUNT FOR PNTHEX ROUTINE
00008A9E  6100 0B4A               1765           BSR     PNT2HX         PUT THE BYTE COUNT IN THE PRINT BUFFER
00008AA2  2C47                    1766           MOVE.L  D7,A6          RESTORE REAL END OF BUFFER
00008AA4  6100 0D7C               1767           BSR     OUT1CR         DO THE ACTUAL DISPLAY/PUNCH
00008AA8  93C9                    1768           SUB.L   A1,A1          CLEAR COUNTER OF BYTES PROCESSED
00008AAA  4E75                    1769  PNTSRTS  RTS
00008AAC                          1770  
00008AAC                          1771  
00008AAC                          1772  
00008AAC                          1773  
00008AAC                          1774  *-------------------------------------------------------------------------
00008AAC                          1775  * File GETA      GET ADDRESS Subroutine                           12/01/81
00008AAC                          1776  
00008AAC                          1777  * GET ADDRESS
00008AAC                          1778  *  ENTER (A5) POINTER START OF BUFFER
00008AAC                          1779  *        (A6) POINTER END OF BUFFER
00008AAC                          1780  *
00008AAC                          1781  *  RETURN:  D0 = ADDRESS
00008AAC                          1782  
00008AAC                          1783  *        (A6) POINTER END OF BUFFER
00008AAC                          1784  *
00008AAC                          1785  *  RETURN:  D0 = ADDRESS
00008AAC                          1786  
00008AAC                          1787  
00008AAC                          1788  * FORMATS HANDLED:
00008AAC                          1789  *  1.  NUMBER        DEFAULTS TO HEX
00008AAC                          1790  *  2.  $NUMBER       HEX
00008AAC                          1791  *  3.  &NUMBER       DECIMAL
00008AAC                          1792  *  4.  (A@)
00008AAC                          1793  *  5.  NUMBER(A@)
00008AAC                          1794  *  6.  (A@,D@)
00008AAC                          1795  *  7.  NUMBER(A@,D@)
00008AAC                          1796  *  8.  [NUMBER]      MEMORY INDIRECT
00008AAC                          1797  *
00008AAC                          1798  *   FORMATS 1,2,3,8  ADD OFFSET R0 UNLESS R1 - R7 SPECIFIED
00008AAC                          1799  
00008AAC                          1800  
00008AAC                          1801  * WORK REGISTERS
00008AAC                          1802  *  D4    VALUE BEING BUILT
00008AAC                          1803  *
00008AAC                          1804  *  D5    FLAG REGISTER
00008AAC                          1805  *     = 8000XXXX  R@ GIVEN (GARO)
00008AAC                          1806  *     = XXXX80XX  [  GIVEN (GALB)
00008AAC                          1807  *     = XXXXXX80  (  GIVEN (GALP)
00008AAC                          1808  *
00008AAC                          1809  *  D6    FLAG REGISTER
00008AAC                          1810  *     = 8000XXXX  A@ GIVEN           (GAAVF)
00008AAC                          1811  *     = XXXX80XX  NEED PLUS OR MINUS (GANPM)
00008AAC                          1812  *     = XXXXXX2B  +  PLUS GIVEN      (GAPMS)
00008AAC                          1813  *             2D  -  MINUS GIVEN
00008AAC                          1814  
00008AAC  48E7 0E80               1815  GETA     MOVEM.L D4-D6/A0,-(A7) SAVE SOME REGISTERS
00008AB0  4284                    1816           CLR.L   D4             VALUE BEING BUILT
00008AB2  4285                    1817           CLR.L   D5             FLAG REG
00008AB4  4286                    1818           CLR.L   D6             FLAG REG
00008AB6                          1819  
00008AB6  101D                    1820           MOVE.B  (A5)+,D0       GET BYTE
00008AB8  BDCD                    1821           CMP.L   A5,A6
00008ABA  6500 010C               1822           BCS     GAP191         END OF BUFFER
00008ABE                          1823  
00008ABE  0C00 005B               1824           CMPI.B  #'[',D0
00008AC2  660C                    1825           BNE.S   GAP113
00008AC4                          1826  
00008AC4                          1827  *  [  SET INDIRECT
00008AC4                          1828  
00008AC4  0045 8000               1829           ORI.W   #$8000,D5      SET LEFT BRACKET (GALB)
00008AC8                          1830  
00008AC8  101D                    1831  GAP111   MOVE.B  (A5)+,D0       GET BYTE
00008ACA  BDCD                    1832           CMP.L   A5,A6
00008ACC  6500 00FA               1833           BCS     GAP191         END OF BUFFER
00008AD0                          1834  GAP113   DS      0
00008AD0                          1835  
00008AD0  0C00 002B               1836           CMPI.B  #'+',D0
00008AD4  675E                    1837           BEQ.S   GAP121         PLUS SIGN
00008AD6                          1838  
00008AD6  0C00 002D               1839           CMPI.B  #'-',D0
00008ADA  6758                    1840           BEQ.S   GAP121         MINUS SIGN
00008ADC                          1841  
00008ADC  0C00 005D               1842           CMPI.B  #']',D0
00008AE0  675E                    1843           BEQ.S   GAP131         RIGHT BRACKET (INDIRECT)
00008AE2                          1844  
00008AE2  0C00 0028               1845           CMPI.B  #'(',D0
00008AE6  676C                    1846           BEQ.S   GAP141         LEFT PARIN
00008AE8                          1847  
00008AE8  0C00 002C               1848           CMPI.B  #',',D0
00008AEC  6700 0092               1849           BEQ     GAP161         COMMA
00008AF0                          1850  
00008AF0  0C00 0029               1851           CMPI.B  #')',D0
00008AF4  6700 00CC               1852           BEQ     GAP181         RIGHT PARIN
00008AF8                          1853  
00008AF8  0C00 003B               1854           CMPI.B  #';',D0        "SEMI-COLON"
00008AFC  6700 00CA               1855           BEQ     GAP191         TERMINATE
00008B00                          1856  
00008B00  0C00 0020               1857           CMPI.B  #BLANK,D0      "SPACE"
00008B04  6700 00C2               1858           BEQ     GAP191         TERMINATE
00008B08                          1859  
00008B08  4A46                    1860           TST.W   D6             (GANPM)
00008B0A  6B70                    1861           BMI.S   GAE            NEEDS PLUS OR MINUS
00008B0C                          1862  
00008B0C  0C00 0052               1863           CMPI.B  #'R',D0
00008B10  6700 0094               1864           BEQ     GAP171         RELATIVE OFFSET
00008B14                          1865  
00008B14  4A06                    1866           TST.B   D6             (GALP)
00008B16  6B64                    1867           BMI.S   GAE            (...   NUMBER NOT ALLOWED
00008B18                          1868  
00008B18                          1869  * NONE OF ABOVE ASSUME NUMERIC VALUE
00008B18  538D                    1870           SUBQ.L  #1,A5          ADJUST (A5) TO FIRST CHAR
00008B1A  4280                    1871           CLR.L   D0
00008B1C  6100 0C0A               1872           BSR     GETNUMA
00008B20                          1873  
00008B20  0C06 002D               1874           CMPI.B  #'-',D6        (GAPMS)
00008B24  6704                    1875           BEQ.S   GAP118         MINUS SIGN
00008B26                          1876  
00008B26  D880                    1877           ADD.L   D0,D4          PLUS SIGN
00008B28  6002                    1878           BRA.S   GAP119
00008B2A                          1879  
00008B2A  9880                    1880  GAP118   SUB.L   D0,D4
00008B2C                          1881  
00008B2C  4206                    1882  GAP119   CLR.B   D6             (GAPMS)  RESET PLUS MINUS FLAG
00008B2E  0046 8000               1883           ORI.W   #$8000,D6      (GANPM)  SET NEED PLUS MINUS
00008B32  6094                    1884  GAP111S  BRA     GAP111
00008B34                          1885  
00008B34                          1886  * (*) (-) SET ARITHMETIC OPERATOR
00008B34                          1887  
00008B34  4A06                    1888  GAP121   TST.B   D6             (GAPMS)
00008B36  6644                    1889           BNE.S   GAE            MULTI OPERATORS
00008B38  1C00                    1890           MOVE.B  D0,D6          (GAPMS)
00008B3A  0246 00FF               1891           ANDI.W  #$00FF,D6      RESET (GANPM) NEED PLUS MINUS
00008B3E  60F2                    1892           BRA     GAP111S
00008B40                          1893  
00008B40                          1894  *  ]  CLOSE INDIRECT
00008B40                          1895  
00008B40  4A45                    1896  GAP131   TST.W   D5             (GALB)
00008B42  6A38                    1897           BPL.S   GAE            [ MISSING
00008B44                          1898  
00008B44                          1899  * IF NO R@ GIVEN ADD R0
00008B44  4A85                    1900           TST.L   D5             (GARO)
00008B46  6B04                    1901           BMI.S   GAP135         R@ GIVEN
00008B48  D8B8 044C               1902           ADD.L   OFFSET,D4      NO R@ GIVEN; ADD R0
00008B4C                          1903  GAP135   DS      0
00008B4C                          1904  
00008B4C  2044                    1905           MOVE.L  D4,A0
00008B4E  2010                    1906           MOVE.L  (A0),D0
00008B50  6000 008A               1907           BRA     GAP199
00008B54                          1908  
00008B54                          1909  *  (  DO PARIN PAIR
00008B54                          1910  
00008B54  4A05                    1911  GAP141   TST.B   D5             (GALP)
00008B56  6B24                    1912           BMI.S   GAE            MULTI (
00008B58  4A85                    1913           TST.L   D5             (GARO)
00008B5A  6B20                    1914           BMI.S   GAE            R@ NOT ALLOWED WITH (..)
00008B5C  0005 0080               1915           ORI.B   #$80,D5        (GALP) SET LEFT PAREN
00008B60                          1916  
00008B60                          1917  * LEFT PARIN SET; MUST BE A@ NEXT
00008B60  101D                    1918           MOVE.B  (A5)+,D0       GET BYTE
00008B62  BDCD                    1919           CMP.L   A5,A6
00008B64  6516                    1920           BCS.S   GAE
00008B66  0C00 0041               1921           CMPI.B  #'A',D0
00008B6A  6610                    1922           BNE.S   GAE            NOT A-REG
00008B6C  41F8 0428               1923           LEA     REGS+32,A0
00008B70  6170                    1924           BSR.S   GASRGN         GET VALUE IN A@
00008B72  D881                    1925           ADD.L   D1,D4
00008B74  0086 80000000           1926           ORI.L   #$80000000,D6  (GAAVF) A-REG VALUE FLAG
00008B7A  60B6                    1927           BRA     GAP111S
00008B7C                          1928  
00008B7C  6000 F538               1929  GAE      BRA     SYNTAX
00008B80                          1930  
00008B80                          1931  *  COMMA  A-REG or
00008B80                          1932  *  COMMA  D-REG REQUIRED
00008B80                          1933  
00008B80  4A86                    1934  GAP161   TST.L   D6             (GAAVF)
00008B82  6AF8                    1935           BPL     GAE            NO A-REG SPECIFIED
00008B84  101D                    1936           MOVE.B  (A5)+,D0       GET BYTE
00008B86  BDCD                    1937           CMP.L   A5,A6
00008B88  65F2                    1938           BCS     GAE
00008B8A  0C00 0041               1939           CMPI.B  #'A',D0
00008B8E  6606                    1940           BNE.S   GAP163
00008B90  41F8 0428               1941           LEA     REGS+32,A0     GET VALUE IN A@
00008B94  600A                    1942           BRA.S   GAP165
00008B96  0C00 0044               1943  GAP163   CMPI.B  #'D',D0
00008B9A  66E0                    1944           BNE     GAE            NOT D-REG
00008B9C  41F8 0408               1945           LEA     REGS,A0        GET VALUE IN D@
00008BA0  6140                    1946  GAP165   BSR.S   GASRGN
00008BA2  D881                    1947           ADD.L   D1,D4
00008BA4  608C                    1948           BRA     GAP111S
00008BA6                          1949  
00008BA6                          1950  *  R@  OFFSET
00008BA6                          1951  
00008BA6  0C06 002B               1952  GAP171   CMPI.B  #'+',D6        (GAPMS)
00008BAA  66D0                    1953           BNE     GAE            ONLY + ALLOWED
00008BAC                          1954  
00008BAC                          1955  * ONLY ONE R@ ALLOWED
00008BAC                          1956  
00008BAC  4A85                    1957           TST.L   D5             (GARO)
00008BAE  6BCC                    1958           BMI     GAE            MULIT R@
00008BB0  0085 80000000           1959           ORI.L   #$80000000,D5  SET R@ GIVEN (GARO)
00008BB6                          1960  
00008BB6  41F8 044C               1961           LEA     OFFSET,A0
00008BBA  6126                    1962           BSR.S   GASRGN         GET VALUE IN R@
00008BBC  D881                    1963           ADD.L   D1,D4
00008BBE  6000 FF6C               1964           BRA     GAP119
00008BC2                          1965  
00008BC2                          1966  *  )  CLOSE THE WORLD
00008BC2                          1967  
00008BC2  4A86                    1968  GAP181   TST.L   D6             (GAAVF)
00008BC4  6AB6                    1969           BPL     GAE            NO (
00008BC6  6012                    1970           BRA.S   GAP197
00008BC8                          1971  
00008BC8                          1972  *  SPACE  TERMINATOR
00008BC8                          1973  
00008BC8  4A45                    1974  GAP191   TST.W   D5             (GALB)
00008BCA  6BB0                    1975           BMI     GAE            [ WITHOUT ]
00008BCC  4A05                    1976           TST.B   D5             (GALP)
00008BCE  6BAC                    1977           BMI     GAE            ( WITHOUT )
00008BD0  538D                    1978           SUBQ.L  #1,A5          ADJUST CHAR POINTER
00008BD2                          1979  
00008BD2                          1980  * IF NO R@ GIVEN ADD R0
00008BD2                          1981  
00008BD2  4A85                    1982           TST.L   D5             (GARO)
00008BD4  6B04                    1983           BMI.S   GAP197         R@ GIVEN
00008BD6  D8B8 044C               1984           ADD.L   OFFSET,D4
00008BDA  2004                    1985  GAP197   MOVE.L  D4,D0
00008BDC                          1986  
00008BDC  4CDF 0170               1987  GAP199   MOVEM.L (A7)+,D4-D6/A0
00008BE0  4E75                    1988           RTS
00008BE2                          1989  
00008BE2                          1990  * GET NEXT NUMBER
00008BE2                          1991  *  A0 = POINTER TO TABLE OF VALUES
00008BE2                          1992  *  D1 = VALUE ON RETURN
00008BE2                          1993  
00008BE2  4280                    1994  GASRGN   CLR.L   D0
00008BE4  101D                    1995           MOVE.B  (A5)+,D0       GET BYTE
00008BE6  BDCD                    1996           CMP.L   A5,A6
00008BE8  6592                    1997           BCS     GAE
00008BEA  0400 0030               1998           SUBI.B  #'0',D0        ADJUST TO ZERO
00008BEE  0C00 0007               1999           CMPI.B  #7,D0
00008BF2  6288                    2000           BHI     GAE            NOT 0 - 7
00008BF4  C0FC 0004               2001           MULU    #4,D0          4 * OFFSET
00008BF8  2230 0000               2002           MOVE.L  (A0,D0),D1
00008BFC  4E75                    2003           RTS
00008BFE                          2004  
00008BFE                          2005  
00008BFE                          2006  
00008BFE                          2007  
00008BFE                          2008  *-------------------------------------------------------------------------
00008BFE                          2009  * File H         Register save,Trace, Breakpoint                  03/03/82
00008BFE                          2010  
00008BFE                          2011  *       SAVE ALL REGISTERS ROUTINE-JMP [TEMP] BACK
00008BFE                          2012  *          USUALLY CALLED BY THE MACRO "SAVEREGS"
00008BFE                          2013  
00008BFE                          2014  SAVE     DS      0
00008BFE  4FF8 0444               2015           LEA     REGA7,A7       WHERE TO START STORING
00008C02  48E7 FFFE               2016           MOVEM.L D0-D7/A0-A6,-(A7)  SAVE REGISTERS
00008C06                          2017  
00008C06  4FF8 0780               2018           LEA     SYSTACK+4,A7   SET UP STRETCHED VERSAUG STACK
00008C0A                          2019  
00008C0A  2078 0444               2020           MOVE.L  REGA7,A0       A0 = TARGETS SUPERVISOR STACK POINTER
00008C0E  31D8 0406               2021           MOVE.W  (A0)+,REGSR+2  GET TARGETS SR
00008C12                          2022  
00008C12  21D8 0400               2023           MOVE.L  (A0)+,REGPC    GET TARGETS PC
00008C16                          2024  
00008C16  21C8 0444               2025           MOVE.L  A0,REGA7       WHERE TARGET STACK REALLY POINTS
00008C1A                          2026  
00008C1A  4E69                    2027           MOVE.L  USP,A1         GET USERS STACK POINTER
00008C1C  21C9 0448               2028           MOVE.L  A1,REGUS       SAVE IT FOR DISPLAY ETC
00008C20                          2029  
00008C20  2038 0400               2030           MOVE.L  REGPC,D0       GET PROGRAM COUNTER
00008C24  598F                    2031           SUBQ.L  #4,A7          SET REAL MACSBUG STACK
00008C26  2F38 04D6               2032           MOVE.L  TEMP,-(A7)     PUT RETURN ADDRESS ON STACK
00008C2A  4E75                    2033           RTS                    RETURN TO SENDER
00008C2C                          2034  
00008C2C                          2035  *
00008C2C                          2036  *     ***TRACE***  TRACE ENTRY POINT
00008C2C                          2037  *       ENTER FROM VECTOR 9  (LOCATION 24) FOR
00008C2C                          2038  *
00008C2C                          2039  
00008C2C                          2040  * REGISTER USAGE
00008C2C                          2041  *  A0 = ADDRESS OF BREAKPOINT ADDRESS
00008C2C                          2042  *  A2 = ADDRESS OF BREAKPOINT COUNTS
00008C2C                          2043  *  D1 = PC
00008C2C                          2044  *  D5 = TRACECNT
00008C2C                          2045  *  D7 = BKPT COUNT
00008C2C                          2046  
00008C2C  46FC 2700               2047  TRACE    MOVE.W  #$2700,SR      MASK OFF INTERRUPTS
00008C30                          2048m          SAVEREGS
00008C3E                          2049  
00008C3E                          2050  * IF PC POINTS TO 'TRACE'; DOUBLE EVENT OCCURED
00008C3E                          2051  *  CLEAR LAST EVENT BY IGNORING
00008C3E                          2052  
00008C3E  0CB8 00008008 0400      2053           CMPI.L  #V2,REGPC
00008C46                          2054  
00008C46  6610                    2055           BNE.S   TRACE16
00008C48                          2056  
00008C48  2A78 0444               2057           MOVE.L  REGA7,A5       TRIM LAST EVENT FROM STACK
00008C4C  31DD 0406               2058           MOVE.W  (A5)+,REGSR+2  *MOVE VALUES FROM STACK TO
00008C50  21DD 0400               2059           MOVE.L  (A5)+,REGPC    *PSUEDO SR, PC,
00008C54  21CD 0444               2060           MOVE.L  A5,REGA7       *REFLECT ADJUSTMENTS IN PSUEDO STACK
00008C58  0278 7FFF 0406          2061  TRACE16  ANDI.W  #$7FFF,REGSR+2 RESET "T" (TRACE) BIT
00008C5E                          2062  
00008C5E                          2063  
00008C5E  2A38 04DA               2064           MOVE.L  TRACECNT,D5
00008C62  6B54                    2065           BMI.S   TRACE39        EXECUTING ONE-INSTRUCTION
00008C64  6700 0916               2066           BEQ     ABORT335       NOT TRACEING
00008C68                          2067  
00008C68                          2068  *   MAKE SURE WE ARE NOT TRACING OURSELVES
00008C68  2238 0400               2069           MOVE.L  REGPC,D1       GET PC
00008C6C  41FA F392               2070           LEA.L   FIRST(PC),A0
00008C70  B288                    2071           CMP.L   A0,D1
00008C72  6B10                    2072           BMI.S   TISOK          TRACING BELOW OURSELVES
00008C74  41FA 2B74               2073           LEA     LAST(PC),A0
00008C78  B288                    2074           CMP.L   A0,D1
00008C7A  6208                    2075           BHI.S   TISOK          TRACING ABOVE OURSELVES
00008C7C  4BFA 015E               2076           LEA     MSG020(PC),A5  TRACING OURSELVES
00008C80  6000 0128               2077           BRA     CHKBP4
00008C84                          2078  TISOK
00008C84                          2079  
00008C84  41F8 0470               2080           LEA     BPADD,A0
00008C88  45F8 0494               2081           LEA     BPCNT,A2
00008C8C  7E09                    2082           MOVEQ   #9,D7          9TH BP IS "UNTILL" FEATURE
00008C8E                          2083  
00008C8E  B290                    2084  TRACE01  CMP.L   (A0),D1        SEE IF PC MATCHES ADDRESS IN TABLE
00008C90  6610                    2085           BNE.S   TRACE08
00008C92  2012                    2086           MOVE.L  (A2),D0        GET COUNT
00008C94  6700 0110               2087           BEQ     CHKBP3         COUNT ZERO
00008C98  5380                    2088           SUBQ.L  #1,D0          COUNT DOWN
00008C9A  2480                    2089           MOVE.L  D0,(A2)        SAVE IT
00008C9C  6700 0108               2090           BEQ     CHKBP3         COUNT WENT TO ZERO
00008CA0  6008                    2091           BRA.S   TRACE03
00008CA2                          2092  
00008CA2  5888                    2093  TRACE08  ADDQ.L  #4,A0          BUMP TABLE POINTER
00008CA4  588A                    2094           ADDQ.L  #4,A2          BUMP COUNT TABLE POINTER
00008CA6  5387                    2095           SUBQ.L  #1,D7          LOOP AROUND
00008CA8  66E4                    2096           BNE     TRACE01
00008CAA                          2097  
00008CAA  6100 FBCA               2098  TRACE03  BSR     TDISPLY        DO TRACE DISPLAY
00008CAE  53B8 04DA               2099           SUBQ.L  #1,TRACECNT    TRACE COUNT
00008CB2  6700 F510               2100           BEQ     MACSBUG        STOP WHEN ZERO
00008CB6  6008                    2101           BRA.S   UNTRACE        CONTINUE WITH TRACE
00008CB8                          2102  
00008CB8                          2103  
00008CB8                          2104  * END UP HERE AFTER BREAKPOINTING ONE INSTRUCTION
00008CB8                          2105  * -- PUT BP BACK IN AND CONTINUE TO RUN
00008CB8                          2106  
00008CB8  42B8 04DA               2107  TRACE39  CLR.L   TRACECNT
00008CBC  613A                    2108           BSR.S   SWAPIN         PUT BP INTO USER'S MEMORY
00008CBE  600E                    2109           BRA.S   UNSTACK        CONTINUE TO RUN
00008CC0                          2110  
00008CC0                          2111  
00008CC0  0078 8000 0406          2112  UNTRACE  ORI.W   #$8000,REGSR+2 SET UP TRACE BIT!
00008CC6                          2113m          ADDR2MEM TRACE,AV9     TAKE TRACE VECTOR
00008CCE                          2114  
00008CCE  2278 0448               2115  UNSTACK  MOVE.L  REGUS,A1
00008CD2  4E61                    2116           MOVE.L  A1,USP         US = TARGET'S USER STACK
00008CD4  2478 0400               2117           MOVE.L  REGPC,A2       A2 = TARGET'S PC
00008CD8                          2118  
00008CD8                          2119  
00008CD8                          2120           DS      0              INSURE MEMORY AT LOCATION OF PC
00008CD8  3012                    2121           MOVE.W  (A2),D0        * ADDR TRAP ERROR * IF NO MEMORY
00008CDA                          2122  
00008CDA  2278 0444               2123           MOVE.L  REGA7,A1       A1 = TARGET SYSTEM STACK (SS)
00008CDE                          2124  
00008CDE                          2125           DS      0              INSURE MEMORY AT TARGET'S STACK
00008CDE  230A                    2126           MOVE.L  A2,-(A1)       MOVE PC ONTO TARGET'S STACK
00008CE0                          2127  
00008CE0  3038 0406               2128           MOVE.W  REGSR+2,D0
00008CE4  3300                    2129           MOVE.W  D0,-(A1)       SR ONTO TARGET'S STACK
00008CE6                          2130  
00008CE6  21C9 04D6               2131           MOVE.L  A1,TEMP        TEMP = TARGETS SS
00008CEA                          2132  
00008CEA  4FF8 0408               2133           LEA     REGS,A7        A7 = POINTER TO PSUEDO REGISTERS
00008CEE  4CDF 7FFF               2134           MOVEM.L (A7)+,D0-D7/A0-A6  ARM MOST OF TARGET REGISTERS
00008CF2  2E78 04D6               2135           MOVE.L  TEMP,A7        SS = TARGET'S
00008CF6                          2136  
00008CF6  4E73                    2137           RTE                    GO BACK TO THE USER
00008CF8                          2138  
00008CF8                          2139  
00008CF8  6114                    2140  SWAPIN   BSR.S   SWAPOUT        MAKE SURE THEY ARE ALL OUT
00008CFA                          2141  
00008CFA  21F8 0010 04D2          2142           MOVE.L  AV4,SAVEAV4    SAVE VECTOR (WHOM EVER'S IT WAS)
00008D00  4DFA 0054               2143           LEA     CHKBP(PC),A6
00008D04  21CE 0010               2144           MOVE.L  A6,AV4         REPLACE IT WITH THE "CHKBP" RTN
00008D08  4DFA 002A               2145           LEA     SWAPIN1(PC),A6 A6 = ROUTINE ADDRESS
00008D0C  6010                    2146           BRA.S   SWAP
00008D0E                          2147  
00008D0E  4A78 04E0               2148  SWAPOUT  TST.W   BPSTATUS        SEE IF OUT ALREADY
00008D12  6740                    2149           BEQ.S   SWAPEND         YES...DONE
00008D14  21F8 04D2 0010          2150           MOVE.L  SAVEAV4,AV4     NO....REPLACE THE VECTOR
00008D1A                          2151  
00008D1A  4DFA 0028               2152           LEA     SWAPOUT1(PC),A6 A6 = ROUTINE ADDRESS
00008D1E  41F8 0470               2153  SWAP     LEA     BPADD,A0       A0 = ADDRESS OF TABLE
00008D22  45F8 0494               2154           LEA     BPCNT,A2       A2 = ADDRESS OF COUNTS
00008D26  7E09                    2155           MOVEQ   #9,D7          DO 9 BP
00008D28  47F8 04B8               2156           LEA     BPDATA,A3      CONTENT TABLE
00008D2C                          2157  
00008D2C  2850                    2158  SWAP1    MOVE.L  (A0),A4        GET POSSIBLE ADDDRESS
00008D2E  4A90                    2159           TST.L   (A0)           IS POSSIBLE ADDRESS ZERO
00008D30  671A                    2160           BEQ.S   SWAP99         ZERO MEANS NO BP DEFINED
00008D32  4ED6                    2161           JMP     (A6)           GO TO RIGHT ROUTINE
00008D34                          2162  
00008D34                          2163  SWAPIN1
00008D34  3014                    2164           MOVE.W  (A4),D0        USER'S PROGRAM GOES INTO TABLE
00008D36                          2165  
00008D36  3680                    2166           MOVE.W  D0,(A3)
00008D38  38BC 4AFB               2167           MOVE.W  #BKPOINT,(A4)  PUT BREAKPOINT IN
00008D3C                          2168  
00008D3C  31FC 0001 04E0          2169           MOVE.W  #1,BPSTATUS    FLAG AS BP IN
00008D42  6008                    2170           BRA.S   SWAP99
00008D44                          2171  
00008D44  3013                    2172  SWAPOUT1 MOVE.W  (A3),D0        GET CONTENTS FROM TABLE
00008D46  3880                    2173           MOVE.W  D0,(A4)        PUT CONTENTS BACK INTO PROGRAM
00008D48                          2174  
00008D48  4278 04E0               2175           CLR.W   BPSTATUS       FLAG AS BREAKPOINTS OUT
00008D4C  5888                    2176  SWAP99   ADDQ.L  #4,A0          BUMP ADDRESS TABLE POINTER
00008D4E  548B                    2177           ADDQ.L  #2,A3          BUMP CONTENT TABLE POINTER
00008D50  5387                    2178           SUBQ.L  #1,D7
00008D52  66D8                    2179           BNE     SWAP1
00008D54  4E75                    2180  SWAPEND  RTS
00008D56                          2181  
00008D56                          2182  *  ILLEGAL INSTRUCTION ENTRY POINT
00008D56                          2183  *   BREAKPOINT TEST
00008D56                          2184  *
00008D56  46FC 2700               2185  CHKBP    MOVE.W  #$2700,SR      MASK OF INT.
00008D5A                          2186m          SAVEREGS
00008D6A  2038 0400               2187           MOVE.L  REGPC,D0       GET PROGRAM COUNTER TO COMPARE
00008D6E  2A40                    2188           MOVE.L  D0,A5          A5 = TARGET PC
00008D70  3215                    2189           MOVE.W  (A5),D1        SEE WHAT OP CODE WAS XEQ
00008D72                          2190  
00008D72  619A                    2191           BSR     SWAPOUT        TAKE BREAKPOINTS OUT
00008D74                          2192  
00008D74  0C41 4AFB               2193           CMPI.W  #BKPOINT,D1    USED FOR BP
00008D78  6616                    2194           BNE.S   CHKBP11        NOT AT BREAKPOINT
00008D7A                          2195  
00008D7A  41F8 0470               2196           LEA     BPADD,A0       A0 = ADDRESS OF BP ADDRESSES
00008D7E  45F8 0494               2197           LEA     BPCNT,A2       A2 = ADDRESS OF BP COUNTS
00008D82  7E09                    2198           MOVEQ   #9,D7          D7 = LOOP COUNT
00008D84                          2199  
00008D84  BBD0                    2200  CHKBP1   CMP.L   (A0),A5        SEE IF WE ARE THERE
00008D86  6712                    2201           BEQ.S   CHKBP2         AT BREAKPOINT; AT AN ADDRESS
00008D88                          2202  
00008D88  5888                    2203           ADDQ.L  #4,A0          BUMP BOTH POINTERS
00008D8A  588A                    2204           ADDQ.L  #4,A2
00008D8C  5387                    2205           SUBQ.L  #1,D7
00008D8E  66F4                    2206           BNE     CHKBP1
00008D90                          2207  
00008D90                          2208  * IS NOT A BREAKPOINT; ASSUME ILLEGAL INSTRUCTION
00008D90  4BFA 0028               2209  CHKBP11  LEA     MSG009(PC),A5  'ILLEGAL INSTRUCTION'
00008D94  4278 04DE               2210           CLR.W   TRACEON        RESET TRACE MODE
00008D98  6010                    2211           BRA.S   CHKBP4
00008D9A                          2212  
00008D9A                          2213  * AT BREAKPOINT...CHECK COUNT
00008D9A  2012                    2214  CHKBP2   MOVE.L  (A2),D0        GET COUNT
00008D9C  6708                    2215           BEQ.S   CHKBP3         COUNT ZERO
00008D9E  5380                    2216           SUBQ.L  #1,D0          DECREMENT
00008DA0  2480                    2217           MOVE.L  D0,(A2)        PUT COUNT BACK
00008DA2  6600 F7F4               2218           BNE     GOCMD1         COUNT NOT ZERO; KEEP GOING
00008DA6                          2219  
00008DA6  4BFA 0026               2220  CHKBP3   LEA     MSG014(PC),A5  "AT BREAKPOINT"
00008DAA                          2221  
00008DAA  6100 F35A               2222  CHKBP4   BSR     FIXDCRLF
00008DAE  6100 0A72               2223           BSR     OUT1CR
00008DB2  6100 FAC2               2224           BSR     TDISPLY        PRINT TRACE DISPLAY
00008DB6  6000 F40C               2225           BRA     MACSBUG
00008DBA                          2226  
00008DBA= 49 4C 4C 45 47 41 ...   2227  MSG009   DC.B    'ILLEGAL INSTRUCTION',EOT
00008DCE= 41 54 20 42 52 45 ...   2228  MSG014   DC.B    'AT BREAKPOINT',EOT
00008DDC= 2E 50 43 20 77 69 ...   2229  MSG020   DC.B    '.PC within "DEBUGGER"',BELL,EOT
00008DF3= 00                      2230           DC.B    0              PAD BYTE
00008DF4                          2231  
00008DF4                          2232  
00008DF4                          2233  *-------------------------------------------------------------------------
00008DF4                          2234  * File HE        HELP Command                                     12/01/81
00008DF4                          2235  
00008DF4                          2236  * HELP  COMMAND
00008DF4                          2237  *  PRINT: REGISTERS AND COMMANDS IN TABLES
00008DF4                          2238  
00008DF4  4BFA 0066               2239  HECMD    LEA     MSG002(PC),A5
00008DF8  6100 F2F8               2240           BSR     FIXDATA
00008DFC  6100 0A24               2241           BSR     OUT1CR         PRINT
00008E00                          2242  
00008E00  49FA F498               2243           LEA     SOLIST(PC),A4  A4 = POINTER TO COMMAND LIST
00008E04                          2244  
00008E04  6100 0AA4               2245           BSR     FIXBUF
00008E08  143C 0008               2246           MOVE.B  #8,D2          D2 = # CMDS PER LINE
00008E0C  321C                    2247  HELP4    MOVE.W  (A4)+,D1       GET 2 BYTE COMMAND
00008E0E  0C41 FFFF               2248           CMPI.W  #$FFFF,D1
00008E12  6740                    2249           BEQ.S   HELP6          DONE PRINT LAST BUFFER
00008E14  548C                    2250           ADDQ.L  #2,A4          BUMP POINTER UP BY 2
00008E16  4A41                    2251           TST.W   D1             IS THE INVISIBLE INDICATOR ON?
00008E18  6BF2                    2252           BMI     HELP4          YES... THEN BYPASS THIS ONE
00008E1A  3601                    2253           MOVE.W  D1,D3          SAVE XX FOR "XX" AND "NOXX" IN HELP
00008E1C  0241 7F7F               2254           ANDI.W  #$7F7F,D1      REMOVE CONTROL BITS
00008E20  3CC1                    2255           MOVE.W  D1,(A6)+       NO.... MOVE THIS COMMAND TO "PRINT" LINE
00008E22  2CFC 20202020           2256           MOVE.L  #'    ',(A6)+  MOVE BLANKS FOR SPACING
00008E28  6118                    2257           BSR.S   HELP81         PRINT THE LINE IF FULL
00008E2A  0803 0007               2258           BTST    #7,D3          IS "NO" OPTION SUPPORTED?
00008E2E  6710                    2259           BEQ.S   EOHLOOP        NO...BYPASS THIS COMMAND, ELSE...
00008E30  3CFC 4E4F               2260           MOVE.W  #'NO',(A6)+    "NO  "   IN MSG
00008E34  0243 7F7F               2261           ANDI.W  #$7F7F,D3      RESET CONTROL BITS
00008E38  3CC3                    2262           MOVE.W  D3,(A6)+       "NOCC"   IN MSG (WHERE CC=COMMAND CODE)
00008E3A  3CFC 2020               2263           MOVE.W  #'  ',(A6)+    "NOCC  " IN MSG    "    "    "      "
00008E3E  6102                    2264           BSR.S   HELP81         PRINT THE LINE IF FULL
00008E40  60CA                    2265  EOHLOOP  BRA     HELP4          NEXT COMMAND.
00008E42                          2266  
00008E42                          2267  *        DISPLAY LINE OF COMMANDS (IF FULL)
00008E42                          2268  
00008E42  5302                    2269  HELP81   SUBQ.B  #1,D2          D2 = COUNT OF COMMANDS PER LINE
00008E44  660C                    2270           BNE.S   HELP85         NOT FULL, JUST RETURN FOR MORE
00008E46  6100 09DA               2271           BSR     OUT1CR         YES, THEN WRITE IT
00008E4A  6100 0A5E               2272           BSR     FIXBUF         SET-UP LINE FOR NEXT COMMANDS
00008E4E  143C 0008               2273           MOVE.B  #8,D2          D2 = MAX NUMBER CAN BE PLACED IN LINE
00008E52  4E75                    2274  HELP85   RTS
00008E54                          2275  
00008E54  6100 09CC               2276  HELP6    BSR     OUT1CR         PRINT ANY REMAINING PORTION
00008E58                          2277  *        BRA     HELP1          SEE IF COMPLETE
00008E58  6000 F36A               2278           BRA     MACSBUG        HELP IS COMPLETE SO RETURN
00008E5C                          2279  
00008E5C= 2E 50 43 20 2E 53 ...   2280  MSG002   DC.B    '.PC .SR .US .SS',CR,LF
00008E6D= 2E 44 30 20 2E 44 ...   2281           DC.B    '.D0 .D1 .D2 .D3 .D4 .D5 .D6 .D7',CR,LF
00008E8E= 2E 41 30 20 2E 41 ...   2282           DC.B    '.A0 .A1 .A2 .A3 .A4 .A5 .A6 .A7',CR,LF
00008EAF= 2E 52 30 20 2E 52 ...   2283           DC.B    '.R0 .R1 .R2 .R3 .R4 .R5 .R6',CR,LF,EOT
00008ECD= 00                      2284           DC.B    0              PAD BYTE
00008ECE                          2285  
00008ECE                          2286  
00008ECE                          2287  
00008ECE                          2288  *-------------------------------------------------------------------------
00008ECE                          2289  * File HEX2DEC   HEX2DEC convert hex to decimal                   11/02/81
00008ECE                          2290  
00008ECE                          2291  
00008ECE                          2292  *    CONVERT BINARY TO DECIMAL  REG D0 PUT IN (A6) BUFFER AS ASCII
00008ECE                          2293  
00008ECE  48E7 7B00               2294  HEX2DEC  MOVEM.L D1-D4/D6-D7,-(A7)   SAVE REGISTERS
00008ED2  2E00                    2295           MOVE.L  D0,D7          SAVE IT HERE
00008ED4  6A08                    2296           BPL.S   HX2DC
00008ED6  4487                    2297           NEG.L   D7             CHANGE TO POSITIVE
00008ED8  6B4E                    2298           BMI.S   HX2DC57        SPECIAL CASE (-0)
00008EDA  1CFC 002D               2299           MOVE.B  #'-',(A6)+     PUT IN NEG SIGN
00008EDE  4244                    2300  HX2DC    CLR.W   D4             FOR ZERO SURPRESS
00008EE0  7C0A                    2301           MOVEQ   #10,D6         COUNTER
00008EE2  7401                    2302  HX2DC0   MOVEQ   #1,D2          VALUE TO SUB
00008EE4  2206                    2303           MOVE.L  D6,D1          COUNTER
00008EE6  5381                    2304           SUBQ.L  #1,D1          ADJUST - FORM POWER OF TEN
00008EE8  671A                    2305           BEQ.S   HX2DC2         IF POWER IS ZERO
00008EEA  3602                    2306  HX2DC1   MOVE.W  D2,D3          D3=LOWER WORD
00008EEC  C6FC 000A               2307           MULU    #10,D3
00008EF0  4842                    2308           SWAP    D2             D2=UPPER WORD
00008EF2  C4FC 000A               2309           MULU    #10,D2
00008EF6  4843                    2310           SWAP    D3             ADD UPPER TO UPPER
00008EF8  D443                    2311           ADD.W   D3,D2
00008EFA  4842                    2312           SWAP    D2             PUT UPPER IN UPPER
00008EFC  4843                    2313           SWAP    D3             PUT LOWER IN LOWER
00008EFE  3403                    2314           MOVE.W  D3,D2          D2=UPPER & LOWER
00008F00  5381                    2315           SUBQ.L  #1,D1
00008F02  66E6                    2316           BNE     HX2DC1
00008F04  4280                    2317  HX2DC2   CLR.L   D0             HOLDS SUB AMT
00008F06  BE82                    2318  HX2DC22  CMP.L   D2,D7
00008F08  6D06                    2319           BLT.S   HX2DC3         IF NO MORE SUB POSSIBLE
00008F0A  5280                    2320           ADDQ.L  #1,D0          BUMP SUBS
00008F0C  9E82                    2321           SUB.L   D2,D7          COUNT DOWN BY POWERS OF TEN
00008F0E  60F6                    2322           BRA.S   HX2DC22        DO MORE
00008F10  4A00                    2323  HX2DC3   TST.B   D0             ANY VALUE?
00008F12  6604                    2324           BNE.S   HX2DC4
00008F14  4A44                    2325           TST.W   D4             ZERO SURPRESS
00008F16  6708                    2326           BEQ.S   HX2DC5
00008F18  0600 0030               2327  HX2DC4   ADDI.B  #$30,D0        BINARY TO ASCII
00008F1C  1CC0                    2328           MOVE.B  D0,(A6)+       PUT IN BUFFER
00008F1E  1800                    2329           MOVE.B  D0,D4          MARK AS NON ZERO SURPRESS
00008F20  5386                    2330  HX2DC5   SUBQ.L  #1,D6          NEXT POWER
00008F22  66BE                    2331           BNE     HX2DC0
00008F24  4A44                    2332           TST.W   D4             SEE IF ANYTHING PRINTED
00008F26  6604                    2333           BNE.S   HX2DC6
00008F28  1CFC 0030               2334  HX2DC57  MOVE.B  #'0',(A6)+     PRINT AT LEST A ZERO
00008F2C  4CDF 00DE               2335  HX2DC6   MOVEM.L (A7)+,D1-D4/D6-D7   RESTORE REGISTERS
00008F30  4E75                    2336           RTS                    END OF ROUTINE
00008F32                          2337  
00008F32                          2338  
00008F32                          2339  
00008F32                          2340  
00008F32                          2341  *-------------------------------------------------------------------------
00008F32                          2342  * File MDDI      MD[S] (Memory Display) Command                   06/16/82
00008F32                          2343  
00008F32                          2344  *   ***MD***   MEMORY DISPLAY         ENTRY POINT
00008F32                          2345  *     FORMAT:  MD[S] <ADDRESS> [<COUNT>] [;DI]
00008F32                          2346  * 1.  IF 'S' USED IN COMMAND THEN IT WILL DUMP 16 LINES, (1 Screen), AND
00008F32                          2347  *     PROMPT-ENTER CR FOR 16 MORE LINES ETC OR ANY MACSBUG COMMAND.
00008F32                          2348  *
00008F32                          2349  
00008F32                          2350  MDCMD    DS      0
00008F32  6100 0A8E               2351           BSR     SCANPORT       WHERE TO SEND OUTPUT
00008F36  21F9 0000062C 0620      2352           MOVE.L  INPORT1.L,INFROM ONLY ALLOW INPUT FROM PORT1
00008F3E                          2353  
00008F3E  7CFF                    2354           MOVEQ   #-1,D6         D6 = HOW MANY LINES PER PAGE
00008F40                          2355  
00008F40  97CB                    2356           SUB.L   A3,A3          A4 = DEFAULT ZERO  START
00008F42  284B                    2357           MOVE.L  A3,A4          A3 = END ADDR
00008F44                          2358  
00008F44  4287                    2359           CLR.L   D7             D7 = DO NOT DISASSEMBLE
00008F46  244D                    2360           MOVE.L  A5,A2
00008F48  BDCA                    2361  PRINT8   CMP.L   A2,A6          LOOK FOR OPTIONS
00008F4A  651A                    2362           BCS.S   PRINTDI        NO  OPTIONS
00008F4C  0C1A 003B               2363           CMPI.B  #';',(A2)+
00008F50  66F6                    2364           BNE     PRINT8
00008F52                          2365  
00008F52  2C4A                    2366           MOVE.L  A2,A6
00008F54  538E                    2367           SUBQ.L  #1,A6          A6 = POINTER TO ;
00008F56                          2368  
00008F56  0C1A 0044               2369           CMPI.B  #'D',(A2)+
00008F5A  6600 F15A               2370  PRINTMB  BNE     SYNTAX         COMMAND SYNTAX ERROR
00008F5E  0C1A 0049               2371           CMPI.B  #'I',(A2)+
00008F62  66F6                    2372           BNE     PRINTMB
00008F64  7EFF                    2373           MOVEQ   #-1,D7         DISASSEMBLE OPTION
00008F66                          2374  PRINTDI
00008F66                          2375  
00008F66                          2376  
00008F66                          2377  * LOOK FOR "S" IN COMMAND
00008F66  1015                    2378           MOVE.B  (A5),D0
00008F68  0C00 0053               2379           CMPI.B  #'S',D0
00008F6C  6608                    2380           BNE.S   PRINT5         NO "S" IN COMMAND
00008F6E  528D                    2381           ADDQ.L  #1,A5          MOVE PAST "S"
00008F70                          2382  
00008F70  7C10                    2383           MOVEQ   #16,D6         DO 16 LINES AT A TIME
00008F72  97CB                    2384           SUB.L   A3,A3
00008F74  538B                    2385           SUBQ.L  #1,A3          MAX END ADDRESS
00008F76                          2386  
00008F76  41FA 001A               2387  PRINT5   LEA     PRINT7(PC),A0  WHERE TO GO IF NO PARAMETERS
00008F7A  6100 072A               2388           BSR     FNEXTF         FIND NEXT FIELD
00008F7E  6100 FB2C               2389           BSR     GETA
00008F82  2840                    2390           MOVE.L  D0,A4          A4 = GET ADDRESS
00008F84                          2391  
00008F84  6100 0720               2392           BSR     FNEXTF
00008F88  6100 0770               2393           BSR     GETEXP         D0 = GET COUNT
00008F8C  D08C                    2394           ADD.L   A4,D0          END=START+COUNT-1
00008F8E  5380                    2395           SUBQ.L  #1,D0          BACK OFF ONE
00008F90  2640                    2396           MOVE.L  D0,A3          A3 = END ADDRESS
00008F92                          2397  
00008F92  4A87                    2398  PRINT7   TST.L   D7
00008F94  672A                    2399           BEQ.S   PUTADR         NOT DISASSEMBLE
00008F96                          2400  
00008F96  6100 0912               2401  PRINTDI5 BSR     FIXBUF         ;DI OPTION
00008F9A  48E7 0310               2402           MOVEM.L A3/D6-D7,-(A7)
00008F9E  4CD4 0007               2403           MOVEM.L (A4),D0-D2     D0-D2 = DATA TO DISASSEMBLE
00008FA2  6100 22D2               2404           BSR     DCODE68K       DISASSEMBLE
00008FA6  6100 087A               2405           BSR     OUT1CR
00008FAA  4CDF 08C0               2406           MOVEM.L (A7)+,A3/D6-D7
00008FAE                          2407  
00008FAE  5386                    2408           SUBQ.L  #1,D6
00008FB0  676C                    2409           BEQ.S   PRINT9         'MDS' COMMAND
00008FB2                          2410  
00008FB2  B7CC                    2411           CMP.L   A4,A3          END CHECK
00008FB4  64E0                    2412           BCC     PRINTDI5
00008FB6  6066                    2413           BRA.S   PRINT9
00008FB8                          2414  
00008FB8  7C10                    2415  PRINT3   MOVEQ   #16,D6         D6 = LINE BLOCK COUNT
00008FBA  97CB                    2416           SUB.L   A3,A3
00008FBC  538B                    2417           SUBQ.L  #1,A3          A3 = MAX END ADDRESS
00008FBE  60D2                    2418           BRA     PRINT7
00008FC0                          2419  
00008FC0                          2420  * START A NEW  LINE
00008FC0                          2421  *
00008FC0  6100 08E8               2422  PUTADR   BSR     FIXBUF         SET UP OUTPUT BUFFER
00008FC4  200C                    2423           MOVE.L  A4,D0          CURRENT LINE ADDRESS
00008FC6  6100 063E               2424           BSR     FRELADDR       FORM RELATIVE ADDRESS
00008FCA  1CFC 0020               2425           MOVE.B  #$20,(A6)+     FORMAT  SPACE
00008FCE  204C                    2426           MOVE.L  A4,A0          A0 IS SCANNING ADDRESS
00008FD0  7610                    2427           MOVEQ   #$10,D3        SET UP COUNTER FOR LOOP
00008FD2                          2428  
00008FD2  1018                    2429  NXTBP    MOVE.B  (A0)+,D0       GET BYTE TO PRINT
00008FD4  6100 0614               2430           BSR     PNT2HX         PRINT IT
00008FD8  1CFC 0020               2431           MOVE.B  #$20,(A6)+     SPACE BETWEEN EACH HEX
00008FDC                          2432  
00008FDC  0C03 0009               2433           CMPI.B  #9,D3          HALF LINE SPACING
00008FE0  6604                    2434           BNE.S   NXTBP3
00008FE2  1CFC 0020               2435           MOVE.B  #$20,(A6)+
00008FE6                          2436  NXTBP3
00008FE6                          2437  
00008FE6  5383                    2438           SUBQ.L  #1,D3
00008FE8  66E8                    2439           BNE     NXTBP          LOOP TILL D3 IS ZERO
00008FEA                          2440  
00008FEA  1CFC 0020               2441           MOVE.B  #$20,(A6)+     MOVE A SPACE
00008FEE  204C                    2442           MOVE.L  A4,A0          RELOAD SCANNER FOR ASCII PRINTS
00008FF0  7610                    2443           MOVEQ   #$10,D3        RELOAD COUNTER
00008FF2                          2444  
00008FF2  1018                    2445  NXTCHR   MOVE.B  (A0)+,D0       FETCH BYTE
00008FF4  0200 007F               2446           ANDI.B  #$7F,D0        REMOVE HIGH ORDER BIT, (ASCII ONLY USES 7 BITS)
00008FF8  0C00 0020               2447           CMPI.B  #$20,D0        SEE IF IT IS CONTROL CHAR
00008FFC  6D06                    2448           BLT.S   NOTCHR         BYPASS IF IT IS... ELSE
00008FFE  0C00 007F               2449           CMPI.B  #$7F,D0        IS IT A "7F"?    (CAUSES PRINTER PROBLEM)
00009002  6D04                    2450           BLT.S   PUTCHR         NO... THEN PRINT IT, ELSE SUBSTITUTE "."
00009004  103C 002E               2451  NOTCHR   MOVE.B  #$2E,D0        CHANGE UNPRINTABLE TO PERIOD
00009008                          2452  
00009008  1CC0                    2453  PUTCHR   MOVE.B  D0,(A6)+       MOVE "EDITTED" CHARACTER TO PRINT LINE
0000900A  5383                    2454           SUBQ.L  #1,D3          LOOP AROUND FOR NEXT CHAR
0000900C  66E4                    2455           BNE     NXTCHR         ANY LEFT?
0000900E  6100 0812               2456           BSR     OUT1CR         NO... THEN PRINT THE COMPLETE LINE
00009012  508C                    2457           ADDQ.L  #$08,A4        UPDATE STARTING ADDRESS OF NEXT ADDRESS
00009014  508C                    2458           ADDQ.L  #$08,A4        ........
00009016  B7CC                    2459           CMP.L   A4,A3          DOES NEW LINE START PAST END
00009018  6504                    2460           BCS.S   PRINT9         SEE IF STILL GOING
0000901A  5386                    2461           SUBQ.L  #1,D6          DECR THE COUNTER
0000901C  66A2                    2462           BNE     PUTADR         DO ANOTHER LINE
0000901E                          2463  
0000901E  4BFA F26C               2464  PRINT9   LEA     MSG001(PC),A5  SET UP FOR PROMPT
00009022  6100 F0CE               2465           BSR     FIXDATA
00009026  1CFC 003E               2466           MOVE.B  #'>',(A6)+     PROMPT SAME AS MACSBUG
0000902A  1CFC 0020               2467           MOVE.B  #BLANK,(A6)+
0000902E  6100 080C               2468           BSR     OUTPUT         PRINT IT
00009032                          2469  
00009032  6100 0876               2470           BSR     FIXBUF         RESET BUFFER
00009036  6100 087A               2471           BSR     PORTIN1        TAKE IN INPUT
0000903A  BBCE                    2472           CMP.L   A6,A5          SEE IF ANYTHING ENTERED
0000903C  6700 FF7A               2473           BEQ     PRINT3         NOTHING ENTERED; DO 16 MORE LINES
00009040  42B8 061C               2474           CLR.L   OUTTO          *
00009044  6000 F1C0               2475           BRA     DECODE6        GO MAKE SURE 2ND DIGIT IS BLANK
00009048                          2476  
00009048                          2477  
00009048                          2478  
00009048                          2479  
00009048                          2480  *-------------------------------------------------------------------------
00009048                          2481  * File MMDI      Modify Memory command WITH asm/disasm            11/27/81
00009048                          2482  
00009048                          2483  * MODIFY MEMORY
00009048                          2484  *  COMMON REGISTER USAGE
00009048                          2485  *   A6  IO BUFFER POINTER  END
00009048                          2486  *   A5  IO BUFFER POINTER  START
00009048                          2487  *   A4  ADDRESS TO MODIFY
00009048                          2488  *   A3
00009048                          2489  *   A2
00009048                          2490  *   A1
00009048                          2491  *   A0
00009048                          2492  *   D7  DATA READ (DATA STORED)
00009048                          2493  *   D6  SIZE  1/2/4 BYTES  (ASM/DISASM 2 - 10 BYTES)
00009048                          2494  *   D5  OVERRIDE BYTE (80XX=NON VERIFY)  (XX80=BYTE SIZE)
00009048                          2495  *
00009048                          2496  * ;OPTIONS
00009048                          2497  *   ;W  WORD
00009048                          2498  *   ;L  LONG WORD (4 BYTES)
00009048                          2499  *   ;DI DISASSEMBLE
00009048                          2500  *     ;O  ODD ADDRESSES ONLY
00009048                          2501  *     ;V  EVEN ADDRESSES ONLY
00009048                          2502  *       ;N  NON-VERIFY
00009048                          2503  *
00009048                          2504  
00009048  6100 067A               2505  MMDI     BSR     CKWADR
0000904C  6100 067C               2506           BSR     CKADDR
00009050  4286                    2507           CLR.L   D6             SIZE = 0
00009052  D9C6                    2508  MMDI22   ADD.L   D6,A4          PC = PC + SIZE
00009054  6100 0854               2509  MMDI23   BSR     FIXBUF         A5 & A6 = POINTER TO BUFFER
00009058                          2510  
00009058                          2511  *                  ENTRY
00009058                          2512  *                   A4 = PROGRAM COUNTER
00009058                          2513  *                   A5 = POINTER TO STORE DISASSEMBLED LINE
00009058  4CD4 0007               2514           MOVEM.L   (A4),D0-D2          DATA TO DISASSEMBLE
0000905C  6100 2218               2515           BSR       DCODE68K
00009060                          2516  *                  RETURN
00009060                          2517  *                   A4 = NEW PROGRAM COUNTER
00009060                          2518  *                   A5 = PTR START BUFFER
00009060                          2519  *                   A6 = PRT END BUFFER
00009060                          2520  *                   D6 = NUMBER OF BYTES DISASSEMBLED
00009060                          2521  
00009060  1CFC 003F               2522           MOVE.B  #'?',(A6)+
00009064  6100 07D6               2523           BSR     OUTPUT
00009068                          2524  
00009068  6100 0840               2525  MMDI31   BSR     FIXBUF
0000906C  6100 0856               2526           BSR     PORTIN1N       INPUT ASSEMBLY SOURCE (NO LINE FEED)
00009070  BDCD                    2527           CMP.L   A5,A6
00009072  6606                    2528           BNE.S   MMDI34
00009074  6100 07AC               2529           BSR     OUT1CR         NOTHING INPUT; OUTPUT LINE FEED
00009078  60DA                    2530           BRA     MMDI23
0000907A                          2531  
0000907A  99C6                    2532  MMDI34   SUB.L   D6,A4          BACKUP PC
0000907C                          2533  
0000907C  0C15 002E               2534           CMPI.B  #'.',(A5)
00009080  6700 01DE               2535           BEQ     MM905          CLOSE
00009084                          2536  
00009084  47F8 078D               2537           LEA     SYSTACK+17,A3  STORE BUFFER
00009088                          2538  
00009088                          2539  *                  A3 = STORE POINTER
00009088                          2540  *                  A4 = PROGRAM COUNTER
00009088                          2541  *                  A5 = POINTER TO DATA TO ASSEMBLE
00009088                          2542  *                  A6 = POINTER TO END OF SOURCE DATA
00009088                          2543  
00009088  6100 1006               2544           BSR     CODE68K        ASSEMBLE
0000908C                          2545  
0000908C                          2546  *                  A3 = POINTER TO LINE ASSEMBLED
0000908C                          2547  *                  A4 = PROGRAM COUNTER
0000908C                          2548  *                  A6 = POINTER END OF LINE ASSEMBLED
0000908C                          2549  *                  D0-D2 = DATA ASSEMBLED
0000908C                          2550  *                  D6 = NUMBER OF BYTES ASSEMBLED
0000908C                          2551  *                  D7 = ERROR FLAG & POSITION OF ERROR
0000908C                          2552  
0000908C  2A4B                    2553           MOVE.L  A3,A5
0000908E  D7FC 0000004E           2554           ADD.L   #78,A3         A3 = MAX LINE
00009094  B7CE                    2555  MMDI26   CMP.L   A6,A3
00009096  6506                    2556           BCS.S   MMDI27
00009098  1CFC 0020               2557           MOVE.B  #BLANK,(A6)+   SPACE FILL LINE
0000909C  60F6                    2558           BRA     MMDI26
0000909E  6100 0782               2559  MMDI27   BSR     OUT1CR         PRINT LINE JUST ENTERED
000090A2                          2560  
000090A2  4A07                    2561           TST.B   D7
000090A4  6620                    2562           BNE.S   MMDI30         ERROR; DON'T STORE DATA
000090A6                          2563  
000090A6  45F8 0780               2564           LEA     SYSTACK+4,A2   A2 = TEMP AREA
000090AA  48E2 E000               2565           MOVEM.L D0/D1/D2,-(A2) STORE DATA
000090AE  2206                    2566           MOVE.L  D6,D1          D1 = NUMBER OF BYTES TO STORE
000090B0  5381                    2567           SUBQ.L  #1,D1
000090B2  224C                    2568           MOVE.L  A4,A1          A1 = DATA STORE POINTER
000090B4  101A                    2569  MMDI29   MOVE.B  (A2)+,D0
000090B6  1280                    2570           MOVE.B  D0,(A1)
000090B8  1419                    2571           MOVE.B  (A1)+,D2       INSURE DATA STORED
000090BA  B400                    2572           CMP.B   D0,D2
000090BC  6600 0196               2573           BNE     MM90
000090C0  51C9 FFF2               2574           DBRA    D1,MMDI29
000090C4  608C                    2575           BRA     MMDI22
000090C6                          2576  
000090C6  6100 07E2               2577  MMDI30   BSR     FIXBUF
000090CA  1CFC 0020               2578  MMDI44   MOVE.B  #BLANK,(A6)+   SPACES
000090CE  51CF FFFA               2579           DBRA    D7,MMDI44
000090D2                          2580  
000090D2  1D7C 0058 FFFF          2581           MOVE.B  #'X',-1(A6)    X UNDER ERROR
000090D8  1CFC 003F               2582           MOVE.B  #'?',(A6)+     ? ALLOW REINPUT
000090DC  6100 075E               2583           BSR     OUTPUT
000090E0  6086                    2584           BRA     MMDI31
000090E2                          2585  
000090E2                          2586  
000090E2                          2587  MMCMD    DS      0              "MM" Command -Memory Modify-
000090E2  41FA EFD2               2588           LEA     SYNTAX(PC),A0  A0=ERROR RETURN
000090E6  6100 05BE               2589           BSR     FNEXTF
000090EA  6100 F9C0               2590           BSR     GETA
000090EE  2840                    2591           MOVE.L  D0,A4          A4= ADDRESS OF DATA
000090F0  7C01                    2592           MOVEQ   #1,D6          SIZE = BYTE
000090F2  4285                    2593           CLR.L   D5             NO OVERRIDE
000090F4                          2594  
000090F4  BDCD                    2595  MM05     CMP.L   A5,A6
000090F6  6566                    2596           BCS.S   MM10           AT END OF BUFFER
000090F8                          2597  
000090F8                          2598  * LOOK FOR ;OPTIONS
000090F8  101D                    2599           MOVE.B  (A5)+,D0
000090FA  0C00 003B               2600           CMPI.B  #';',D0
000090FE  66F4                    2601           BNE     MM05           IGNORE NOT ;
00009100                          2602  
00009100  101D                    2603           MOVE.B  (A5)+,D0       GET NEXT CHAR
00009102  0C00 0044               2604           CMPI.B  #'D',D0
00009106  660A                    2605           BNE.S   MM045
00009108                          2606  
00009108  0C1D 0049               2607           CMPI.B  #'I',(A5)+     DISSAMBLY OPTION
0000910C  66E6                    2608           BNE     MM05
0000910E  6000 FF38               2609           BRA     MMDI
00009112                          2610  
00009112  0C00 0057               2611  MM045    CMPI.B  #'W',D0
00009116  6742                    2612           BEQ.S   MM065          ;W   D6=2
00009118                          2613  
00009118  0C00 004C               2614           CMPI.B  #'L',D0
0000911C  6608                    2615           BNE.S   MM054
0000911E  1C3C 0004               2616           MOVE.B  #4,D6          ;L   D6=4
00009122  4205                    2617           CLR.B   D5             RESET BYTE OVERRIDE
00009124  60CE                    2618           BRA     MM05
00009126                          2619  
00009126  0C00 004E               2620  MM054    CMPI.B  #'N',D0
0000912A  6606                    2621           BNE.S   MM056
0000912C  0045 8000               2622           ORI.W   #$8000,D5      ;N  D5=$8000
00009130  60C2                    2623           BRA     MM05
00009132                          2624  
00009132  0C00 004F               2625  MM056    CMPI.B  #'O',D0
00009136  6608                    2626           BNE.S   MM058
00009138  200C                    2627           MOVE.L  A4,D0          ;O
0000913A  0000 0001               2628           ORI.B   #1,D0          FORCE ODD ADDRESS
0000913E  600E                    2629           BRA.S   MM060
00009140                          2630  
00009140  0C00 0056               2631  MM058    CMPI.B  #'V',D0
00009144  6600 EF70               2632           BNE     SYNTAX         ERROR
00009148  200C                    2633           MOVE.L  A4,D0          ;V
0000914A  0200 00FE               2634           ANDI.B  #$FE,D0        FORCE EVEN ADDRESS
0000914E  2840                    2635  MM060    MOVE.L  D0,A4
00009150  0005 0080               2636           ORI.B   #$80,D5        BYTE OVERRIDE
00009154  1C3C 0002               2637  MM064    MOVE.B  #2,D6          SIZE = WORD (2 BYTES)
00009158  609A                    2638           BRA     MM05
0000915A                          2639  
0000915A  4205                    2640  MM065    CLR.B   D5             RESET BYTE OVERRIDE
0000915C  60F6                    2641           BRA     MM064
0000915E                          2642  
0000915E                          2643  * FORMAT ADDRESS FOR PRINTING
0000915E  200C                    2644  MM10     MOVE.L  A4,D0
00009160  0C06 0001               2645           CMPI.B  #1,D6
00009164  6708                    2646           BEQ.S   MM11           "BYTE"
00009166  4A05                    2647           TST.B   D5
00009168  6B04                    2648           BMI.S   MM11           BYTE OVERRIDE
0000916A  6100 0558               2649           BSR     CKWADR         CHK ALLIGNMENT
0000916E  6100 055A               2650  MM11     BSR     CKADDR         *
00009172  6100 0736               2651           BSR     FIXBUF
00009176  6100 048E               2652           BSR     FRELADDR       FORM RELATIVE ADDRESS
0000917A  1CFC 0020               2653           MOVE.B  #BLANK,(A6)+   SPACE
0000917E                          2654  
0000917E  4A45                    2655           TST.W   D5
00009180  6B2C                    2656           BMI.S   MM18           NON-VERIFY (DON'T READ MEMORY)
00009182                          2657  
00009182                          2658  * READ DATA FROM MEMORY & FORMAT IT
00009182  4A05                    2659           TST.B   D5
00009184  6B0C                    2660           BMI.S   MM12           BYTE OVERRIDE
00009186                          2661  
00009186  0C06 0002               2662           CMPI.B  #2,D6
0000918A  6710                    2663           BEQ.S   MM14           WORD
0000918C  0C06 0004               2664           CMPI.B  #4,D6
00009190  6714                    2665           BEQ.S   MM16           LONG WORD
00009192                          2666  
00009192                          2667  * BYTE
00009192                          2668  MM12
00009192  1E14                    2669           MOVE.B  (A4),D7        D7 = DATA READ
00009194  2007                    2670           MOVE.L  D7,D0
00009196  6100 0452               2671           BSR     PNT2HX         FORMAT BYTE
0000919A  6012                    2672           BRA.S   MM18
0000919C                          2673  
0000919C                          2674  * WORD
0000919C                          2675  MM14
0000919C  3E14                    2676           MOVE.W  (A4),D7
0000919E  2007                    2677           MOVE.L  D7,D0
000091A0  6100 0440               2678           BSR     PNT4HX         FORMAT WORD
000091A4  6008                    2679           BRA.S   MM18
000091A6                          2680  
000091A6                          2681  * LONG WORD
000091A6                          2682  MM16
000091A6  2E14                    2683           MOVE.L  (A4),D7
000091A8  2007                    2684           MOVE.L  D7,D0
000091AA  6100 0428               2685           BSR     PNT8HX         FORMAT LONG WORD
000091AE                          2686  
000091AE  1CFC 0020               2687  MM18     MOVE.B  #BLANK,(A6)+   SPACE
000091B2  1CFC 003F               2688           MOVE.B  #'?',(A6)+
000091B6  6100 0684               2689           BSR     OUTPUT
000091BA                          2690  
000091BA                          2691  * READ USER INPUT
000091BA                          2692  *  [DATA] (CR)   NEXT
000091BA                          2693  *           ^    LAST
000091BA                          2694  *           =    SAME
000091BA                          2695  *           .    EXIT
000091BA                          2696  
000091BA  6100 06EE               2697           BSR     FIXBUF
000091BE  6100 06F2               2698           BSR     PORTIN1
000091C2  BDCD                    2699           CMP.L   A5,A6
000091C4  6700 0082               2700           BEQ     MM50           NO DATA (CR ONLY)
000091C8                          2701  
000091C8  41FA 005A               2702           LEA     MM40(PC),A0    A0 = NO PARAMETER RETURN
000091CC  6100 04D8               2703           BSR     FNEXTF         FIND NEXT FIELD
000091D0                          2704  
000091D0                          2705  * IF = ^ OR .  TAKE ACTION
000091D0  1015                    2706           MOVE.B  (A5),D0
000091D2  0C00 003D               2707           CMPI.B  #'=',D0
000091D6  6786                    2708           BEQ     MM10
000091D8  0C00 002E               2709           CMPI.B  #'.',D0
000091DC  6700 EFE6               2710           BEQ     MACSBUG
000091E0  0C00 005E               2711           CMPI.B  #'^',D0
000091E4  6768                    2712           BEQ.S   MM60
000091E6                          2713  
000091E6  6100 0512               2714           BSR     GETEXP         GET DATA
000091EA  2E00                    2715           MOVE.L  D0,D7          D7=DATA STORED
000091EC                          2716  
000091EC                          2717  * WE HAVE DATA; STORE IT
000091EC  4A05                    2718           TST.B   D5
000091EE  6B0C                    2719           BMI.S   MM22           BYTE OVERRIDE
000091F0                          2720  
000091F0  0C06 0002               2721           CMPI.B  #2,D6
000091F4  6714                    2722           BEQ.S   MM24           WORD
000091F6  0C06 0004               2723           CMPI.B  #4,D6
000091FA  671C                    2724           BEQ.S   MM26           LONG WORD
000091FC                          2725  
000091FC                          2726  * BYTE
000091FC                          2727  MM22
000091FC  1880                    2728           MOVE.B  D0,(A4)        STORE DATA
000091FE  4A45                    2729           TST.W   D5
00009200  6B22                    2730           BMI.S   MM40           NO-VERIFY
00009202  1014                    2731           MOVE.B  (A4),D0
00009204  B007                    2732           CMP.B   D7,D0
00009206  664C                    2733           BNE.S   MM90           NO MATCH
00009208  601A                    2734           BRA.S   MM40
0000920A                          2735  
0000920A                          2736  * WORD
0000920A                          2737  MM24
0000920A  3880                    2738           MOVE.W  D0,(A4)        STORE
0000920C  4A45                    2739           TST.W   D5
0000920E  6B14                    2740           BMI.S   MM40           DO NOT VERIFY
00009210  3014                    2741           MOVE.W  (A4),D0
00009212  B047                    2742           CMP.W   D7,D0
00009214  663E                    2743           BNE.S   MM90           NO MATCH
00009216  600C                    2744           BRA.S   MM40
00009218                          2745  
00009218                          2746  * LONG WORD
00009218                          2747  MM26
00009218  2880                    2748           MOVE.L  D0,(A4)
0000921A  4A45                    2749           TST.W   D5
0000921C  6B06                    2750           BMI.S   MM40           DO NOT VERIFY
0000921E  2014                    2751           MOVE.L  (A4),D0
00009220  B087                    2752           CMP.L   D7,D0
00009222  6630                    2753           BNE.S   MM90           NO MATCH
00009224                          2754  
00009224                          2755  * LOOK FOR  . = ^
00009224  1015                    2756  MM40     MOVE.B  (A5),D0
00009226  0C00 002E               2757           CMPI.B  #'.',D0
0000922A  6700 EF98               2758           BEQ     MACSBUG        DONE
0000922E  0C00 005E               2759           CMPI.B  #'^',D0
00009232  671A                    2760           BEQ.S   MM60           BACKUP ADDRESS
00009234  0C00 003D               2761           CMPI.B  #'=',D0
00009238  6700 FF24               2762           BEQ     MM10           ADDRESS STAYS THE SAME
0000923C  0C00 0020               2763           CMPI.B  #BLANK,D0
00009240  6706                    2764           BEQ.S   MM50
00009242  BDCD                    2765           CMP.L   A5,A6
00009244  6600 EE70               2766           BNE     SYNTAX         ERROR
00009248                          2767  
00009248                          2768  * ADDRESS LOW TO HIGH
00009248  D9C6                    2769  MM50     ADD.L   D6,A4
0000924A  6000 FF12               2770           BRA     MM10
0000924E                          2771  
0000924E                          2772  * ADDRESS HIGH TO LOW
0000924E  99C6                    2773  MM60     SUB.L   D6,A4
00009250  6000 FF0C               2774           BRA     MM10
00009254                          2775  
00009254  4BFA 00B6               2776  MM90     LEA     MSG017(PC),A5  'DATA DID NOT STORE'
00009258  6100 EEAC               2777  MM95     BSR     FIXDCRLF
0000925C  6000 EE4A               2778           BRA     MSG
00009260                          2779  
00009260  4BFA EE35               2780  MM905    LEA     MSGEOT(PC),A5
00009264  60F2                    2781           BRA     MM95
00009266                          2782  
00009266                          2783  
00009266                          2784  
00009266                          2785  
00009266                          2786  *-------------------------------------------------------------------------
00009266                          2787  * File MS        Memory set command                               11/02/81
00009266                          2788  
00009266                          2789  *    ***MS***   MEMORY SET
00009266                          2790  *     FORMAT: MS  ADDRESS HEX HEX,HEX,'ASCII'  ETC.
00009266                          2791  *     COMMAS OR SPACES BETWEEN FIELDS
00009266                          2792  *     FIELDS ARE SIZE ADJUSTED (STORES UP TO 4 BYTES)
00009266                          2793  *     ASCII ENCLOSED IN SINGLE QUOTES-ANY LENGTH
00009266                          2794  
00009266  41FA EE4E               2795  MSCMD    LEA     SYNTAX(PC),A0  IF NO PARAMETERS
0000926A  6100 043A               2796           BSR     FNEXTF         FIND NEXT FIELD
0000926E  6100 F83C               2797           BSR     GETA           GET ADDRESS
00009272  6100 0456               2798           BSR     CKADDR         CHECK VALID ADDRESS
00009276                          2799  
00009276  2240                    2800           MOVE.L  D0,A1          A1=START (OPEN) ADDRESS
00009278  41FA EF4A               2801  SETM1    LEA     MACSBUG(PC),A0 IF NO PARAMTER
0000927C  6100 0428               2802           BSR     FNEXTF         FIND NEXT FIELD
00009280  284D                    2803           MOVE.L  A5,A4          SAVE ADDRESS OF PARAMTER
00009282  1015                    2804           MOVE.B  (A5),D0        CHECK OUT NEXT CHARACTER
00009284  0C00 0027               2805           CMPI.B  #$27,D0        SEE IF IT IS QUOTE MARK
00009288  6730                    2806           BEQ.S   SETM5          SPECIAL ROUTINE
0000928A  0C00 004E               2807           CMPI.B  #'N',D0        SEE IF NEXT LINE FEATURE
0000928E  674E                    2808           BEQ.S   SETM7
00009290  6100 0496               2809           BSR     GETNUMA        GET THE DATA
00009294  2649                    2810           MOVE.L  A1,A3          ADDRESS
00009296  220D                    2811           MOVE.L  A5,D1          COMPUTE BYTES OF DATA
00009298  928C                    2812           SUB.L   A4,D1          LEN=END-START
0000929A  E281                    2813           ASR.L   #1,D1          BYTES=CHAR/2
0000929C  6402                    2814           BCC.S   SETM3          TAKE CARE OF ODD CHARACTER
0000929E  5281                    2815           ADDQ.L  #1,D1          WHOLE NUMBER OF BYTES
000092A0  2401                    2816  SETM3    MOVE.L  D1,D2          D1 SCANS DOWN
000092A2  5382                    2817           SUBQ.L  #1,D2          KNOCK IT DOWN TO INDEX
000092A4  1780 2000               2818           MOVE.B  D0,0(A3,D2)    INDEXED BECAUSE BACKWARD
000092A8                          2819  
000092A8  1633 2000               2820           MOVE.B  0(A3,D2),D3    REREAD TO CHECK IF STORED OK
000092AC                          2821  
000092AC  B600                    2822           CMP.B   D0,D3          ARE SAME?
000092AE  6622                    2823           BNE.S   SETME          'DATA DID NOT STORE'
000092B0                          2824  
000092B0  E080                    2825           ASR.L   #8,D0          SHIFT ONE BYTE
000092B2  5289                    2826           ADDQ.L  #1,A1          BUMP ADDRESS
000092B4  5381                    2827           SUBQ.L  #1,D1
000092B6  66E8                    2828           BNE     SETM3
000092B8  60BE                    2829           BRA.S   SETM1          GO DO NEXT DATA
000092BA                          2830  
000092BA                          2831  *  DATA IN IN ASCII STRING
000092BA  528D                    2832  SETM5    ADDQ.L  #1,A5          GET PAST QUOTE MARK
000092BC  BBCE                    2833  SETM6    CMP.L   A6,A5          SEE IF END OF BUFFER
000092BE  6C00 EF04               2834           BGE     MACSBUG
000092C2  101D                    2835           MOVE.B  (A5)+,D0       GRAB CHARACTER
000092C4  0C00 0027               2836           CMPI.B  #$27,D0        SEE IF QUOTE MARK
000092C8  67AE                    2837           BEQ.S   SETM1          IF SO-END OF STRING
000092CA  1280                    2838           MOVE.B  D0,(A1)        SAVE DATA
000092CC                          2839  
000092CC  1219                    2840           MOVE.B  (A1)+,D1       REREAD FOR CHECK
000092CE                          2841  
000092CE  B001                    2842           CMP.B   D1,D0          SEE IF SAME
000092D0  67EA                    2843           BEQ     SETM6
000092D2  4BFA 0038               2844  SETME    LEA     MSG017(PC),A5  'DATA DID NOT STORE'
000092D6  6100 EE2E               2845           BSR     FIXDCRLF
000092DA  6000 EDCC               2846           BRA     MSG
000092DE                          2847  
000092DE  6100 05CA               2848  SETM7    BSR     FIXBUF         DISPLAY CURRENT ADDRESS
000092E2  2009                    2849           MOVE.L  A1,D0
000092E4  6100 02EE               2850           BSR     PNT8HX         PUT ADDRESS IN BUFFER
000092E8  2CFC 20203F20           2851           MOVE.L  #'  ? ',(A6)+  PROMPT
000092EE  6100 054C               2852           BSR     OUTPUT         DUMP BUFFER WITH NO LF CR
000092F2  6100 05B6               2853           BSR     FIXBUF         GET READY FOR INPUT
000092F6  1AFC 0020               2854           MOVE.B  #BLANK,(A5)+   ADVANCE IN BUFFER
000092FA  2C4D                    2855           MOVE.L  A5,A6          BECAUSE OF SNAFU IN FINDNP
000092FC  6100 05B4               2856           BSR     PORTIN1        INPUT FROM CONSOLE
00009300  1025                    2857           MOVE.B  -(A5),D0       JUST BACK UP IN BUFFER
00009302  BBCE                    2858           CMP.L   A6,A5
00009304  6700 EEBE               2859           BEQ     MACSBUG
00009308  6000 FF6E               2860           BRA     SETM1          DO DECODE IT
0000930C                          2861  
0000930C= 44 41 54 41 20 44 ...   2862  MSG017   DC.B    'DATA DID NOT STORE',CR,LF,EOT
00009321= 00                      2863           DC.B    0              PAD BYTE
00009322                          2864  
00009322                          2865  
00009322                          2866  *-------------------------------------------------------------------------
00009322                          2867  * File MTSETUP   MTSETUP memory test setup                        11/02/81
00009322                          2868  
00009322                          2869  *
00009322                          2870  * SET UP PARMS FOR BLOCK TEST AND BLOCK INITIALIZE
00009322                          2871  *
00009322                          2872  
00009322                          2873  MTSETUP  DS      0
00009322  21CF 04D6               2874           MOVE.L  A7,TEMP        STACK FOR EXCEPTION RETURN
00009326  41FA ED8E               2875           LEA     SYNTAX(PC),A0  WHERE TO GO IF NO PARAMETERS
0000932A  6100 037A               2876           BSR     FNEXTF         FIND NEXT FIELD
0000932E  6100 F77C               2877           BSR     GETA           GET ADDR1
00009332  6100 0390               2878           BSR     CKWADR         CHECK WORD BOUNDRY ADDRESS
00009336  2640                    2879           MOVE.L  D0,A3          SAVE STARTING ADDRESS
00009338                          2880  
00009338  41FA ED7C               2881           LEA     SYNTAX(PC),A0  SET UP TO TRY "TO" ADDRESS
0000933C  6100 0368               2882           BSR     FNEXTF         *
00009340  6100 F76A               2883           BSR     GETA           GET ADDR2
00009344  6100 037E               2884           BSR     CKWADR
00009348  2240                    2885           MOVE.L  D0,A1          A1 = END ADDRESS?
0000934A  204B                    2886           MOVE.L  A3,A0          A0 = STARTING ADDRESS
0000934C  6100 ED76               2887           BSR     P2PHY          DISPLAY TWO ADDRESSES
00009350  B3C8                    2888           CMP.L   A0,A1
00009352  6500 ED62               2889           BCS     SYNTAX         END ADDR TOO SMALL
00009356  5489                    2890           ADDQ.L  #2,A1          ADJUST END ADDR
00009358  4E75                    2891           RTS
0000935A                          2892  
0000935A                          2893  
0000935A                          2894  *-------------------------------------------------------------------------
0000935A                          2895  * File OF        OF & PERIOD Command                              12/18/81
0000935A                          2896  
0000935A                          2897  * .*  HANDLER
0000935A                          2898  *   GET TWO CHARACTERS FOLLOWING PERIOD
0000935A                          2899  
0000935A  E149                    2900  PERCMD   LSL.W   #8,D1
0000935C  1215                    2901           MOVE.B  (A5),D1        D1 = 2ND,3RD CHARACTERS
0000935E  538D                    2902           SUBQ.L  #1,A5          A5 = POINTER TO 2ND CHAR  (1ST REAL CHARACTER)
00009360                          2903  
00009360  41FA 0030               2904           LEA     REGTBL(PC),A0
00009364  4287                    2905  PER4     CLR.L   D7
00009366  3E18                    2906           MOVE.W  (A0)+,D7       SAVE FIRST WORD FOR END OF TABLE TEST
00009368  3018                    2907           MOVE.W  (A0)+,D0       GET REAL REGISTER ID INTO D0
0000936A  0C47 FFFF               2908           CMPI.W  #$FFFF,D7      ARE WE AT THE END OF THE TABLE?
0000936E  6700 ED2E               2909           BEQ     WHAT           YES...THEN WE DIDNT FIND IT
00009372                          2910  
00009372  0C00 0040               2911           CMPI.B  #'@',D0
00009376  660E                    2912           BNE.S   PER3           NOT @
00009378                          2913  
00009378                          2914  * THIRD CHAR MUST BE NUMERIC 0 - 7
00009378  1001                    2915           MOVE.B  D1,D0          ALLEGED DIGIT
0000937A  0C00 0030               2916           CMPI.B  #'0',D0
0000937E  6BE4                    2917           BMI     PER4           NOT A DIGIT
00009380  0C00 0038               2918           CMPI.B  #'8',D0
00009384  6ADE                    2919           BPL     PER4           NOT A DIGIT
00009386                          2920  
00009386  B041                    2921  PER3     CMP.W   D1,D0
00009388  66DA                    2922           BNE     PER4           MISS-MATCH
0000938A                          2923  
0000938A                          2924  *******************************************************************
0000938A                          2925  *        AT THIS TIME WE HAVE FOUND THE ENTRY IN THE "REG TABLE"  *
0000938A                          2926  *        WE NOW NEED TO EXTRACT AND USE THE OFFSET                *
0000938A                          2927  *******************************************************************
0000938A                          2928  
0000938A  41FA EC74               2929           LEA     FIRST(PC),A0   A0 = Start of VERSAbug RO
0000938E  D1C7                    2930           ADD.L   D7,A0          Add offset
00009390  4ED0                    2931           JMP     (A0)           Now go to the calculated location
00009392                          2932  
00009392                          2933  
00009392                          2934  ***************
00009392  =00009392               2935  REGTBL   EQU  *
00009392                          2936  ***************
00009392                          2937  
00009392= 13D4                    2938           DC.W    SETA7-FIRST    Stack Register Routine
00009394= 4137                    2939           DC.W    'A7'           *
00009396                          2940  
00009396= 13C8                    2941           DC.W    SETPC-FIRST    Program Counter Routine
00009398= 5043                    2942           DC.W    'PC'           *
0000939A                          2943  
0000939A= 13CE                    2944           DC.W    SETSR-FIRST    Status Register Routine
0000939C= 5352                    2945           DC.W    'SR'           *
0000939E                          2946  
0000939E= 13E4                    2947           DC.W    SETUS-FIRST    User Stack Routine
000093A0= 5553                    2948           DC.W    'US'           *
000093A2                          2949  
000093A2= 13DE                    2950           DC.W    SETSS-FIRST    System Stack Routine
000093A4= 5353                    2951           DC.W    'SS'           *
000093A6                          2952  
000093A6= 13BC                    2953           DC.W    SETD-FIRST     Data Register Routine
000093A8= 4440                    2954           DC.W    'D@'           *
000093AA                          2955  
000093AA= 13C2                    2956           DC.W    SETA-FIRST     Address Register Routine
000093AC= 4140                    2957           DC.W    'A@'           *
000093AE                          2958  
000093AE= 149E                    2959           DC.W    PNTCLSA-FIRST  All Address Registers Routine
000093B0= 4120                    2960           DC.W    'A '           *
000093B2                          2961  
000093B2= 1494                    2962           DC.W    PNTCLSD-FIRST  All Data Registers Routine
000093B4= 4420                    2963           DC.W    'D '           *
000093B6                          2964  
000093B6= 13EA                    2965           DC.W    SETRN-FIRST    All Registers Routine
000093B8= 5240                    2966           DC.W    'R@'           *
000093BA                          2967  
000093BA= FFFF                    2968           DC.W    $FFFF          END OF TABLE
000093BC                          2969  
000093BC                          2970  *    PRINT & INPUT REGISTER ROUTINES
000093BC                          2971  
000093BC  49F8 0408               2972  SETD     LEA     REGS,A4        START OF REGISTERS
000093C0  6034                    2973           BRA.S   SETR
000093C2                          2974  
000093C2  49F8 0428               2975  SETA     LEA     REGS+32,A4     OFFSET IN REGISTER TABLE
000093C6  602E                    2976           BRA.S   SETR
000093C8                          2977  
000093C8  49F8 0400               2978  SETPC    LEA     REGPC,A4       WHERE PC IS
000093CC  6030                    2979           BRA.S   SETR0
000093CE                          2980  
000093CE  49F8 0404               2981  SETSR    LEA     REGSR,A4       WHERE SR IS
000093D2  602A                    2982           BRA.S   SETR0
000093D4                          2983  
000093D4  2238 0404               2984  SETA7    MOVE.L  REGSR,D1       GET CONDITION CODES
000093D8  0241 2000               2985           ANDI.W  #$2000,D1      CHECK SUPERVISOR BIT
000093DC  6706                    2986           BEQ.S   SETUS
000093DE  49F8 0444               2987  SETSS    LEA     REGA7,A4       WHERE SUPERVISOR STACK IS
000093E2  601A                    2988           BRA.S   SETR0
000093E4                          2989  
000093E4  49F8 0448               2990  SETUS    LEA     REGUS,A4       USER STACK
000093E8  6014                    2991           BRA.S   SETR0
000093EA                          2992  
000093EA  49F8 044C               2993  SETRN    LEA     OFFSET,A4      SET OFFSET
000093EE  0C01 0037               2994           CMPI.B  #'7',D1
000093F2  6700 ECC2               2995           BEQ     SYNTAX         NOT ALLOWED TO CHANGE A7
000093F6                          2996  
000093F6                          2997  
000093F6                          2998  *  ROUTINE TO ENTER DATA FOR A SINGLE REGISTER
000093F6                          2999  *   A5-A6 ARE COMMAND BUFFER
000093F6                          3000  *   D0 HAS REGISTER DIGIT A4 HAS CLASS OFFSET
000093F6                          3001  
000093F6  6100 03E0               3002  SETR     BSR     GETHEX         GET REG NUMBER
000093FA  E588                    3003           LSL.L   #2,D0          SHIFT LEFT...MULT BY 4
000093FC  D9C0                    3004           ADD.L   D0,A4          A4 NOW HAS EXACT ADDRESS
000093FE  548D                    3005  SETR0    ADDQ.L  #2,A5          NOW FIND PARAMETERS
00009400  103C 003A               3006           MOVE.B  #':',D0        SEE IF COLON IN COMMAND
00009404  6154                    3007           BSR.S   SCAN
00009406  671E                    3008           BEQ.S   SETR5
00009408                          3009  *SEE IF ANY PARAMER (HEX)
00009408  41FA 0016               3010           LEA     SETR4(PC),A0   WHERE TO GO IF NO PARAMETERS
0000940C  6100 0298               3011           BSR     FNEXTF         FIND NEXT FIELD
00009410                          3012  
00009410  0C00 002E               3013           CMPI.B  #'.',D0
00009414  6706                    3014           BEQ.S   SEMACS         PERIOD; GET OUT
00009416                          3015  
00009416  6100 F694               3016           BSR     GETA           GET ADDRESS VALUE
0000941A  2880                    3017           MOVE.L  D0,(A4)        SAVE NEW VALUE
0000941C  6000 EDA6               3018  SEMACS   BRA     MACSBUG
00009420                          3019  
00009420                          3020  *JUST PRINT IT
00009420                          3021  
00009420  6148                    3022  SETR4    BSR.S   PRINTR         FIX UP TO PRINT
00009422  6000 EC84               3023           BRA     MSG            GO PRINT MESSAGE-GO TO MACSBUG
00009426                          3024  
00009426  6102                    3025  SETR5    BSR.S   SETSR1
00009428  60F2                    3026           BRA     SEMACS
0000942A                          3027  
0000942A  613E                    3028  SETSR1   BSR.S   PRINTR         FIX UP TO PRINT
0000942C  1CFC 0020               3029           MOVE.B  #BLANK,(A6)+   SPACE
00009430  1CFC 003F               3030           MOVE.B  #'?',(A6)+     PROMPT
00009434  1CFC 0020               3031           MOVE.B  #BLANK,(A6)+   SPACE
00009438  6100 0402               3032           BSR     OUTPUT         PRINT IT
0000943C                          3033  
0000943C  6100 046C               3034           BSR     FIXBUF
00009440  6100 0470               3035           BSR     PORTIN1
00009444                          3036  
00009444  41FA 0012               3037           LEA     SETSR15(PC),A0 A0=DEFAULT (NO PARM) ADDRESS
00009448  6100 025C               3038           BSR     FNEXTF         FIND FIELD
0000944C                          3039  
0000944C  0C00 002E               3040           CMPI.B  #'.',D0
00009450  67CA                    3041           BEQ     SEMACS         PERIOD; GET OUT
00009452                          3042  
00009452  6100 F658               3043           BSR     GETA           CONVERT IT
00009456  2880                    3044           MOVE.L  D0,(A4)        STORE NEW DATA
00009458                          3045  
00009458                          3046  SETSR15  DS      0
00009458  4E75                    3047           RTS
0000945A                          3048  
0000945A                          3049  
0000945A                          3050  * SEE IF CHARACTER IS IN BUFFER
0000945A                          3051  
0000945A  204D                    3052  SCAN     MOVE.L  A5,A0          A0 IS WORKING SCANNER
0000945C  B1CE                    3053  SCAN2    CMP.L   A6,A0          SEE IF AT END OF BUFFER
0000945E  6208                    3054           BHI.S   RETURN5
00009460  B010                    3055           CMP.B   (A0),D0        LOOK AT CHARACTER
00009462  6704                    3056           BEQ.S   RETURN5
00009464  5288                    3057           ADDQ.L  #1,A0          GET PAST CHARACTER
00009466  60F4                    3058           BRA.S   SCAN2
00009468  4E75                    3059  RETURN5  RTS
0000946A                          3060  
0000946A                          3061  * ROUTINE TO SET UP TO PRINT REG
0000946A                          3062  
0000946A  6100 043E               3063  PRINTR   BSR     FIXBUF
0000946E                          3064  
0000946E  568E                    3065           ADDQ.L  #3,A6          GET PAST REG NAME (.XX)
00009470  1CFC 003D               3066           MOVE.B  #'=',(A6)+     PUT IN EQUAL SIGN
00009474  2014                    3067           MOVE.L  (A4),D0        GET VALUE
00009476  B9FC 00000404           3068           CMPA.L  #REGSR,A4      SEE IF THIS IS CONDITION CODES
0000947C  6606                    3069           BNE.S   PRINTR2
0000947E  6100 0162               3070           BSR     PNT4HX         JUST PRINT WORD
00009482  4E75                    3071           RTS
00009484                          3072  
00009484  6100 014E               3073  PRINTR2  BSR     PNT8HX         PRINT THE VALUE
00009488  4E75                    3074           RTS
0000948A                          3075  
0000948A                          3076  *
0000948A                          3077  *   PRINT ALL REGISTERS IN A CLASS (A OR D OR R)
0000948A                          3078  *
0000948A                          3079  
0000948A                          3080  OFCMD    DS      0              "OF" Command -Display Offset registers-
0000948A  1E3C 0052               3081  SETO     MOVE.B  #'R',D7
0000948E  47F8 044C               3082           LEA     OFFSET,A3
00009492  6012                    3083           BRA.S   PNTCLSB
00009494                          3084  
00009494  1E3C 0044               3085  PNTCLSD  MOVE.B  #'D',D7        CLASS=DATA
00009498  47F8 0408               3086           LEA     REGS,A3        OFFSET
0000949C  6008                    3087           BRA.S   PNTCLSB
0000949E                          3088  
0000949E  1E3C 0041               3089  PNTCLSA  MOVE.B  #'A',D7        CLASS=ADDRESS
000094A2  47F8 0428               3090           LEA     REGS+32,A3     OFFSET
000094A6  6104                    3091  PNTCLSB  BSR.S   PNTCLS
000094A8  6000 ED1A               3092           BRA     MACSBUG
000094AC                          3093  
000094AC  6100 03FC               3094  PNTCLS   BSR     FIXBUF
000094B0  4286                    3095           CLR.L   D6             REGISTER COUNTER
000094B2  611C                    3096  PNTCLS1  BSR.S   PNTREG         PRINT THE REGISTER
000094B4  0C06 0004               3097           CMPI.B  #4,D6          DISPLAY AFTER 3&7
000094B8  660A                    3098           BNE.S   PNTCLS2
000094BA  6100 0366               3099           BSR     OUT1CR
000094BE  6100 03EA               3100           BSR     FIXBUF
000094C2  60EE                    3101           BRA     PNTCLS1        DO SOME MORE
000094C4                          3102  
000094C4  0C06 0008               3103  PNTCLS2  CMPI.B  #8,D6          AT END?
000094C8  66E8                    3104           BNE     PNTCLS1
000094CA  6100 0356               3105           BSR     OUT1CR         PRINT IT
000094CE  4E75                    3106           RTS
000094D0                          3107  
000094D0                          3108  *  SUBROUTINE TO PRINT REGISTER  X#=01234567.
000094D0                          3109  
000094D0  1CC7                    3110  PNTREG   MOVE.B  D7,(A6)+       CLASS
000094D2  1006                    3111           MOVE.B  D6,D0          REG#
000094D4  6100 011C               3112           BSR     PUTHEX
000094D8  1CFC 003D               3113           MOVE.B  #'=',(A6)+     EQUAL SIGN
000094DC  2006                    3114           MOVE.L  D6,D0          COMPUTE ADDRESS OF REG
000094DE  E588                    3115           LSL.L   #2,D0          MULT BY FOUR
000094E0  D08B                    3116           ADD.L   A3,D0          ADD IN OFFSET
000094E2  2840                    3117           MOVE.L  D0,A4          SET UP TO GET DEFFERED
000094E4  B9FC 00000444           3118           CMPA.L  #REGA7,A4      SEE IF REG A7
000094EA  660E                    3119           BNE.S   PNTREG1
000094EC  2038 0404               3120           MOVE.L  REGSR,D0       GET STATUS REGISTER
000094F0  0240 2000               3121           ANDI.W  #$2000,D0      CHECK SUPERVISOR BIT
000094F4  6604                    3122           BNE.S   PNTREG1
000094F6  49F8 0448               3123           LEA     REGUS,A4       TAKE ADDRESS OF USER STACK
000094FA  2014                    3124  PNTREG1  MOVE.L  (A4),D0        GET REG CONTENT
000094FC  6100 00D6               3125           BSR     PNT8HX         PUT IN BUFFER
00009500  1CFC 0020               3126           MOVE.B  #BLANK,(A6)+   SPACE
00009504  5286                    3127           ADDQ.L  #1,D6          BUMP REG#
00009506  4E75                    3128           RTS
00009508                          3129  
00009508                          3130  
00009508                          3131  
00009508                          3132  *-------------------------------------------------------------------------
00009508                          3133  * File RAMTEST   RAMTEST                                          11/02/81
00009508                          3134  
00009508                          3135  ***********************************************************************
00009508                          3136  * MEMORY TEST SUBROUTINE.                                             *
00009508                          3137  *                                                                     *
00009508                          3138  *        A0=BEGINNING ADDRESS (MUST BE EVEN ADDRESS)                  *
00009508                          3139  *        A1=ENDING ADDRESS+1  (MUST BE EVEN ADDRESS)                  *
00009508                          3140  *        A2=FAILING ADDRESS                                           *
00009508                          3141  *        D0=DATA WRITTEN TO RAM                                       *
00009508                          3142  *        D1=DATA READ FROM RAM                                        *
00009508                          3143  *                                                                     *
00009508                          3144  *        ZERO FLAG IS SET IF TEST IS SUCCESSFUL                       *
00009508                          3145  *           REGISTERS D2,D3,D4 DESTROYED                              *
00009508                          3146  ***********************************************************************
00009508                          3147  
00009508                          3148  *       -1ST TEST-
00009508                          3149  RAMTEST  DS      0
00009508  2608                    3150           MOVE.L  A0,D3          D3 = BEGINNING ADDRESS
0000950A  2443                    3151           MOVE.L  D3,A2          USE A2 AS POINTER IN MEMORY
0000950C  70FE                    3152  WALK3    MOVEQ   #$FE,D0        PREPARE FOR "WALKING BIT" TEST
0000950E                          3153  WALK0
0000950E  3480                    3154           MOVE.W  D0,(A2)        STORE D0 INTO MEMORY
00009510  3212                    3155           MOVE.W  (A2),D1        D1 CONTAINS RAM DATA
00009512  B240                    3156           CMP.W   D0,D1          WRITTEN VS. READ
00009514  6642                    3157           BNE.S   RAMERR         STOP ON ERROR
00009516  E358                    3158           ROL.W   #1,D0          ROLL A ZERO IN A FIELD OF ONES
00009518  65F4                    3159           BCS.S   WALK0          CONTINUE TILL DONE
0000951A                          3160  
0000951A  7001                    3161           MOVEQ   #$00000001,D0  THIS TIME, WALK A 1 THROUGH ZEROS
0000951C                          3162  WALK1
0000951C  3480                    3163           MOVE.W  D0,(A2)        STORE D0 INTO MEMORY
0000951E  3212                    3164           MOVE.W  (A2),D1        D1 CONTAINS RAM DATA
00009520  B240                    3165           CMP.W   D0,D1          WRITTEN VS. READ
00009522  6634                    3166           BNE.S   RAMERR         STOP ON ERROR
00009524  E340                    3167           ASL.W   #1,D0          ROLL A ONE TO THE NEXT POSITION
00009526  64F4                    3168           BCC.S   WALK1          CONTINUE TILL DONE
00009528                          3169  
00009528  45EA 0100               3170           LEA     $0100(A2),A2   GO TO NEXT 256TH POSITION
0000952C  B5C9                    3171           CMP.L   A1,A2          CHECK TO SEE IF DONE
0000952E  6DDC                    3172           BLT.S   WALK3          CONTINUE
00009530                          3173  
00009530                          3174  * -2ND TEST-
00009530  2443                    3175           MOVE.L  D3,A2          SET A2 TO POINT TO START OF MEMORY
00009532  7000                    3176           MOVEQ   #$00000000,D0  CLEAR D0
00009534                          3177  MTCLR
00009534  34C0                    3178           MOVE.W  D0,(A2)+       CLEAR MEMORY
00009536  B5C9                    3179           CMP.L   A1,A2          DONE?
00009538  66FA                    3180           BNE.S   MTCLR          NO... ZERO ALL OF MEMORY
0000953A                          3181  
0000953A  74FF                    3182           MOVEQ   #$FF,D2        SET D2 = FFFF
0000953C                          3183  MTSTOR1
0000953C  3222                    3184           MOVE.W  -(A2),D1       FIRST READ BACK MEMORY
0000953E  B240                    3185           CMP.W   D0,D1          CHK AGAINST WHAT WAS WRITTEN
00009540  6616                    3186           BNE.S   RAMERR         STOP ON ERROR
00009542  3482                    3187           MOVE.W  D2,(A2)        STORE COMPLEMENT
00009544  B5C3                    3188           CMP.L   D3,A2          DONE?
00009546  66F4                    3189           BNE.S   MTSTOR1        NO... COMPLEMENT ALL OF MEMORY
00009548  3002                    3190           MOVE.W  D2,D0          D0=WHAT WAS WRITTEN
0000954A  4642                    3191           NOT.W   D2             SAVE COMPLEMENT FOR LATER
0000954C                          3192  
0000954C                          3193  MTSTOR0
0000954C  3212                    3194           MOVE.W  (A2),D1        READ BACK MEMORY
0000954E  B240                    3195           CMP.W   D0,D1          CHK AGAINST WHAT WAS WRITTEN
00009550  6606                    3196           BNE.S   RAMERR         STOP ON ERROR
00009552  34C2                    3197           MOVE.W  D2,(A2)+       STORE COMPLEMENT
00009554  B5C9                    3198           CMP.L   A1,A2          DONE?
00009556  66F4                    3199           BNE     MTSTOR0        NO...KEEP LOOPING, YES...
00009558                          3200  
00009558  2043                    3201  RAMERR   MOVE.L  D3,A0          RESTORE A0
0000955A  4E75                    3202           RTS                    RETURN
0000955C                          3203  
0000955C                          3204  
0000955C                          3205  
0000955C                          3206  
0000955C                          3207  *-------------------------------------------------------------------------
0000955C                          3208  * File TM        TM  Transparent mode                             12/28/81
0000955C                          3209  
0000955C                          3210  *    TM  [[EXIT CHAR]TRAILING CHAR]
0000955C                          3211  *
0000955C                          3212  *  In transparent mode the terminal is physically connected to the
0000955C                          3213  *  host; at the same time the terminal is watched by TM software
0000955C                          3214  *  for the EXIT character.  When the exit character is transmitted
0000955C                          3215  *  by the terminal it goes directly to the host; and at the same
0000955C                          3216  *  time the TM software reconfigures the hardware.  If a nonnull
0000955C                          3217  *  trailing character is present it is now sent via port 2 to
0000955C                          3218  *  the host.
0000955C                          3219  
0000955C                          3220  *   TRANSPARENT MODE
0000955C                          3221  
0000955C                          3222  *TMCMD    LEA     P2CMD0(PC),A0
0000955C                          3223  *         BSR     FNEXTF         FIND NEXT FIELD
0000955C                          3224  *         MOVE.B  (A5)+,TMCHARS+1 QUIT CHARACTER
0000955C                          3225  *         BSR     FNEXTF         FIND NEXT FIELD
0000955C                          3226  *         MOVE.B  (A5)+,TMCHARS  OPTIONAL TRAILING CHAR
0000955C                          3227  *P2CMD0   MOVE.W  TMCHARS,D7
0000955C                          3228  *         BSR     GETSER1        ADDRESS FOR PORT1 INTO A0
0000955C                          3229  *         LEA     MSG006(PC),A5  "TRANSPARENT MODE"
0000955C                          3230  *         BSR     FIXDCRLF       SET UP FOR MESSAGE
0000955C                          3231  *         MOVE.L  D7,D0          EXIT CHARACTER
0000955C                          3232  *         BSR     PNT2HX         PRINT 2 HEX CHARACTERS
0000955C                          3233  *         MOVE.W  #' =',(A6)+
0000955C                          3234  *         MOVE.B  D7,D0          SEE IF CONTROL CHAR
0000955C                          3235  *         CMPI.B  #BLANK,D0
0000955C                          3236  *         BPL.S   P2CMD01
0000955C                          3237  *         MOVE.L  #' CTL',(A6)+
0000955C                          3238  *         ADDI.B  #64,D0         MAKE IT A PRINTABLE CHARACTER
0000955C                          3239  *P2CMD01  MOVE.B  #BLANK,(A6)+
0000955C                          3240  *         MOVE.B  D0,(A6)+
0000955C                          3241  *         MOVE.W  #$0D0A,(A6)+
0000955C                          3242  *         BSR     OUT1CR         GO PRINT BUFFER WITH CRLF
0000955C                          3243  *
0000955C                          3244  *         MOVE.B  MD1CON.L,D0    PROGRAM ACIA FOR TRANSPARENT MODE
0000955C                          3245  *         ANDI.B  #$9F,D0
0000955C                          3246  *         ORI.B   #$40,D0        FORCE RTS HIGH
0000955C                          3247  *         MOVE.B  D0,(A0)
0000955C                          3248  *P2CMD2   BTST.B  #$0,(A0)      READ STATUS
0000955C                          3249  *         BEQ.S   P2CMD2
0000955C                          3250  *         MOVE.B  2(A0),D0       RECEIVE CHAR FROM PORT 1
0000955C                          3251  *         ANDI.B  #$7F,D0
0000955C                          3252  *         CMP.B   D7,D0          SEE IF QUIT CHARACTER (CTL A USUALLY)
0000955C                          3253  *         BNE.S   P2CMD2
0000955C                          3254  *         MOVE.B  MD1CON.L,D0    REPROGRAM FOR NON-TRANSPARENT
0000955C                          3255  *         ANDI.B  #$9F,D0
0000955C                          3256  *         MOVE.B  D0,(A0)
0000955C                          3257  *
0000955C                          3258  *         ASR.W   #8,D7
0000955C                          3259  *         TST.B   D7
0000955C                          3260  *         BEQ.S   P2CMD6
0000955C                          3261  ** SPECIAL SECOND CHAR TO HOST SEQUENCE
0000955C                          3262  *         MOVE.L  #DELAYC1,D0
0000955C                          3263  *P2CMD4   SUBQ.L  #1,D0          DELAY; ALLOW HOST TO SYNC
0000955C                          3264  *         BNE.S   P2CMD4
0000955C                          3265  *         BSR     GETSER2
0000955C                          3266  *         MOVE.B  D7,2(A0)       SEND CHAR
0000955C                          3267  *P2CMD6   BRA     MACSBUG
0000955C                          3268  *
0000955C                          3269  *MSG006   DC.B    '*TRANSPARENT* EXIT=$',EOT
0000955C                          3270  *         DC.B    0              PAD BYTE
0000955C                          3271  
0000955C                          3272  
0000955C                          3273  *-------------------------------------------------------------------------
0000955C                          3274  * File W         Software Abort, Hex print routines               06/05/82
0000955C                          3275  
0000955C                          3276  *
0000955C                          3277  *   HANDLE THE ABORT BUTTON
0000955C                          3278  *
0000955C  46FC 2700               3279  ABORTB   MOVE.W  #$2700,SR
00009560                          3280m          SAVEREGS
00009570  4BFA 0012               3281           LEA     MSG012(PC),A5  'SOFTWARE ABORT'
00009574                          3282  
00009574  6100 EB90               3283           BSR     FIXDCRLF       MOVE MESSAGE TO BUFFER
00009578  6100 02C2               3284  EVECT4   BSR     OUTPUT         MSG TO PORT1
0000957C  6100 F2F8               3285  ABORT335 BSR     TDISPLY        DISPLAY REGISTERS
00009580  6000 EC42               3286           BRA     MACSBUG
00009584                          3287  
00009584= 0A 0A 53 4F 46 54 ...   3288  MSG012   DC.B    LF,LF,'SOFTWARE ABORT',CR,LF,EOT
00009597= 00                      3289           DC.B    0              PAD BYTE
00009598                          3290  
00009598  21FC 3F3F3F3F 0030      3291  ABORTE MOVE.L    #'????',$30    UNKNOWN INTERRUPT
000095A0                          3292  
000095A0                          3293  
000095A0                          3294  *    SAVE REGISTERS AND PRINT VECTOR MSG
000095A0                          3295  *
000095A0                          3296m EVECTL   SAVEREGS
000095B0  6100 02F8               3297  EVECT2   BSR     FIXBUF         PRINT MESSAGE "XXXX TRAP ERROR"
000095B4  3CFC 0D0A               3298           MOVE.W  #$0D0A,(A6)+
000095B8  2CF8 0030               3299           MOVE.L  AV12,(A6)+     TYPE OF ERROR
000095BC  4BFA 0008               3300           LEA     MSG010(PC),A5  'TRAP ERROR'
000095C0  6100 EB34               3301           BSR     FIXDADD
000095C4  60B2                    3302           BRA     EVECT4
000095C6                          3303  
000095C6= 20 54 52 41 50 20 ...   3304  MSG010   DC.B    ' TRAP ERROR',CR,LF,EOT
000095D4                          3305  
000095D4                          3306  
000095D4                          3307  
000095D4                          3308  
000095D4                          3309  *
000095D4                          3310  *  PRINT HEX ROUTINES
000095D4                          3311  *
000095D4                          3312  *
000095D4                          3313  * PRINT 8 HEX CHARACTERS
000095D4                          3314  *
000095D4                          3315  *  D0,D1,D2 DESTROYED
000095D4                          3316  *
000095D4  4840                    3317  PNT8HX   SWAP    D0             FLIP REG HALVES
000095D6  610A                    3318           BSR.S   PNT4HX         DO TOP WORD
000095D8  4840                    3319           SWAP    D0             NOW DO LOWER WORD
000095DA  6006                    3320           BRA.S   PNT4HX
000095DC                          3321  * PRINT 6 HEX CHARACTERS
000095DC  4840                    3322  PNT6HX   SWAP    D0             FLIP REGISTER HALVES
000095DE  610A                    3323           BSR.S   PNT2HX
000095E0  4840                    3324           SWAP    D0             FLIP BACK REG HALVES
000095E2                          3325  * PRINT 4 HEX CHARACTERS IN D0.W
000095E2  3200                    3326  PNT4HX   MOVE.W  D0,D1          SAVE IN TEMP
000095E4  E058                    3327           ROR.W   #8,D0          GET BITS 15-8 INTO LOWER BYTE
000095E6  6102                    3328           BSR.S   PNT2HX         PRINT IT
000095E8  3001                    3329           MOVE.W  D1,D0          PULL IT BACK
000095EA                          3330  * PRINT 2 HEX CHARACTERS IN D0.B
000095EA  3400                    3331  PNT2HX   MOVE.W  D0,D2          SAVE IN TEMP REG
000095EC  E850                    3332           ROXR.W  #4,D0          FORM UPPER NIBBLE
000095EE  6102                    3333           BSR.S   PUTHEX         PUT ASCII INTO PRINT BUFFER
000095F0  3002                    3334           MOVE.W  D2,D0          GET BACK FROM TEMP
000095F2                          3335  * CONVERT D0.NIBBLE TO HEX & PUT IT IN PRINT BUFFER
000095F2                          3336  *
000095F2  0200 000F               3337  PUTHEX   ANDI.B  #$0F,D0        SAVE LOWER NIBBLE
000095F6  0000 0030               3338           ORI.B   #$30,D0        CONVERT TO ASCII
000095FA  0C00 0039               3339           CMPI.B  #$39,D0        SEE IF IT IS>9
000095FE  6F02                    3340           BLE.S   SAVHEX
00009600  5E40                    3341           ADD     #7,D0          ADD TO MAKE 10=>A
00009602  1CC0                    3342  SAVHEX   MOVE.B  D0,(A6)+       PUT IT IN PRINT BUFFER
00009604  4E75                    3343           RTS
00009606                          3344  
00009606                          3345  * FORMAT RELATIVE ADDRESS  AAAAAA+Rn
00009606                          3346  *        ENTER     D0 = VALUE
00009606                          3347  *                  A6 = STORE POINTER
00009606                          3348  *
00009606  48E7 4780               3349  FRELADDR MOVEM.L D1/D5-D7/A0,-(A7)
0000960A  41F8 044C               3350           LEA     OFFSET,A0
0000960E  7EFF                    3351           MOVEQ   #-1,D7         D7 = DIFF. BEST FIT
00009610  4286                    3352           CLR.L   D6             D6 = OFFSET POSITION
00009612                          3353  
00009612  2200                    3354  FREL10   MOVE.L  D0,D1
00009614  4A90                    3355           TST.L   (A0)
00009616  670C                    3356           BEQ.S   FREL15         ZERO OFFSET
00009618  9290                    3357           SUB.L   (A0),D1        D1 = DIFF.
0000961A  6B08                    3358           BMI.S   FREL15         NO FIT
0000961C                          3359  
0000961C  B287                    3360           CMP.L   D7,D1
0000961E  6404                    3361           BCC.S   FREL15         OLD FIT BETTER
00009620                          3362  
00009620  2E01                    3363           MOVE.L  D1,D7          D7 = NEW BEST FIT
00009622  2A06                    3364           MOVE.L  D6,D5          D5 = POSITION
00009624                          3365  
00009624  5888                    3366  FREL15   ADDQ.L  #4,A0
00009626  5286                    3367           ADDQ.L  #1,D6
00009628  0C46 0008               3368           CMPI.W  #8,D6
0000962C  66E4                    3369           BNE     FREL10         MORE OFFSETS TO CHECK
0000962E                          3370  
0000962E  4A87                    3371           TST.L   D7
00009630  6B1C                    3372           BMI.S   FREL25         NO FIT
00009632  4A46                    3373           TST     D6
00009634  6606                    3374           BNE.S   FREL20
00009636  4AB8 044C               3375           TST.L   OFFSET
0000963A  6712                    3376           BEQ.S   FREL25         R0 = 000000; NO FIT
0000963C                          3377  
0000963C  2007                    3378  FREL20   MOVE.L  D7,D0
0000963E  619C                    3379           BSR     PNT6HX         FORMAT OFFSET
00009640  1CFC 002B               3380           MOVE.B  #'+',(A6)+     +
00009644  1CFC 0052               3381           MOVE.B  #'R',(A6)+     R
00009648  0605 0030               3382           ADDI.B  #'0',D5        MAKE ASCII
0000964C  600A                    3383           BRA.S   FREL30
0000964E                          3384  
0000964E  618C                    3385  FREL25   BSR     PNT6HX         FORMAT ADDRESS AS IS
00009650  1A3C 0020               3386           MOVE.B  #BLANK,D5
00009654  1CC5                    3387           MOVE.B  D5,(A6)+       THREE SPACES FOR ALIGNMENT
00009656  1CC5                    3388           MOVE.B  D5,(A6)+
00009658  1CC5                    3389  FREL30   MOVE.B  D5,(A6)+
0000965A                          3390  
0000965A  4CDF 01E2               3391           MOVEM.L (A7)+,D1/D5-D7/A0
0000965E  4E75                    3392           RTS
00009660                          3393  
00009660                          3394  *
00009660                          3395  *
00009660                          3396  *   PRINT HEX (ZERO SURPRESS)
00009660                          3397  *
00009660  4284                    3398  PNTZHX   CLR.L   D4             IS ZERO WHEN SURPRESSING
00009662  2200                    3399           MOVE.L  D0,D1          SAVE IN TEMP
00009664  6738                    3400           BEQ.S   PNTZ81         IF ZERO
00009666  6A08                    3401           BPL.S   PNTZ0
00009668  4481                    3402           NEG.L   D1             CHANGE TO POSITIVE VALUE
0000966A  6B32                    3403           BMI.S   PNTZ81         WATCH OUT SPECIAL CASE $80000000
0000966C  1CFC 002D               3404           MOVE.B  #'-',(A6)+     PUT SIGN INTO BUFFER
00009670  7408                    3405  PNTZ0    MOVEQ   #8,D2          8 POSSIBLE CHARACTERS
00009672  2001                    3406  PNTZ1    MOVE.L  D1,D0          UNSAVE IT
00009674  2602                    3407           MOVE.L  D2,D3          COUNT DOWN FROM HERE
00009676  5383                    3408           SUBQ.L  #1,D3          BACK OFF ONE
00009678  670C                    3409           BEQ.S   PNTZ4          IF NO ROTATE SKIP THIS
0000967A  E880                    3410  PNTZ2    ASR.L   #4,D0          ROTATE LRIGHT
0000967C  0280 0FFFFFFF           3411           ANDI.L  #$FFFFFFF,D0   CLEAR TOP NIBBLE
00009682  5383                    3412           SUBQ.L  #1,D3
00009684  66F4                    3413           BNE     PNTZ2
00009686  0200 000F               3414  PNTZ4    ANDI.B  #$F,D0         SAVE ONLY NIBBLE
0000968A  6604                    3415           BNE.S   PNTZ3
0000968C  4A04                    3416           TST.B   D4             SEE IF STILL SURPRESSING
0000968E  6706                    3417           BEQ.S   PNTZ8
00009690  6100 FF60               3418  PNTZ3    BSR     PUTHEX         PUT A HEX CHAR IN BUFFER
00009694  1800                    3419           MOVE.B  D0,D4          MARK AS NON-SURPRESSING MODE
00009696  5382                    3420  PNTZ8    SUBQ.L  #1,D2          DO ANOTHER CHAR
00009698  66D8                    3421           BNE     PNTZ1
0000969A  4A04                    3422           TST.B   D4             SEE IF ANYTHING PRINTED
0000969C  6604                    3423           BNE.S   PNTZ9
0000969E  1CFC 0030               3424  PNTZ81   MOVE.B  #'0',(A6)+     MOVE AT LEAST ONE ZERO
000096A2  4E75                    3425  PNTZ9    RTS
000096A4                          3426  
000096A4                          3427  * FIND NEXT FIELD... (A5) POINTS TO FIELD, (A0) NULL FIELD RETURN
000096A4                          3428  *   *-*-WARNING-*-* IF (A0) RETURN IS USED;  RETURN MUST BE AT
000096A4                          3429  *                   SAME SUBROUTINE LEVEL OR STACK GETS SCREWED UP
000096A4                          3430  *
000096A4                          3431  *  SKIP LEADING SPACES
000096A4                          3432  *  TERMINATE NULL FIELD ON COMA ,SEMICOLEN OR A5=A6
000096A4                          3433  
000096A4  528D                    3434  FNEXTF1  ADDQ.L  #1,A5
000096A6                          3435  
000096A6  1015                    3436  FNEXTF   MOVE.B  (A5),D0        ENTRY POINT
000096A8  BBCE                    3437           CMP.L   A6,A5
000096AA  6414                    3438           BCC.S   FNEXTF7        AT END OF BUFFER
000096AC  0C00 0020               3439           CMPI.B  #BLANK,D0
000096B0  67F2                    3440           BEQ     FNEXTF1        SPACE
000096B2                          3441  
000096B2  0C00 002C               3442           CMPI.B  #',',D0
000096B6  6708                    3443           BEQ.S   FNEXTF7        COMMA - NULL FIELD
000096B8  0C00 003B               3444           CMPI.B  #';',D0
000096BC  6702                    3445           BEQ.S   FNEXTF7        SEMICOLON - NULL FIELD
000096BE  4E75                    3446           RTS                    NORMAL FOUND FIELD RETURN
000096C0                          3447  
000096C0  588F                    3448  FNEXTF7  ADDQ.L  #4,A7          TRIM STACK
000096C2  4ED0                    3449           JMP     (A0)           NULL FIELD RETURN
000096C4                          3450  
000096C4                          3451  **************************************************************
000096C4                          3452  * THIS ROUTINE MAKES SURE YOU ARE ON THE CORRECT BOUNDRY.    *
000096C4                          3453  *  D0 = ARGUMENT...   CHECKS ADDRESS AND WORD ALIGNMENTS.   *
000096C4                          3454  **************************************************************
000096C4                          3455  
000096C4  E298                    3456  CKWADR   ROR.L   #1,D0
000096C6  E398                    3457           ROL.L   #1,D0
000096C8  6508                    3458           BCS.S   CKADR39        NOT WORD ALIGNED
000096CA                          3459  
000096CA  0C80 01000000           3460  CKADDR   CMPI.L  #$1000000,D0   VALID ADDRESS?
000096D0  6514                    3461           BCS.S   CKADR99        GOOD ADDRESS
000096D2                          3462  
000096D2  4BFA 0014               3463  CKADR39  LEA     MSG018(PC),A5
000096D6  6100 EA1A               3464           BSR     FIXDATA
000096DA  6100 FEF8               3465           BSR     PNT8HX
000096DE  6100 0142               3466           BSR     OUT1CR
000096E2  6000 EAE0               3467           BRA     MACSBUG
000096E6                          3468  
000096E6  4E75                    3469  CKADR99  RTS
000096E8                          3470  
000096E8= 49 4E 56 41 4C 49 ...   3471  MSG018   DC.B    'INVALID ADDRESS=',EOT
000096F9= 00                      3472           DC.B    0              PAD BYTE
000096FA                          3473  
000096FA                          3474  
000096FA                          3475  * EVALUATE EXPRESSION
000096FA                          3476  *  NUMBER PLUS OR MINUS NUMBER....
000096FA                          3477  *
000096FA  2F07                    3478  GETEXP   MOVE.L  D7,-(A7)       SAVE D7
000096FC  4287                    3479           CLR.L   D7
000096FE  6128                    3480  GETEXP21 BSR.S   GETNUMA        GET NUMBER
00009700  DE80                    3481           ADD.L   D0,D7          D7 = NUMBER BEING BUILT
00009702  121D                    3482  GETEXP15 MOVE.B  (A5)+,D1       D1 = TERMINATING CHAR
00009704  4280                    3483           CLR.L   D0             D0 = NEXT NUMBER (=0 1ST TIME)
00009706  0C01 002B               3484           CMPI.B  #'+',D1
0000970A  67F2                    3485           BEQ     GETEXP21       PLUS
0000970C  0C01 002D               3486           CMPI.B  #'-',D1
00009710  6606                    3487           BNE.S   GETEXP39       NOT MINUS
00009712  6114                    3488           BSR.S   GETNUMA        GET NEXT NUMBER
00009714  9E80                    3489           SUB.L   D0,D7
00009716  60EA                    3490           BRA     GETEXP15
00009718                          3491  
00009718  2007                    3492  GETEXP39 MOVE.L  D7,D0          D0 = VALUE BUILT
0000971A  538D                    3493           SUBQ.L  #1,A5          A5 = CHAR AFTER EXPRESSION
0000971C  2E1F                    3494           MOVE.L  (A7)+,D7       RESTORE D7
0000971E  4E75                    3495           RTS
00009720                          3496  
00009720                          3497  *   ROUTINES TO CONVERT STRING TO BINARY VALUE
00009720                          3498  *
00009720                          3499  *        ACCEPTS PREFIXES:
00009720                          3500  *         % binary
00009720                          3501  *         @ octal
00009720                          3502  *         & decimal
00009720                          3503  *         $ hex
00009720                          3504  *
00009720  610A                    3505  GETNUMD  BSR.S   GETDECNU       GET DECIMAL NUMBER
00009722  6600 E98C               3506  GETNUMD9 BNE     ERROR
00009726  4E75                    3507           RTS
00009728                          3508  
00009728  610A                    3509  GETNUMA  BSR.S   GETHEXNU       GET HEX NUMBER
0000972A  60F6                    3510           BRA     GETNUMD9
0000972C                          3511  
0000972C  48E7 7C80               3512  GETDECNU MOVEM.L D1-D5/A0,-(A7) DECODE AS A DECIMAL NUMBER
00009730  760A                    3513           MOVEQ   #10,D3         D3 = BASE (DECIMAL)
00009732  6006                    3514           BRA.S   GETN20
00009734                          3515  
00009734  48E7 7C80               3516  GETHEXNU MOVEM.L D1-D5/A0,-(A7) DECODE AS A HEX NUMBER
00009738  7610                    3517           MOVEQ   #16,D3         D3 = BASE
0000973A                          3518  
0000973A  4244                    3519  GETN20   CLR.W   D4             D4 = FLAG FOR CHARACTER HIT
0000973C  4281                    3520           CLR.L   D1             D1 = TEMP RESULTS
0000973E  0C15 0020               3521           CMPI.B  #BLANK,(A5)
00009742  6778                    3522           BEQ.S   GETN80         FIRST CHAR SPACE; ERROR
00009744                          3523  
00009744  BBCE                    3524  GETN30   CMP.L   A6,A5          SEE IF AT END OF BUFFER
00009746  677A                    3525           BEQ.S   GETN90
00009748  4280                    3526           CLR.L   D0
0000974A  101D                    3527           MOVE.B  (A5)+,D0       D0 = CHARACTER
0000974C                          3528  
0000974C  41FA 007E               3529           LEA     GETNDATA(PC),A0 POINTER TO TERMINATE CHARS
00009750  1A18                    3530  GETN40   MOVE.B  (A0)+,D5       D5 = TERMINATION CHAR
00009752  6706                    3531           BEQ.S   GETN50         NOT TERM.CHAR
00009754  B005                    3532           CMP.B   D5,D0
00009756  6768                    3533           BEQ.S   GETN85         FOUND TERMINATION CHAR; EXIT
00009758  60F6                    3534           BRA     GETN40
0000975A                          3535  
0000975A  0C00 0025               3536  GETN50   CMPI.B  #'%',D0        SEE IF FLAGGED AS BINARY
0000975E  660A                    3537           BNE.S   GETN60
00009760  7602                    3538           MOVEQ   #2,D3          BASE IS BINARY
00009762  4A44                    3539  GETN55   TST.W   D4             ANYTHING ENTERED
00009764  6656                    3540           BNE.S   GETN80         CONFLICT
00009766                          3541  
00009766  78FF                    3542  GETN57   MOVEQ   #-1,D4         SET DATA ENTERED FLAG
00009768  60DA                    3543           BRA     GETN30
0000976A                          3544  
0000976A  0C00 0040               3545  GETN60   CMPI.B  #'@',D0        SEE IF FLAGGED AS OCTAL
0000976E  6604                    3546           BNE.S   GETN65
00009770  7608                    3547           MOVEQ   #8,D3          BASE IS OCTAL
00009772  60EE                    3548           BRA     GETN55
00009774                          3549  
00009774  0C00 0026               3550  GETN65   CMPI.B  #'&',D0        SEE IF FLAGGED AS DECIMAL
00009778  6604                    3551           BNE.S   GETN70
0000977A  760A                    3552           MOVEQ   #10,D3         BASE IS DECIMAL
0000977C  60E4                    3553           BRA     GETN55
0000977E                          3554  
0000977E  0C00 0024               3555  GETN70   CMPI.B  #'$',D0        SEE IF FLAGGED AS HEX
00009782  6604                    3556           BNE.S   GETN75
00009784  7610                    3557           MOVEQ   #16,D3         BASE IS 16
00009786  60DA                    3558           BRA     GETN55
00009788                          3559  
00009788  0400 0030               3560  GETN75   SUBI.B  #$30,D0
0000978C  6D2E                    3561           BLT.S   GETN80         LESS THAN ZERO
0000978E  0C00 0009               3562           CMPI.B  #9,D0
00009792  6F0E                    3563           BLE.S   GETN77         VALUE 0 - 9
00009794  0C00 0011               3564           CMPI.B  #$11,D0
00009798  6D22                    3565           BLT.S   GETN80         LESS THAN A
0000979A  0C00 0016               3566           CMPI.B  #$16,D0
0000979E  6E1C                    3567           BGT.S   GETN80         GREATER THAN F
000097A0  5F00                    3568           SUBQ.B  #7,D0          MAKE BINARY
000097A2                          3569  
000097A2  B043                    3570  GETN77   CMP.W   D3,D0          IS INPUT LARGER THAN BASE
000097A4  6416                    3571           BCC.S   GETN80         LARGER THAN BASE
000097A6  2401                    3572           MOVE.L  D1,D2          GET READY TO MULTIPLY D1*BASE
000097A8  4841                    3573           SWAP    D1
000097AA  C2C3                    3574           MULU    D3,D1          TOP PART
000097AC  4841                    3575           SWAP    D1
000097AE  4A41                    3576           TST.W   D1             CHECK FOR OVERFLOW
000097B0  660A                    3577           BNE.S   GETN80         VALUE IS TOO LARGE
000097B2  C4C3                    3578           MULU    D3,D2          NOW WORK ON LOW WORD
000097B4  D282                    3579           ADD.L   D2,D1          PUT IT BACK TOGETHER
000097B6  6904                    3580           BVS.S   GETN80         OVERFLOW?
000097B8  D280                    3581           ADD.L   D0,D1          ADD IN NEW STUFF
000097BA  68AA                    3582           BVC     GETN57
000097BC  70FF                    3583  GETN80   MOVEQ   #-1,D0         ERROR RETURN (BNE)
000097BE  6006                    3584           BRA.S   GETN95
000097C0                          3585  
000097C0  538D                    3586  GETN85   SUBQ.L  #1,A5          BACK UP TO POINT AT SPACE/PREVIOUS CHAR
000097C2  2001                    3587  GETN90   MOVE.L  D1,D0          SET UP RESULT FOR RETURN
000097C4  4281                    3588           CLR.L   D1             NORMAL RETURN (BEQ)
000097C6  4CDF 013E               3589  GETN95   MOVEM.L (A7)+,D1-D5/A0 RESTORE SOME REGISTERS
000097CA  4E75                    3590           RTS
000097CC                          3591  
000097CC= 20 28 2B 2C 2D 2E ...   3592  GETNDATA DC.B    ' (+,-.:;=^]',0 TERMINATE CHARS
000097D8                          3593  
000097D8                          3594  
000097D8                          3595  
000097D8                          3596  *
000097D8                          3597  *  ***GETHEX***  GET HEX (BINARY VALUE FROM ASCII)
000097D8                          3598  *   D0.B HAS ASCII CHAR  RETURNS $0-$F BINARY
000097D8                          3599  *
000097D8  0C00 0030               3600  GETHEX CMPI.B    #$30,D0        IS IT LESS THAN ZERO
000097DC  6D1C                    3601         BLT.S     PNMSG011
000097DE  0C00 0039               3602         CMPI.B    #$39,D0        IS IT GREATER THAN 9
000097E2  6F0E                    3603         BLE.S     GTHX2          GOOD HEX
000097E4                          3604  
000097E4  0C00 0041               3605         CMPI.B    #$41,D0        IS IT LESS THAN 'A'
000097E8  6D10                    3606         BLT.S     PNMSG011
000097EA  0C00 0046               3607         CMPI.B    #$46,D0        IS IT GT 'F'
000097EE  6E0A                    3608         BGT.S     PNMSG011
000097F0  5F00                    3609         SUBQ.B    #7,D0          MAKE IT SMALLER A=10
000097F2  0280 0000000F           3610  GTHX2  ANDI.L    #$F,D0
000097F8  4E75                    3611         RTS
000097FA                          3612  
000097FA  6100 00AE               3613  PNMSG011 BSR     FIXBUF         PRINT NOT A HEX DIGIT
000097FE  1CC0                    3614           MOVE.B  D0,(A6)+       PUT IN OFFENDING CHAR
00009800  4BFA 000A               3615           LEA     MSG011(PC),A5  '  IS NOT A HEX DIGIT'
00009804  6100 E8F0               3616           BSR     FIXDADD
00009808  6000 E89E               3617           BRA     MSG            GO PRINT IT AND ENTER MACSBUG
0000980C                          3618  
0000980C= 20 20 49 53 20 4E ...   3619  MSG011   DC.B    '  IS NOT A HEX DIGIT',EOT
00009821= 00                      3620           DC.B    0              PAD BYTE
00009822                          3621  
00009822                          3622  
00009822                          3623  *-------------------------------------------------------------------------
00009822                          3624  * File X         COMMON I/O                                       05/17/82
00009822                          3625  
00009822                          3626  ******************************
00009822                          3627  *
00009822                          3628  *    SEND LINE TO PORT1 WITH CR/LF
00009822                          3629  *
00009822  1CFC 000D               3630  OUT1CR   MOVE.B  #CR,(A6)+
00009826  1CFC 000A               3631           MOVE.B  #LF,(A6)+
0000982A  4AB8 061C               3632           TST.L   OUTTO          SEE IF ALTERNATE ADDRESS
0000982E  6706                    3633           BEQ.S   OUT1CRX
00009830  2F38 061C               3634           MOVE.L  OUTTO,-(A7)    PUSH ON STACK
00009834  4E75                    3635           RTS                    GO DO IT
00009836                          3636  
00009836  2F38 0630               3637  OUT1CRX  MOVE.L  OUTPORT1,-(A7) GO TO I/O ADDRESS
0000983A  4E75                    3638           RTS                    (THIS NORMALLY GOES TO OUT1CR0)
0000983C                          3639  *
0000983C                          3640  OUT1CR0  DS      0
0000983C                          3641  *
0000983C                          3642  *    OUTPUT BUFFER TO PORT1
0000983C                          3643  *
0000983C  48E7 F0C0               3644  OUTPUT   MOVEM.L D0-D3/A0-A1,-(A7) GET SOME WORKING ROOM
00009840  4283                    3645           CLR.L   D3             D3 = NO OFFSET INTO NULL CHARACTERS
00009842  6160                    3646           BSR.S   GETSER1        A0 = GET SERIAL PORT 1 ADDRESS
00009844  601E                    3647           BRA.S   OUTP2
00009846                          3648  *
00009846                          3649  *    SEND LINE TO PORT2 WITH CR
00009846                          3650  *
00009846  1CFC 000D               3651  OUTPUT2  MOVE.B  #$D,(A6)+      TACK ON A "CR"
0000984A  4AB8 061C               3652           TST.L   OUTTO          SEE IF ALTERNATE ADDRESS
0000984E  6706                    3653           BEQ.S   OUTPUT2X
00009850  2F38 061C               3654           MOVE.L  OUTTO,-(A7)    PUSH ON STACK
00009854  4E75                    3655           RTS                    GO DO IT
00009856                          3656  
00009856  2F38 0638               3657  OUTPUT2X MOVE.L  OUTPORT2,-(A7) GO TO IO ROUTINE
0000985A  4E75                    3658           RTS                    (THIS NORMALLY GOES TO OUTPUT20)
0000985C                          3659  *
0000985C                          3660  OUTPUT20 DS      0
0000985C                          3661  *
0000985C                          3662  *     OUTPUT BUFFER TO PORT2
0000985C                          3663  *
0000985C  48E7 F0C0               3664  OUTPUT21 MOVEM.L D0-D3/A0-A1,-(A7)
00009860  7601                    3665           MOVEQ   #1,D3          SIGNAL FOR PORT2
00009862  6144                    3666           BSR.S   GETSER2        RETURNS SERIAL PORT 2 BASE ADDRESS IN A0
00009864                          3667  *
00009864                          3668  *   SEND BUFFER TO PORT
00009864                          3669  *
00009864  BBCE                    3670  OUTP2    CMP.L   A6,A5          SEE IF AT OR BEYOND END OF LINE
00009866  6506                    3671           BCS.S   OUTP3          NO... KEEP GOING, ELSE
00009868  4CDF 030F               3672           MOVEM.L (A7)+,D0-D3/A0-A1 RESTORE REGISTERS
0000986C  4E75                    3673           RTS                    END OF ROUTINE
0000986E                          3674  
0000986E  101D                    3675  OUTP3    MOVE.B  (A5)+,D0       GRAB BYTE TO OUTPUT
00009870  6102                    3676           BSR.S   OUTCH1         GO PRINT IT
00009872  60F0                    3677           BRA.S   OUTP2          GO DO ANOTHER
00009874                          3678  
00009874                          3679  *   SEND CHARACTER IN D0.B TO PORT1
00009874                          3680  *   WHOSE BASE ADDRESS IS IN A0
00009874                          3681  *   D3=0 FOR PORT1  D3=1 FOR PORT2
00009874                          3682  *   PUTS IN NULL PADDING AS NEEDED
00009874                          3683  *
00009874  6100 0102               3684  OUTCH1   BSR     OUTCH          GO PRINT D0
00009878  4A00                    3685           TST.B   D0             SEE IF NULL
0000987A  6726                    3686           BEQ.S   OUTCHRTS       JUST END IF NULL
0000987C  4282                    3687           CLR.L   D2             CLEAR UPPER BYTES OF NULL LOOP COUNTER
0000987E  43F8 0618               3688           LEA     NULLPADS,A1    FORM ADDRESS OF PADS
00009882  D3C3                    3689           ADD.L   D3,A1          D3=0 FOR PORT1 1=PORT2
00009884  1411                    3690           MOVE.B  (A1),D2        DEFAULT NULL PADS
00009886  0C00 000D               3691           CMPI.B  #$D,D0         SEE IF CR
0000988A  6608                    3692           BNE.S   OUTCH2
0000988C  43F8 061A               3693           LEA     CRPADS,A1      FORM ADDRESS OF CR PADS
00009890  D3C3                    3694           ADD.L   D3,A1          D3=0 FOR PORT1  1=PORT2
00009892  1411                    3695           MOVE.B  (A1),D2        NULLS AFTER CR
00009894  4A82                    3696  OUTCH2   TST.L   D2  SEE        IF ANY PADDS TO BE SEND
00009896  670A                    3697           BEQ.S   OUTCHRTS       0=NONE
00009898  4280                    3698           CLR.L   D0             0=NULL CHAR TO BE SEND
0000989A  6100 00DC               3699  OUTCH3   BSR     OUTCH          SEND A NULL
0000989E  5382                    3700           SUBQ.L  #1,D2          LOOP AROUND
000098A0  66F8                    3701           BNE     OUTCH3
000098A2  4E75                    3702  OUTCHRTS RTS                    END OF OUTCH ROUTINE
000098A4                          3703  
000098A4                          3704  *
000098A4                          3705  *   GET BASE ADDRESS OF SERIAL PORT 1 IN  A0
000098A4                          3706  *
000098A4                          3707  
000098A4  4E75                    3708  GETSER1   RTS
000098A6                          3709  
000098A6  4E75                    3710  RETURN   RTS     RETURN         (USED FROM A COUPLE OF PLACES)
000098A8                          3711  
000098A8                          3712  
000098A8                          3713  *
000098A8                          3714  *   GET BASE ADDRESS OF SERIAL PORT 2 IN A0
000098A8                          3715  *
000098A8                          3716  
000098A8  4E75                    3717  GETSER2  RTS
000098AA                          3718           
000098AA                          3719  *
000098AA                          3720  *     FIX THE BUFFER A5 & A6 SET TO START OF BUFFER QUE
000098AA                          3721  *
000098AA  4BF8 0540               3722  FIXBUF   LEA     BUFFER,A5
000098AE  2C4D                    3723           MOVE.L  A5,A6
000098B0  4E75                    3724           RTS
000098B2                          3725  
000098B2                          3726  *   INPUT A LINE FROM PORT1
000098B2                          3727  *
000098B2  4AB8 0620               3728  PORTIN1  TST.L   INFROM         SEE IF ALTERNAME ADDRESS
000098B6  6706                    3729           BEQ.S   PORTIN1X
000098B8  2F38 0620               3730           MOVE.L  INFROM,-(A7)   PUSH ON STACK
000098BC  4E75                    3731           RTS                    GO DO IT
000098BE  2F38 062C               3732  PORTIN1X MOVE.L  INPORT1,-(A7)  GO TO IO ROUTINE
000098C2  4E75                    3733           RTS                    NORMALLY GOES TO PORTIN10
000098C4                          3734  
000098C4  48E7 F9E0               3735  PORTIN1N MOVEM.L D0-D4/D7/A0-A2,-(A7)
000098C8  4A38 04E8               3736           TST.B   XONOFF+2
000098CC  6608                    3737           BNE.S   PORTIN1V       OVERRIDE "No Auto Line Feed"
000098CE  7E01                    3738           MOVEQ   #1,D7          "No Auto Line Feed" Entry point
000098D0  6006                    3739           BRA.S   PORTIN1W
000098D2                          3740  
000098D2                          3741  * ENTRY ALSO POSSIBLE FROM:  PORTIN2
000098D2  48E7 F9E0               3742  PORTIN10 MOVEM.L D0-D4/D7/A0-A2,-(A7)
000098D6  4287                    3743  PORTIN1V CLR.L   D7             "Auto Line Feed" Entry point.
000098D8  4283                    3744  PORTIN1W CLR.L   D3             FLAG AS PORT1
000098DA  61C8                    3745           BSR     GETSER1        MOVE ADDRESS INTO A0
000098DC                          3746  
000098DC  6100 00CA               3747  READBUF  BSR     INCHNE         GO GET SOME DATA  (NO ECHO)
000098E0  4A00                    3748           TST.B   D0             CHECK FOR NULLS
000098E2  67F8                    3749           BEQ.S   READBUF
000098E4  3800                    3750           MOVE.W  D0,D4          SAVE FOR A WHILE
000098E6  618C                    3751           BSR     OUTCH1         ECHO WHAT IS IN D0
000098E8  3004                    3752           MOVE.W  D4,D0          RESTORE IT
000098EA  0C00 000A               3753           CMPI.B  #LF,D0         SEE IF LINE FEED
000098EE  67EC                    3754           BEQ.S   READBUF        DONT PUT IT IN BUFFER
000098F0                          3755  
000098F0  0C00 0018               3756           CMPI.B  #CTLX,D0       SEE IF CTRL-X "CANCEL LINE"
000098F4  6610                    3757           BNE.S   CHKCTLH        No... Then go check for backspace
000098F6  700D                    3758           MOVEQ   #CR,D0         Yes.. 1) Send a carriage return
000098F8  6100 FF7A               3759           BSR     OUTCH1         *
000098FC  700A                    3760           MOVEQ   #LF,D0         *     2) Send a line feed
000098FE  6100 FF74               3761           BSR     OUTCH1         *
00009902  2C4D                    3762           MOVE.L  A5,A6          *     3) Set BUFFER at start again
00009904  60D6                    3763           BRA.S   READBUF        *     4) Restart this routine
00009906                          3764  
00009906  0C00 0008               3765  CHKCTLH  CMPI.B  #CTLH,D0       CTRL-H? (Backspace)
0000990A  6714                    3766           BEQ.S   BS4CTLH        Yes...  Go backspace 1 character
0000990C  0C00 007F               3767           CMPI.B  #DEL,D0        DEL?    (Also a Backspace)
00009910  6624                    3768           BNE.S   CHKCTLD        No....  Then go check for CTRL D
00009912  BDCD                    3769  BKSPACE  CMP.L   A5,A6          Yes...  Usually need an extra "Backspace"
00009914  67C6                    3770           BEQ     READBUF        If at start of buffer, don't back up any more.
00009916  103C 0008               3771           MOVE.B  #CTLH,D0       Backspace cursor.
0000991A  6100 FF58               3772           BSR     OUTCH1         *
0000991E  6004                    3773           BRA.S   BLANKIT        Bypass check for start of buffer
00009920                          3774  
00009920                          3775  BS4CTLH  DS      0              CTL-H already backed up 1 character.
00009920  BDCD                    3776           CMP.L   A5,A6          At beginning of buffer?
00009922  67B8                    3777           BEQ     READBUF        Yes...  Then don't back up any more.
00009924  7020                    3778  BLANKIT  MOVEQ   #$20,D0        Now blank out previous character.
00009926  6100 FF4C               3779           BSR     OUTCH1         *
0000992A  1026                    3780           MOVE.B  -(A6),D0       Remove last character from buffer.
0000992C  103C 0008               3781           MOVE.B  #CTLH,D0       Backup cursor again.
00009930  6100 FF42               3782           BSR     OUTCH1         *
00009934  60A6                    3783           BRA     READBUF        Go get next character.
00009936                          3784  
00009936  0C00 0004               3785  CHKCTLD  CMPI.B  #CTLD,D0       CTL D?  (REPRINT)
0000993A  6626                    3786           BNE.S   CHKCR          No....  Then go check if a "CR".
0000993C  700D                    3787           MOVEQ   #CR,D0         Yes...  Print "CR"
0000993E  6100 FF34               3788           BSR     OUTCH1         *
00009942  700A                    3789           MOVEQ   #LF,D0         Print "LF"
00009944  6100 FF2E               3790           BSR     OUTCH1         *
00009948  2F0D                    3791           MOVE.L  A5,-(A7)       SAVE ON STACK FOR A MOMENT
0000994A  6100 FEF0               3792           BSR     OUTPUT         GO PRINT BUFFER
0000994E  2A5F                    3793           MOVE.L  (A7)+,A5       GET BACK FROM STACK
00009950  608A                    3794           BRA     READBUF
00009952                          3795  
00009952  1CC0                    3796  CHARSAVE MOVE.B  D0,(A6)+       SAVE DATA INTO BUFFER
00009954  220E                    3797           MOVE.L  A6,D1          CALCULATE ROOM USED
00009956  928D                    3798           SUB.L   A5,D1          DONT USE MORE THAN "BUFFSIZE"
00009958  0C41 0080               3799           CMPI.W  #BUFFSIZE,D1
0000995C  6B00 FF7E               3800           BMI     READBUF        We're OK, go get next character.
00009960  60B0                    3801           BRA     BKSPACE        If not, handle as though a "CNTL-H"
00009962                          3802  
00009962  0C00 000D               3803  CHKCR    CMPI.B  #CR,D0         CR?  (End of command line).
00009966  66EA                    3804           BNE.S   CHARSAVE       No.. Then go store this character.
00009968                          3805  
00009968  4A07                    3806           TST.B   D7             Check "Auto Line Feed" switch
0000996A  6606                    3807           BNE.S   NOAUTOLF       Yes.. Bypass sending Line feed.
0000996C  700A                    3808           MOVEQ   #LF,D0         No... Set one up and...
0000996E  6100 FF04               3809           BSR     OUTCH1         .     Send it!
00009972                          3810  NOAUTOLF DS      0
00009972                          3811  
00009972  4CDF 079F               3812   MOVEM.L (A7)+,D0-D4/D7/A0-A2 Restore Regs.
00009976  4E75                    3813           RTS                    RETURN TO CALLER
00009978                          3814  
00009978                          3815  
00009978                          3816  *
00009978                          3817  *       SEND CHARACTER IN D0.B TO SCREEN
00009978                          3818  *
00009978  48E7 C000               3819  OUTCH    MOVEM.L  D0-D1,-(A7)
0000997C  2200                    3820           MOVE.L   D0,D1
0000997E  103C 0006               3821           MOVE.B   #6,D0          TRAP TASK #6 (DISPLAY SINGLE CHARACTER IN D1)
00009982  4E4F                    3822           TRAP     #15
00009984  4CDF 0003               3823           MOVEM.L  (A7)+,D0-D1
00009988  4E75                    3824           RTS
0000998A                          3825           
0000998A                          3826           
0000998A                          3827  *
0000998A                          3828  *   CHECK FOR BREAK ON PORT #1
0000998A                          3829  *
0000998A  4E75                    3830  CHKBRK    RTS
0000998C                          3831  
0000998C                          3832  *   MOVE.L  A0,-(A7)       SAVE A0 * * *
0000998C                          3833  *         BSR     GETSER1        RETURNS ADDRESS IN A0
0000998C                          3834  *         MOVE.B  (A0),D1        READ STATUS
0000998C                          3835  *         ANDI.B  #$10,D1
0000998C                          3836  *         BNE.S   BREAK
0000998C                          3837  *         MOVE.L  (A7)+,A0       RESTORE A0 * * *
0000998C                          3838  *         RTS
0000998C                          3839  
0000998C                          3840  *    WHAT TO DO WHEN THE BREAK IS PRESSED
0000998C                          3841  *
0000998C                          3842  
0000998C  4BFA 000E               3843  BREAK    LEA     MSG013(PC),A5  MSG:  "BREAK"
00009990  6100 E774               3844           BSR     FIXDCRLF       *
00009994  6100 FEA6               3845           BSR     OUTPUT         PRINT MESSAGE
00009998  6000 E82A               3846           BRA     MACSBUG        AND REENTER MACSBUG
0000999C                          3847             
0000999C= 0A 0A 42 52 45 41 ...   3848  MSG013   DC.B    LF,LF,'BREAK',CR,LF,LF,EOT
000099A7= 00                      3849           DC.B    0              PAD BYTE
000099A8                          3850  
000099A8  48E7 4000               3851  INCHNE   MOVEM.L  D1,-(A7)
000099AC  103C 0005               3852           MOVE.B   #5,D0          EASy68K trap task to read single character into D1.B
000099B0  4E4F                    3853           TRAP     #15
000099B2  1001                    3854           MOVE.B   D1,D0
000099B4  4CDF 0002               3855           MOVEM.L  (A7)+,D1
000099B8                          3856           IF.B D0 <EQ> #CTLC THEN.S      if Ctrl-C pressed
000099BE  60CC                    3857             BRA    BREAK
000099C0                          3858           ENDI
000099C0  4E75                    3859           RTS
000099C2                          3860  
000099C2                          3861  
000099C2                          3862  *     SCAN COMMAND LINE FOR PORT NUMBER
000099C2                          3863  *     DU LO VE MD
000099C2                          3864  *
000099C2  42B8 0620               3865  SCANPORT CLR.L   INFROM         DEFAULT IS WHATEVER IS CALLED
000099C6  42B8 061C               3866           CLR.L   OUTTO
000099CA  4E75                    3867  SCANP6   RTS
000099CC                          3868  
000099CC                          3869  
000099CC                          3870  
000099CC                          3871  *-------------------------------------------------------------------------
000099CC                          3872  * File CODE68K   68K ONE LINE ASSEMBLER                           07/23/82
000099CC                          3873  
000099CC                          3874  * EVALUATE EXPRESSION
000099CC                          3875  *  NUMBER PLUS OR MINUS NUMBER....
000099CC                          3876  *
000099CC                          3877  EV       DS      0
000099CC  2F07                    3878           MOVE.L  D7,-(A7)       SAVE D7
000099CE  4287                    3879           CLR.L   D7
000099D0  6120                    3880  EV21     BSR.S   GETFIELD       GET NUMBER
000099D2  DE80                    3881           ADD.L   D0,D7          D7 = NUMBER BEING BUILT
000099D4  121D                    3882  EV15     MOVE.B  (A5)+,D1       D1 = TERMINATING CHAR
000099D6  4280                    3883           CLR.L   D0             D0 = NEXT NUMBER (=0 1ST TIME)
000099D8  0C01 002B               3884           CMPI.B  #'+',D1
000099DC  67F2                    3885           BEQ     EV21           PLUS
000099DE  0C01 002D               3886           CMPI.B  #'-',D1
000099E2  6606                    3887           BNE.S   EV39           NOT MINUS
000099E4  610C                    3888           BSR.S   GETFIELD       GET NEXT NUMBER
000099E6  9E80                    3889           SUB.L   D0,D7
000099E8  60EA                    3890           BRA     EV15
000099EA                          3891  
000099EA  2007                    3892  EV39     MOVE.L  D7,D0          D0 = VALUE BUILT
000099EC  538D                    3893           SUBQ.L  #1,A5          A5 = CHAR AFTER EXPRESSION
000099EE  2E1F                    3894           MOVE.L  (A7)+,D7       RESTORE D7
000099F0  4E75                    3895           RTS
000099F2                          3896  
000099F2                          3897  GETFIELD DS      0
000099F2  0C15 002A               3898           CMPI.B  #'*',(A5)
000099F6  6606                    3899           BNE.S   GETF305
000099F8                          3900  
000099F8  2004                    3901           MOVE.L  D4,D0          D0 = PROGRAM COUNTER
000099FA  528D                    3902           ADDQ.L  #1,A5
000099FC  6036                    3903           BRA.S   GETF333
000099FE                          3904  
000099FE  0C15 0027               3905  GETF305  CMPI.B  #$27,(A5)
00009A02  662A                    3906           BNE.S   GETF325        NOT LITERAL
00009A04                          3907  
00009A04  528D                    3908           ADDQ.L  #1,A5
00009A06  4280                    3909           CLR.L   D0
00009A08                          3910  
00009A08  3229 000C               3911           MOVE.W  TLENGTH(A1),D1  D1 = SIZE
00009A0C  6704                    3912           BEQ.S   GETF308        .B = 0
00009A0E  EA49                    3913           LSR.W   #5,D1          .W = 1
00009A10  5381                    3914           SUBQ.L  #1,D1          .L = 3
00009A12                          3915  GETF308
00009A12                          3916  
00009A12  E188                    3917  GETF311  LSL.L   #8,D0
00009A14  101D                    3918           MOVE.B  (A5)+,D0
00009A16  0C15 0027               3919           CMPI.B  #$27,(A5)
00009A1A  6706                    3920           BEQ.S   GETF312        CLOSING QUOTE
00009A1C  51C9 FFF4               3921           DBF     D1,GETF311
00009A20  6056                    3922           BRA.S   ER1            OVERFLOW
00009A22                          3923  
00009A22  528D                    3924  GETF312  ADDQ.L  #1,A5          MOVE PAST CLOSING QUOTE
00009A24  6002                    3925           BRA.S   GETF314
00009A26                          3926  
00009A26  E188                    3927  GETF313  LSL.L   #8,D0
00009A28  51C9 FFFC               3928  GETF314  DBF     D1,GETF313     LEFT NORNALIZE
00009A2C  6006                    3929           BRA.S   GETF333
00009A2E                          3930  
00009A2E  6100 FCFC               3931  GETF325  BSR     GETDECNU       GET DECIMAL NUMBER
00009A32  6644                    3932           BNE.S   ER1            MESSED UP NUMBER
00009A34                          3933  
00009A34  4E75                    3934  GETF333  RTS
00009A36                          3935  
00009A36                          3936  XBASE    DS        0
00009A36                          3937  
00009A36                          3938  * FIND AND SET SIZE
00009A36                          3939  * BIT 5432109876543210
00009A36                          3940  *     ........00......  = BYTE
00009A36                          3941  *     ........01......  = WORD
00009A36                          3942  *     ........10......  = LONG
00009A36                          3943  *
00009A36  8469 000C               3944  FSIZE    OR.W    TLENGTH(A1),D2  SET SIZE BITS
00009A3A  4E75                    3945           RTS
00009A3C                          3946  
00009A3C                          3947  *  D0 = VALUE 0 - 7
00009A3C                          3948  *  D1 = 0 IF D@     = 1 IF A@
00009A3C  4281                    3949  GETREGD  CLR.L   D1
00009A3E  0C1D 0044               3950           CMPI.B  #'D',(A5)+
00009A42  6634                    3951           BNE.S   ER1
00009A44  4280                    3952  GET41    CLR.L   D0
00009A46  101D                    3953           MOVE.B  (A5)+,D0
00009A48  0400 0030               3954           SUBI.B  #'0',D0
00009A4C  6B2A                    3955           BMI.S   ER1
00009A4E  0C00 0007               3956           CMPI.B  #$7,D0
00009A52  6E24                    3957           BGT.S   ER1
00009A54  4E75                    3958           RTS
00009A56                          3959  
00009A56  4281                    3960  GETREGA  CLR.L   D1
00009A58  123C 0008               3961           MOVE.B  #8,D1
00009A5C  0C1D 0041               3962           CMPI.B  #'A',(A5)+
00009A60  6616                    3963           BNE.S   ER1
00009A62  60E0                    3964           BRA     GET41
00009A64                          3965  
00009A64  4241                    3966  GETREGAD CLR     D1
00009A66  101D                    3967           MOVE.B  (A5)+,D0
00009A68  0C00 0044               3968           CMPI.B  #'D',D0
00009A6C  67D6                    3969           BEQ     GET41
00009A6E  123C 0008               3970           MOVE.B  #8,D1
00009A72  0C00 0041               3971           CMPI.B  #'A',D0
00009A76  67CC                    3972           BEQ     GET41
00009A78  6000 078C               3973  ER1      BRA     ER
00009A7C                          3974  
00009A7C  3E3C 01FD               3975  EADA     MOVE.W  #$1FD,D7       DATA ALTERABLE ONLY
00009A80  6022                    3976           BRA.S   EA
00009A82                          3977  
00009A82  3E3C 07E4               3978  EAC      MOVE.W  #$7E4,D7       CONTROL ONLY
00009A86  601C                    3979           BRA.S   EA
00009A88                          3980  
00009A88  3E3C 01FC               3981  EAM      MOVE.W  #$1FC,D7       MEMORY ALTERABLE ONLY
00009A8C  6016                    3982           BRA.S   EA
00009A8E                          3983  
00009A8E  3E3C 0800               3984  EAZ      MOVE.W  #$800,D7       IMMEDIATE ONLY
00009A92  6010                    3985           BRA.S   EA
00009A94                          3986  
00009A94  3E3C 0FFD               3987  EADADDR  MOVE.W  #$FFD,D7       DATA ADDRESSING
00009A98  600A                    3988           BRA.S   EA
00009A9A                          3989  
00009A9A  3E3C 01FF               3990  EAA      MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
00009A9E  6004                    3991           BRA.S   EA
00009AA0                          3992  
00009AA0  3E3C 0FFF               3993  EAALL    MOVE.W  #$FFF,D7       ALL MODES
00009AA4                          3994  
00009AA4                          3995  *  ...............1  D@                DATA REGISTER
00009AA4                          3996  *  ..............1.  A@
00009AA4                          3997  *  .............1..  (A@)
00009AA4                          3998  *  ............1...  -(A@)
00009AA4                          3999  *  ...........1....  (A@)+
00009AA4                          4000  *  ..........1.....  DATA(A@)
00009AA4                          4001  *  .........1......  DATA(A@,R@)
00009AA4                          4002  *  ........1.......  DATA  (SHORT)
00009AA4                          4003  *  .......1........  DATA  (LONG)
00009AA4                          4004  *  ......1.........  DATA(PC)
00009AA4                          4005  *  .....1..........  DATA(PC,R@)
00009AA4                          4006  *  ....1...........  #DATA
00009AA4                          4007  *  1...............  SPECIAL CASE JMP.L
00009AA4                          4008  
00009AA4                          4009  * D0 = VALUE CALCULATED
00009AA4                          4010  * D2 = MASK WORD (1ST WORD OF INSTRUCTION)
00009AA4                          4011  * D3 = OFFSET FOR DATA STORE (TDATA+..)
00009AA4                          4012  * D4 = EXTENSION WORD
00009AA4                          4013  * D5 = <DATA>
00009AA4                          4014  * D6 = MODE AS BUILT   .........XXXXXX
00009AA4                          4015  * D7 = MODES ALLOWED
00009AA4                          4016  *
00009AA4                          4017  * A4 = BASE ADDRESS FOR DATA STORE (TDATA+..)[A4,D3]
00009AA4                          4018  EA       DS      0
00009AA4  4285                    4019           CLR.L   D5             ZERO VALUE
00009AA6  4286                    4020           CLR.L   D6             MODE = 000000
00009AA8  1015                    4021           MOVE.B  (A5),D0
00009AAA  0C00 0023               4022           CMPI.B  #'#',D0
00009AAE  6646                    4023           BNE.S   EA10
00009AB0                          4024  
00009AB0                          4025  * IMMEDIATE MODE
00009AB0                          4026  
00009AB0  0807 000B               4027           BTST    #11,D7
00009AB4  67C2                    4028           BEQ     ER1
00009AB6                          4029  
00009AB6  1C3C 003C               4030           MOVE.B  #$3C,D6        D6 = MODE  111100
00009ABA  528D                    4031           ADDQ.L  #1,A5
00009ABC                          4032  
00009ABC  6100 FF0E               4033           BSR     EV             EVALUATE EXPRESSION
00009AC0  2A00                    4034           MOVE.L  D0,D5          D5 = VALUE
00009AC2                          4035  
00009AC2  4A29 000B               4036           TST.B   TLSPEC(A1)
00009AC6  670A                    4037           BEQ.S   EA0633         .SIZE NOT SPECIFIED (.W ASSUMED)
00009AC8                          4038  
00009AC8  3029 000C               4039           MOVE.W  TLENGTH(A1),D0
00009ACC  6714                    4040           BEQ.S   EA0635         .BYTE
00009ACE                          4041  
00009ACE  4A00                    4042           TST.B   D0
00009AD0  6B18                    4043           BMI.S   EA0637         .LONG
00009AD2                          4044  
00009AD2  6100 0238               4045  EA0633   BSR     EA16BIT        .WORD     -32K TO +64K
00009AD6  3985 3000               4046  EA0634   MOVE.W  D5,(A4,D3)
00009ADA  5429 000A               4047           ADDQ.B  #2,TNB(A1)     BYTE COUNT
00009ADE  5483                    4048           ADDQ.L  #2,D3          OFFSET
00009AE0  4E75                    4049           RTS
00009AE2                          4050  
00009AE2  6100 023E               4051  EA0635   BSR     EA8BIT         -127 TO +255
00009AE6  6690                    4052           BNE     ER1
00009AE8  60EC                    4053           BRA     EA0634
00009AEA                          4054  
00009AEA  2985 3000               4055  EA0637   MOVE.L  D5,(A4,D3)
00009AEE  5829 000A               4056           ADDQ.B  #4,TNB(A1)
00009AF2  5883                    4057           ADDQ.L  #4,D3
00009AF4  4E75                    4058           RTS
00009AF6                          4059  
00009AF6                          4060  EA10     DS      0
00009AF6  0C15 002D               4061           CMPI.B  #'-',(A5)
00009AFA  6626                    4062           BNE.S   EA11
00009AFC                          4063  
00009AFC  0C2D 0028 0001          4064           CMPI.B  #'(',1(A5)
00009B02  6600 0090               4065           BNE     EA41           MAY BE "-<DATA>
00009B06                          4066  
00009B06  548D                    4067           ADDQ.L  #2,A5
00009B08  3C3C 0020               4068           MOVE.W  #$0020,D6      MODE = -(A@)    100AAA
00009B0C                          4069  
00009B0C  0807 0004               4070           BTST    #4,D7
00009B10  6700 FF66               4071           BEQ     ER1            THIS MODE NOT ALLOWED
00009B14                          4072  
00009B14  6100 FF40               4073           BSR     GETREGA
00009B18  8C40                    4074           OR.W    D0,D6
00009B1A                          4075  
00009B1A  0C1D 0029               4076           CMPI.B  #')',(A5)+
00009B1E  6670                    4077           BNE.S   ER3            NO CLOSING PAREN
00009B20  4E75                    4078           RTS
00009B22                          4079  
00009B22  0C00 0041               4080  EA11     CMPI.B  #'A',D0
00009B26  6612                    4081           BNE.S   EA21
00009B28                          4082  
00009B28  1C3C 0008               4083           MOVE.B  #$08,D6        MODE = 001...
00009B2C  0807 0001               4084           BTST    #1,D7
00009B30  675E                    4085           BEQ.S   ER3            MODE NOT ALLOWED
00009B32                          4086  
00009B32  6100 FF22               4087           BSR     GETREGA
00009B36  8C40                    4088           OR.W    D0,D6
00009B38  4E75                    4089           RTS
00009B3A                          4090  
00009B3A  0C00 0044               4091  EA21     CMPI.B  #'D',D0
00009B3E  660E                    4092           BNE.S   EA31
00009B40                          4093  
00009B40  0807 0000               4094           BTST    #0,D7
00009B44  674A                    4095           BEQ.S   ER3            MODE NOT ALLOWED
00009B46                          4096  
00009B46  6100 FEF4               4097           BSR     GETREGD        MODE = D@   000AAA
00009B4A  8C40                    4098           OR.W    D0,D6
00009B4C  4E75                    4099           RTS
00009B4E                          4100  
00009B4E  0C00 0028               4101  EA31     CMPI.B  #'(',D0
00009B52  6640                    4102           BNE.S   EA41
00009B54                          4103  
00009B54                          4104  * POSSIBLE
00009B54                          4105  *  (A@)
00009B54                          4106  *  (A@)+
00009B54                          4107  *  (A@,R@)  IMPLIED ZERO DISPLACEMENT
00009B54                          4108  *
00009B54  528D                    4109           ADDQ.L  #1,A5
00009B56  6100 FEFE               4110           BSR     GETREGA
00009B5A  8C40                    4111           OR.W    D0,D6
00009B5C                          4112  
00009B5C  101D                    4113           MOVE.B  (A5)+,D0
00009B5E  0C00 002C               4114           CMPI.B  #',',D0
00009B62  6700 00D0               4115           BEQ     EA5116         MODE = (A@,R@)  ;IMPLIED D5 = 0 DATA
00009B66                          4116  
00009B66  0C00 0029               4117           CMPI.B  #')',D0        LOOK FOR CLOSING )
00009B6A  6624                    4118           BNE.S   ER3
00009B6C                          4119  
00009B6C  0C15 0020               4120           CMPI.B  #BLANK,(A5)    LOOK FOR BLANK
00009B70  6714                    4121           BEQ.S   EA35           MODE = (A@)
00009B72                          4122  
00009B72  0C15 002B               4123           CMPI.B  #'+',(A5)
00009B76  660E                    4124           BNE.S   EA35
00009B78  528D                    4125           ADDQ.L  #1,A5
00009B7A                          4126  
00009B7A  0046 0018               4127           ORI.W   #$18,D6        MODE = 011...    (A@)+
00009B7E                          4128  
00009B7E  0807 0003               4129           BTST    #3,D7
00009B82  670C                    4130           BEQ.S   ER3            MODE NOT ALLOWED
00009B84                          4131  
00009B84  4E75                    4132  EA34     RTS
00009B86                          4133  
00009B86  0046 0010               4134  EA35     ORI.W   #$10,D6        MODE = 010...   (A@)
00009B8A                          4135  
00009B8A  0807 0002               4136           BTST    #2,D7
00009B8E  66F4                    4137           BNE     EA34           MODE ALLOWED
00009B90  6000 0674               4138  ER3      BRA     ER             MODE NOT ALLOWED
00009B94                          4139  
00009B94                          4140  * POSSIBLE
00009B94                          4141  *   <DATA>   SHORT
00009B94                          4142  *   <DATA>   LONG
00009B94                          4143  *   <DATA>(A@)
00009B94                          4144  *   <DATA>(A@,R@)
00009B94                          4145  *   <DATA>(A@,R@.W)
00009B94                          4146  *   <DATA>(A@,R@.L)
00009B94                          4147  *   <DATA>(PC)
00009B94                          4148  *   <DATA>(PC,R@)
00009B94                          4149  *   <DATA>(PC,R@.W)
00009B94                          4150  *   <DATA>(PC,R@.L)
00009B94                          4151  *
00009B94  6100 FE36               4152  EA41     BSR     EV             EVALUATE EXPRESSION
00009B98  2A00                    4153           MOVE.L  D0,D5          D5 = <DATA>
00009B9A                          4154  
00009B9A  1015                    4155           MOVE.B  (A5),D0
00009B9C  0C00 002C               4156           CMPI.B  #',',D0
00009BA0  6706                    4157           BEQ.S   EA4102
00009BA2  0C00 0020               4158           CMPI.B  #BLANK,D0
00009BA6  6642                    4159           BNE.S   EA4120
00009BA8                          4160  
00009BA8                          4161  *  <DATA>         ONLY
00009BA8                          4162  * CHECK IF NEGATIVE NUMBER
00009BA8                          4163  
00009BA8  2005                    4164  EA4102   MOVE.L  D5,D0
00009BAA  6A02                    4165           BPL.S   EA4105         POSITIVE NUMBER
00009BAC  4680                    4166           NOT.L   D0
00009BAE  0240 8000               4167  EA4105   ANDI.W  #$8000,D0
00009BB2  4A80                    4168           TST.L   D0
00009BB4  661E                    4169           BNE.S   EA4135         .LONG
00009BB6                          4170  
00009BB6                          4171  *  <DATA>.W
00009BB6  0807 0007               4172           BTST    #7,D7
00009BBA  6608                    4173           BNE.S   EA4127         SHORT ALLOWED
00009BBC  0807 000F               4174           BTST    #15,D7
00009BC0  67CE                    4175           BEQ     ER3            MODE NOT ALLOWED
00009BC2  6010                    4176           BRA.S   EA4135         SPECIAL CASE (JMP.L)
00009BC4                          4177  
00009BC4  0046 0038               4178  EA4127   ORI.W   #$38,D6        EA = ABSOULTE SHORT
00009BC8  3985 3000               4179           MOVE.W  D5,(A4,D3)     D5 = DATA
00009BCC  5429 000A               4180           ADDQ.B  #2,TNB(A1)     BYTE COUNT
00009BD0  5483                    4181           ADDQ.L  #2,D3
00009BD2  4E75                    4182           RTS
00009BD4                          4183  
00009BD4                          4184  *EA4134  CMPI.B  #'L',D0
00009BD4                          4185  *        BNE     ER3
00009BD4                          4186  
00009BD4                          4187  *  <DATA>.L
00009BD4  0046 0039               4188  EA4135   ORI.W   #$39,D6        EA = ABSOLUTE LONG
00009BD8  2985 3000               4189           MOVE.L  D5,(A4,D3)
00009BDC  5829 000A               4190           ADDQ.B  #4,TNB(A1)     BYTE COUNT
00009BE0  5883                    4191           ADDQ.L  #4,D3
00009BE2  0807 0008               4192           BTST    #8,D7
00009BE6  67A8                    4193           BEQ     ER3            MODE NOT ALLOWED
00009BE8  4E75                    4194           RTS
00009BEA                          4195  
00009BEA  528D                    4196  EA4120   ADDQ.L  #1,A5
00009BEC  0C00 0028               4197           CMPI.B  #'(',D0
00009BF0  669E                    4198           BNE     ER3
00009BF2                          4199  
00009BF2  0C15 0050               4200           CMPI.B  #'P',(A5)
00009BF6  6700 008E               4201           BEQ     EA61
00009BFA                          4202  
00009BFA                          4203  * <DATA>(A@.......
00009BFA  6100 011A               4204           BSR     EA16BITS       -32K TO +32K
00009BFE                          4205  
00009BFE  6100 FE56               4206           BSR     GETREGA
00009C02  8C40                    4207           OR.W    D0,D6
00009C04                          4208  
00009C04  1015                    4209           MOVE.B  (A5),D0
00009C06  0C00 0029               4210           CMPI.B  #')',D0
00009C0A  6624                    4211           BNE.S   EA5115
00009C0C                          4212  
00009C0C                          4213  * <DATA>(A@)
00009C0C  528D                    4214           ADDQ.L  #1,A5
00009C0E                          4215  
00009C0E  0807 0005               4216           BTST    #5,D7
00009C12  6700 00A0               4217           BEQ     ER4            MODE NOT ALLOWED
00009C16                          4218  
00009C16  0046 0028               4219           ORI.W   #$0028,D6      MODE = 101AAA
00009C1A                          4220  
00009C1A  0C85 00010000           4221           CMPI.L  #$10000,D5
00009C20  6A00 0092               4222           BPL     ER4
00009C24                          4223  
00009C24  3985 3000               4224           MOVE.W  D5,(A4,D3)
00009C28  5429 000A               4225           ADDQ.B  #2,TNB(A1)
00009C2C  5483                    4226           ADDQ.L  #2,D3
00009C2E  4E75                    4227           RTS
00009C30                          4228  
00009C30  6100 05BA               4229  EA5115   BSR     COMMA
00009C34                          4230  
00009C34                          4231  *  <DATA>(A@,-----    ADDRESS REGISTER WITH INDEX
00009C34  48C5                    4232  EA5116   EXT.L   D5
00009C36  6100 00F2               4233           BSR     EA8BITS        -128 TO +127
00009C3A  6678                    4234           BNE.S   ER4
00009C3C  0245 00FF               4235           ANDI.W  #$00FF,D5
00009C40  0046 0030               4236           ORI.W   #$0030,D6      MODE  110---
00009C44                          4237  
00009C44  0807 0006               4238           BTST    #6,D7
00009C48  676A                    4239           BEQ.S   ER4            MODE NOT ALLOWED
00009C4A                          4240  
00009C4A  6100 FE18               4241           BSR     GETREGAD
00009C4E  8041                    4242           OR.W    D1,D0
00009C50  E858                    4243           ROR.W   #4,D0
00009C52  8A40                    4244           OR.W    D0,D5          EXTENSION WORD
00009C54                          4245  
00009C54                          4246  * BIT 11 EXTENSION WORD
00009C54                          4247  *   0 = SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REGISTER
00009C54                          4248  *   1 = LONG VALUE IN INDEX REGISTER  (DEFAULT)
00009C54                          4249  *
00009C54  101D                    4250           MOVE.B  (A5)+,D0
00009C56  0C00 0029               4251           CMPI.B  #')',D0
00009C5A  671E                    4252           BEQ.S   EA5119         DEFAULT   .W
00009C5C                          4253  
00009C5C  0C00 002E               4254           CMPI.B  #'.',D0
00009C60  6652                    4255           BNE.S   ER4
00009C62                          4256  
00009C62  101D                    4257           MOVE.B  (A5)+,D0
00009C64  0C00 0057               4258           CMPI.B  #'W',D0
00009C68  670A                    4259           BEQ.S   EA5118
00009C6A                          4260  
00009C6A  0C00 004C               4261           CMPI.B  #'L',D0
00009C6E  6644                    4262           BNE.S   ER4            NEITHER .W NOR .L
00009C70                          4263  
00009C70  0045 0800               4264           ORI.W   #$0800,D5      EXTENSION WORD, W/L BIT = .L
00009C74                          4265  
00009C74  0C1D 0029               4266  EA5118   CMPI.B  #')',(A5)+
00009C78  663A                    4267           BNE.S   ER4            NO CLOSING ")"
00009C7A                          4268  
00009C7A  3985 3000               4269  EA5119   MOVE.W  D5,(A4,D3)
00009C7E  5429 000A               4270           ADDQ.B  #2,TNB(A1)
00009C82  5483                    4271           ADDQ.L  #2,D3
00009C84  4E75                    4272  EA5119E  RTS
00009C86                          4273  
00009C86                          4274  *  <DATA>(P-----
00009C86  528D                    4275  EA61     ADDQ.L  #1,A5
00009C88  0C1D 0043               4276           CMPI.B  #'C',(A5)+
00009C8C  6600 0578               4277           BNE     ER
00009C90                          4278  
00009C90  9AA9 000E               4279           SUB.L   PCOUNTER(A1),D5  D5 = D5 - PC
00009C94  5585                    4280           SUBQ.L  #2,D5          D5 = D5 - (PC + 2)
00009C96                          4281  
00009C96  101D                    4282           MOVE.B  (A5)+,D0
00009C98  0C00 0029               4283           CMPI.B  #')',D0
00009C9C  661A                    4284           BNE.S   EA71
00009C9E                          4285  
00009C9E                          4286  *  <DATA>(PC)
00009C9E  0046 003A               4287           ORI.W   #$3A,D6        MODE = 111010
00009CA2                          4288  
00009CA2  6172                    4289           BSR.S   EA16BITS       -32K TO +32K
00009CA4  3985 3000               4290           MOVE.W  D5,(A4,D3)
00009CA8  5429 000A               4291           ADDQ.B  #2,TNB(A1)
00009CAC  5483                    4292           ADDQ.L  #2,D3
00009CAE                          4293  
00009CAE  0807 0009               4294           BTST    #9,D7
00009CB2  66D0                    4295           BNE     EA5119E
00009CB4  6000 0550               4296  ER4      BRA     ER
00009CB8                          4297  
00009CB8                          4298  *  <DATA>(PC----          PROGRAM COUNTER WITH INDEX
00009CB8  3C3C 003B               4299  EA71     MOVE.W  #$003B,D6      MODE = 111011
00009CBC                          4300  
00009CBC  0C00 002C               4301           CMPI.B  #',',D0
00009CC0  66F2                    4302           BNE     ER4
00009CC2                          4303  
00009CC2  0807 000A               4304           BTST    #10,D7
00009CC6  67EC                    4305           BEQ     ER4            MODE NOT ALLOWED
00009CC8                          4306  
00009CC8  6160                    4307           BSR.S   EA8BITS        -128 TO +127
00009CCA  66E8                    4308           BNE     ER4
00009CCC                          4309  
00009CCC  0245 00FF               4310           ANDI.W  #$00FF,D5      D5 = VALUE
00009CD0  6100 FD92               4311           BSR     GETREGAD
00009CD4  8041                    4312           OR.W    D1,D0
00009CD6                          4313  
00009CD6  E858                    4314           ROR.W   #4,D0
00009CD8  8A40                    4315           OR.W    D0,D5          D5 = EXTENSION WORD
00009CDA                          4316  
00009CDA  101D                    4317           MOVE.B  (A5)+,D0
00009CDC  0C00 0029               4318           CMPI.B  #')',D0
00009CE0  671E                    4319           BEQ.S   EA7115         DEFAULT  .W
00009CE2                          4320  
00009CE2  0C00 002E               4321           CMPI.B  #'.',D0
00009CE6  66CC                    4322           BNE     ER4
00009CE8                          4323  
00009CE8  101D                    4324           MOVE.B  (A5)+,D0
00009CEA  0C00 0057               4325           CMPI.B  #'W',D0
00009CEE  670A                    4326           BEQ.S   EA7113
00009CF0                          4327  
00009CF0  0C00 004C               4328           CMPI.B  #'L',D0
00009CF4  66BE                    4329           BNE     ER4
00009CF6  0045 0800               4330           ORI.W   #$0800,D5      EXTENSION WORD W/L = .L
00009CFA                          4331  
00009CFA  0C1D 0029               4332  EA7113   CMPI.B  #')',(A5)+
00009CFE  66B4                    4333           BNE     ER4            NO CLOSING ")"
00009D00                          4334  
00009D00  3985 3000               4335  EA7115   MOVE.W  D5,(A4,D3)
00009D04  5429 000A               4336           ADDQ.B  #2,TNB(A1)
00009D08  5483                    4337           ADDQ.L  #2,D3
00009D0A  4E75                    4338           RTS
00009D0C                          4339  
00009D0C                          4340  ****************************************************************************
00009D0C                          4341  *
00009D0C                          4342  *        ROUTINES TO TEST FOR VALID EFFECTIVE ADDRESSES
00009D0C                          4343  *
00009D0C                          4344  *        EA16BIT   tests that -32768 <= D5 <= 65535.  (signed or unsigned)
00009D0C                          4345  *        EA16BITS  tests that -32768 <= D5 <= 32767.  (signed only)
00009D0C                          4346  *        EA8BIT    tests that   -128 <= D5 <=   255.  (signed or unsigned)
00009D0C                          4347  *        EA8BITS   tests that   -128 <= D5 <=   127.  (signed only)
00009D0C                          4348  *
00009D0C                          4349  *        The 16-bit tests branch to ER if invalid, else return.
00009D0C                          4350  *        The  8-bit tests return condition codes <EQ> if valid, else <NE>.
00009D0C                          4351  *        D5 is preserved unless a branch to ER results.
00009D0C                          4352  *        D1 is destroyed.
00009D0C                          4353  *
00009D0C                          4354  ****************************************************************************
00009D0C                          4355  
00009D0C                          4356  EA16BIT:
00009D0C  610C                    4357           BSR.S   EA16BITC       CHECK RANGE -32768 TO 32767.  IF
00009D0E  2205                    4358           MOVE.L  D5,D1          INVALID, CHECK WHETHER THE HIGH 16
00009D10  4841                    4359           SWAP    D1             BITS ARE 0 (WHICH IMPLIES THAT
00009D12  4A41                    4360           TST.W   D1             D5 <= 65535).  IF NOT, FALL THRU TO
00009D14  6728                    4361           BEQ.S   EASEX          THE 16-BIT SIGNED TEST--WE WILL
00009D16                          4362  *                               FAIL AND GO TO ER.
00009D16                          4363  
00009D16                          4364  EA16BITS:
00009D16  487A 04EE               4365           PEA     ER(PC)         SET UP TO RETURN TO ER IF INVALID.
00009D1A                          4366  
00009D1A  223C 00007FFF           4367  EA16BITC MOVE.L  #$7FFF,D1      D1  <--  2^16-1.
00009D20  600E                    4368           BRA.S   EAS            GO TO THE COMMON TEST ROUTINE.
00009D22                          4369  
00009D22                          4370  
00009D22                          4371  EA8BIT:
00009D22  610A                    4372           BSR.S   EA8BITC        CHECK RANGE -128 TO 127.  IF INVALID,
00009D24  2205                    4373           MOVE.L  D5,D1          CHECK WHETHER THE HIGH 24 BITS ARE
00009D26  E089                    4374           LSR.L   #8,D1          0 (WHICH IMPLIES THAT D5 <= 255).
00009D28  4E75                    4375           RTS
00009D2A                          4376  
00009D2A                          4377  EA8BITS:
00009D2A  6102                    4378           BSR.S   EA8BITC        JUST CHECK FOR -127 <= D5 <= 128.
00009D2C  4E75                    4379           RTS                    (BSR PUTS NEEDED ADDRESS ON STACK!)
00009D2E                          4380  
00009D2E  727F                    4381  EA8BITC  MOVEQ   #$7F,D1        D1  <--  2^8 - 1.
00009D30                          4382  
00009D30                          4383  *                  *** NOTE: THIS ROUTINE PLAYS WITH THE STACK ***
00009D30  BA81                    4384  EAS      CMP.L   D1,D5          IF D5 > 2^N-1, RETURN WITH <NE> (INVAL).
00009D32  6E0A                    4385           BGT.S   EASEX
00009D34  4681                    4386           NOT.L   D1             IF D5 < -2^N,  RETURN WITH <NE> (INVAL).
00009D36  BA81                    4387           CMP.L   D1,D5
00009D38  6D04                    4388           BLT.S   EASEX
00009D3A                          4389  
00009D3A  588F                    4390           ADDQ.L  #4,A7          POP THE RETURN ADDRESS OFF THE STACK,
00009D3C  4281                    4391           CLR.L   D1             SET <EQ> (VALID), AND RETURN.
00009D3E                          4392  
00009D3E  4E75                    4393  EASEX    RTS
00009D40                          4394  
00009D40                          4395  ADR      MACRO
00009D40                          4396           DC.W    M\1-XBASE
00009D40                          4397           ENDM
00009D40                          4398  
00009D40                          4399  TBLKEYS  DS     0              INDEX
00009D40                          4400m          ADR    ABCD            0  ABCD SBCD
00009D42                          4401m          ADR    ADD             1  ADD  SUB
00009D44                          4402m          ADR    ADDA            2  ADDA CMPA SUBA
00009D46                          4403m          ADR    ADDI            3  ADDI CMPI SUBI
00009D48                          4404m          ADR    ADDQ            4  ADDQ SUBQ
00009D4A                          4405m          ADR    ADDX            5  ADDX SUBX
00009D4C                          4406m          ADR    AND             6  AND  EOR OR
00009D4E                          4407m          ADR    ASL             7  ASL  LSL ROL ROXL
00009D50                          4408m          ADR    DBCC            8  DBCC
00009D52                          4409m          ADR    BCHG            9  BCHG
00009D54                          4410m          ADR    BRA            10  BRA  BSR  BCC
00009D56                          4411m          ADR    BSET           11  BSET
00009D58                          4412m          ADR    CHK            12  CHK  DIVS DIVU MILS MULU
00009D5A                          4413m          ADR    CLR            13  CLR NEG NEGX NOT TST
00009D5C                          4414m          ADR    CMPM           14  CMPM
00009D5E                          4415m          ADR    MOVEQ          15  MOVEQ
00009D60                          4416m          ADR    EXG            16  EXG
00009D62                          4417m          ADR    EXT            17  EXT
00009D64                          4418m          ADR    JMP            18  JMP  JSR
00009D66                          4419m          ADR    LEA            19  LEA
00009D68                          4420m          ADR    LINK           20  LINK
00009D6A                          4421m          ADR    MOVE           21  MOVE
00009D6C                          4422m          ADR    CMMD2          22  NOP RESET RTE RTR RTS TRAPV
00009D6E                          4423m          ADR    STOP           23  STOP
00009D70                          4424m          ADR    SWAP           24  SWAP
00009D72                          4425m          ADR    TRAP           25  TRAP
00009D74                          4426m          ADR    UNLK           26  UNLK
00009D76                          4427m          ADR    MOVEM          27  MOVEM
00009D78                          4428m          ADR    ANDI           28  ANDI EORI ORI
00009D7A                          4429m          ADR    SCC            29  NBCD SCC TAS
00009D7C                          4430m          ADR    BCLR           30  BCLR
00009D7E                          4431m          ADR    BTST           31  BTST
00009D80                          4432m          ADR    MOVEA          32  MOVEA
00009D82                          4433m          ADR    MOVEP          33  MOVEP
00009D84                          4434m          ADR    CMP            34  CMP
00009D86                          4435m          ADR    EOR            35  EOR
00009D88                          4436m          ADR    PEA            36  PEA
00009D8A                          4437m          ADR    DC             37  DC.W
00009D8C                          4438  
00009D8C                          4439  
00009D8C                          4440  * \1,\2 = MNEUMONIC (\2 SIGN BIT SET AS LAST CHARACTER)
00009D8C                          4441  * \3    = INDEX TO TABLKEYS
00009D8C                          4442  * \4,\5 = FIRST WORD MASK
00009D8C                          4443  * \6    = NO OPERAND ALLOWED IF SIGN SET
00009D8C                          4444  * \7    = .S ALLOWED (.W NOT ALLOWED)
00009D8C                          4445  OPC      MACRO
00009D8C                          4446           DC.B    '\1','\2'+128
00009D8C                          4447           DC.B    \3+\6+\7,$\4,$\5
00009D8C                          4448           ENDM
00009D8C                          4449  
00009D8C  =00000080               4450  NOC      EQU     $80            (BIT 7 SET) NO OPERAND
00009D8C  =00000040               4451  NW       EQU     $40            (BIT 6 SET) .W NOT ALLOWED
00009D8C                          4452  
00009D8C                          4453m TBLOPC   OPC     ABC,D,0,C1,00,0,0     ABCD
00009D93                          4454m          OPC     ADD,A,2,D0,C0,0,0     ADDA
00009D9A                          4455m          OPC     ADD,I,3,06,00,0,0     ADDI
00009DA1                          4456m          OPC     ADD,Q,4,50,00,0,0     ADDQ
00009DA8                          4457m          OPC     ADD,X,5,D1,00,0,0     ADDX
00009DAF                          4458m          OPC     AD,D,1,D0,00,0,0      ADD
00009DB5                          4459m          OPC     AND,I,28,02,00,0,0    ANDI
00009DBC                          4460m          OPC     AN,D,6,C0,00,0,0      AND
00009DC2                          4461m          OPC     AS,L,7,E1,00,0,0      ASL
00009DC8                          4462m          OPC     AS,R,07,E0,00,0,0     ASR
00009DCE                          4463m          OPC     BR,A,10,60,00,0,NW    BRA
00009DD4                          4464m          OPC     BH,I,10,62,00,0,NW    BHI
00009DDA                          4465m          OPC     BL,S,10,63,00,0,NW    BLS
00009DE0                          4466m          OPC     BC,C,10,64,00,0,NW    BCC
00009DE6                          4467m          OPC     BC,S,10,65,00,0,NW    BCS
00009DEC                          4468m          OPC     BN,E,10,66,00,0,NW    BNE
00009DF2                          4469m          OPC     BE,Q,10,67,00,0,NW    BEQ
00009DF8                          4470m          OPC     BV,C,10,68,00,0,NW    BVC
00009DFE                          4471m          OPC     BV,S,10,69,00,0,NW    BVS
00009E04                          4472m          OPC     BP,L,10,6A,00,0,NW    BPL
00009E0A                          4473m          OPC     BM,I,10,6B,00,0,NW    BMI
00009E10                          4474m          OPC     BG,E,10,6C,00,0,NW    BGE
00009E16                          4475m          OPC     BL,T,10,6D,00,0,NW    BLT
00009E1C                          4476m          OPC     BG,T,10,6E,00,0,NW    BGT
00009E22                          4477m          OPC     BL,E,10,6F,00,0,NW    BLE
00009E28                          4478m          OPC     BCH,G,9,01,40,0,0     BCHG
00009E2F                          4479m          OPC     BCL,R,30,01,80,0,0    BCLR      DYNAMIC
00009E36                          4480m          OPC     BSE,T,11,01,C0,0,0    BSET
00009E3D                          4481m          OPC     BS,R,10,61,00,0,NW    BSR
00009E43                          4482m          OPC     BTS,T,31,01,00,0,0    BTST
00009E4A                          4483m          OPC     B,T,10,60,00,0,NW     BT
00009E4F                          4484m          OPC     CH,K,12,41,80,0,0     CHK
00009E55                          4485m          OPC     CL,R,13,42,00,0,0     CLR
00009E5B                          4486m          OPC     CMP,A,2,B0,C0,0,0     CMPA
00009E62                          4487m          OPC     CMP,I,3,0C,00,0,0     CMPI
00009E69                          4488m          OPC     CMP,M,14,B1,08,0,0    CMPM
00009E70                          4489m          OPC     CM,P,34,B0,00,0,0     CMP
00009E76                          4490m          OPC     DB,T,8,50,C8,0,NW     DBT
00009E7C                          4491m          OPC     DB,F,8,51,C8,0,NW     DBF
00009E82                          4492m          OPC     DBR,A,8,51,C8,0,NW    DBRA
00009E89                          4493m          OPC     DBH,I,8,52,C8,0,NW    DBHI
00009E90                          4494m          OPC     DBL,S,8,53,C8,0,NW    DBLS
00009E97                          4495m          OPC     DBC,C,8,54,C8,0,NW    DBCC
00009E9E                          4496m          OPC     DBC,S,8,55,C8,0,NW    DBCS
00009EA5                          4497m          OPC     DBN,E,8,56,C8,0,NW    DBNE
00009EAC                          4498m          OPC     DBE,Q,8,57,C8,0,NW    DBEQ
00009EB3                          4499m          OPC     DBV,C,8,58,C8,0,NW    DBVC
00009EBA                          4500m          OPC     DBV,S,8,59,C8,0,NW    DBVS
00009EC1                          4501m          OPC     DBP,L,8,5A,C8,0,NW    DBPL
00009EC8                          4502m          OPC     DBM,I,8,5B,C8,0,NW    DBMI
00009ECF                          4503m          OPC     DBG,E,8,5C,C8,0,NW    DBGE
00009ED6                          4504m          OPC     DBL,T,8,5D,C8,0,NW    DBLT
00009EDD                          4505m          OPC     DBG,T,8,5E,C8,0,NW    DBGT
00009EE4                          4506m          OPC     DBL,E,8,5F,C8,0,NW    DBLE
00009EEB                          4507m          OPC     DC.,W,37,00,00,0,0    DC.W  (WORD ONLY)
00009EF2                          4508m          OPC     DIV,S,12,81,C0,0,0    DIVS
00009EF9                          4509m          OPC     DIV,U,12,80,C0,0,0    DIVU
00009F00                          4510m          OPC     EOR,I,28,0A,00,0,0    EORI
00009F07                          4511m          OPC     EO,R,35,B1,00,0,0     EOR
00009F0D                          4512m          OPC     EX,G,16,C1,00,0,0     EXG
00009F13                          4513m          OPC     EX,T,17,48,00,0,0     EXT
00009F19                          4514m          OPC     JM,P,18,4E,C0,0,NW    JMP
00009F1F                          4515m          OPC     JS,R,18,4E,80,0,NW    JSR
00009F25                          4516m          OPC     LE,A,19,41,C0,0,0     LEA
00009F2B                          4517m          OPC     LIN,K,20,4E,50,0,0    LINK
00009F32                          4518m          OPC     LS,L,7,E3,08,0,0      LSL
00009F38                          4519m          OPC     LS,R,07,E2,08,0,0     LSR
00009F3E                          4520m          OPC     MOVE,A,32,00,04,0,0   MOVEA
00009F46                          4521m          OPC     MOVE,M,27,48,80,0,0   MOVEM
00009F4E                          4522m          OPC     MOVE,P,33,01,08,0,0   MOVEP
00009F56                          4523m          OPC     MOVE,Q,15,70,00,0,0   MOVEQ
00009F5E                          4524m          OPC     MOV,E,21,00,00,0,0    MOVE
00009F65                          4525m          OPC     MUL,S,12,C1,C0,0,0    MULS
00009F6C                          4526m          OPC     MUL,U,12,C0,C0,0,0    MULU
00009F73                          4527m          OPC     NBC,D,29,48,0,0,0     NBCD
00009F7A                          4528m          OPC     NEG,X,13,40,00,0,0    NEGX
00009F81                          4529m          OPC     NE,G,13,44,00,0,0     NEG
00009F87                          4530m          OPC     NO,P,22,4E,71,NOC,0   NOP
00009F8D                          4531m          OPC     NO,T,13,46,00,0,0     NOT
00009F93                          4532m          OPC     OR,I,28,00,00,0,0     ORI
00009F99                          4533m          OPC     O,R,6,80,00,0,0       OR
00009F9E                          4534m          OPC     PE,A,36,48,40,0,0     PEA
00009FA4                          4535m          OPC     RESE,T,22,4E,70,NOC,0 RESET
00009FAC                          4536m          OPC     RO,L,7,E7,18,0,0      ROL
00009FB2                          4537m          OPC     RO,R,07,E6,18,0,0     ROR
00009FB8                          4538m          OPC     ROX,L,7,E5,10,0,0     ROXL
00009FBF                          4539m          OPC     ROX,R,07,E4,10,0,0    ROXR
00009FC6                          4540m          OPC     RT,E,22,4E,73,NOC,0   RTE
00009FCC                          4541m          OPC     RT,R,22,4E,77,NOC,0   RTR
00009FD2                          4542m          OPC     RT,S,22,4E,75,NOC,0   RTS
00009FD8                          4543m          OPC     SBC,D,0,81,00,0,0     SBCD
00009FDF                          4544m          OPC     S,F,29,51,C0,0,0      SF
00009FE4                          4545m          OPC     SH,I,29,52,C0,0,0     SHI
00009FEA                          4546m          OPC     SL,S,29,53,C0,0,0     SLS
00009FF0                          4547m          OPC     SC,C,29,54,C0,0,0     SCC
00009FF6                          4548m          OPC     SC,S,29,55,C0,0,0     SCS
00009FFC                          4549m          OPC     SN,E,29,56,C0,0,0     SNE
0000A002                          4550m          OPC     SE,Q,29,57,C0,0,0     SEQ
0000A008                          4551m          OPC     SV,C,29,58,C0,0,0     SVC
0000A00E                          4552m          OPC     SV,S,29,59,C0,0,0     SVS
0000A014                          4553m          OPC     SP,L,29,5A,C0,0,0     SPL
0000A01A                          4554m          OPC     SM,I,29,5B,C0,0,0     SMI
0000A020                          4555m          OPC     SG,E,29,5C,C0,0,0     SGE
0000A026                          4556m          OPC     SL,T,29,5D,C0,0,0     SLT
0000A02C                          4557m          OPC     SG,T,29,5E,C0,0,0     SGT
0000A032                          4558m          OPC     SL,E,29,5F,C0,0,0     SLE
0000A038                          4559m          OPC     STO,P,23,4E,72,0,0    STOP
0000A03F                          4560m          OPC     S,T,29,50,C0,0,0      ST
0000A044                          4561m          OPC     SUB,A,2,90,C0,0,0     SUBA
0000A04B                          4562m          OPC     SUB,I,3,04,00,0,0     SUBI
0000A052                          4563m          OPC     SUB,Q,4,51,00,0,0     SUBQ
0000A059                          4564m          OPC     SUB,X,5,91,00,0,0     SUBX
0000A060                          4565m          OPC     SU,B,1,90,00,0,0      SUB
0000A066                          4566m          OPC     SWA,P,24,48,40,0,0    SWAP
0000A06D                          4567m          OPC     TA,S,29,4A,C0,0,0     TAS
0000A073                          4568m          OPC     TRAP,V,22,4E,76,NOC,0 TRAPV
0000A07B                          4569m          OPC     TRA,P,25,4E,40,0,0    TRAP
0000A082                          4570m          OPC     TS,T,13,4A,00,0,0     TST
0000A088                          4571m          OPC     UNL,K,26,4E,58,0,0    UNLK
0000A08F                          4572  
0000A08F= 00                      4573           DC.B    0              PAD BYTE
0000A090                          4574  
0000A090                          4575  TBLOPCE  DS      0
0000A090                          4576  
0000A090                          4577  * WITHOUT LABEL FIELD
0000A090                          4578  * 012345678901234567890123456789012345678901234567890
0000A090                          4579  * AAAAAA DDDDDDDDDDDDDDDDDDDD OPCODE  OPERAND
0000A090                          4580  *        FDATA                FOC     FOP
0000A090                          4581  
0000A090                          4582  * 012345678901234567890123456789012345678901234567890
0000A090                          4583  * AAAAAA DDDDDDDDDDDDDDDDDDDD LLLLLLLL OPCODE  OPERAND
0000A090                          4584  *        FDATA                FOL      FOC     FOP
0000A090                          4585  
0000A090                          4586  * A3 = STORE POINTER
0000A090                          4587  * A4 = PROGRAM COUNTER
0000A090                          4588  * A5 = SOURCE PTR BEGINNING
0000A090                          4589  * A6 = SOURCE PTR END+1
0000A090                          4590  *
0000A090  =00000050               4591  OUTBSIZE EQU     80        BUFFER SIZE
0000A090  =0000000A               4592  FDATA    EQU     10        OFFSET TO DATA
0000A090  =0000001F               4593  FOL      EQU     31        OFFSET TO LABEL
0000A090  =0000001F               4594  FOC      EQU     31        OFFSET TO OP-CODE (NO LABEL FIELD)
0000A090  =00000027               4595  FOP      EQU     39        OFFSET TO OPERAND (NO LABEL FIELD)
0000A090                          4596  
0000A090  4E51 FFDE               4597  CODE68K  LINK    A1,#0-(ESKE-ESKB)
0000A094  2F49 001E               4598           MOVE.L  A1,LINK(A7)    SAVE LINKAGE
0000A098  224F                    4599           MOVE.L  A7,A1          A1 = BASE REGISTER TO DATA
0000A09A                          4600  
0000A09A  1CBC 0020               4601           MOVE.B  #BLANK,(A6)    INSURE LAST CHAR IS SPACE
0000A09E                          4602  
0000A09E  204B                    4603           MOVE.L  A3,A0
0000A0A0  704F                    4604           MOVEQ   #OUTBSIZE-1,D0
0000A0A2  10FC 0020               4605  M300     MOVE.B  #BLANK,(A0)+   SPACE FILL BUFFER
0000A0A6  51C8 FFFA               4606           DBRA    D0,M300
0000A0AA  5588                    4607           SUBQ.L  #2,A0
0000A0AC  2348 001A               4608           MOVE.L  A0,PTRBUFE(A1) PTR TO END OF BUFFER
0000A0B0                          4609  
0000A0B0  234C 000E               4610           MOVE.L  A4,PCOUNTER(A1)  FORMAT PC
0000A0B4  280C                    4611           MOVE.L  A4,D4          D4 = P-COUNTER
0000A0B6  200C                    4612           MOVE.L  A4,D0
0000A0B8                          4613  
0000A0B8  2F0E                    4614           MOVE.L  A6,-(A7)       SAVE A6
0000A0BA  2C4B                    4615           MOVE.L  A3,A6
0000A0BC  6100 F548               4616           BSR     FRELADDR       FORM RELATIVE ADDRESS
0000A0C0  2C5F                    4617           MOVE.L  (A7)+,A6       RESTORE A6
0000A0C2                          4618  
0000A0C2  7E01                    4619           MOVEQ   #1,D7          POSSIBLE ERROR CODE
0000A0C4  200C                    4620           MOVE.L  A4,D0
0000A0C6  E298                    4621           ROR.L   #1,D0
0000A0C8  6B00 0140               4622           BMI     ERDONE         PC ODD ADDRESS
0000A0CC                          4623  
0000A0CC  7E1F                    4624           MOVEQ   #FOL,D7        POSSIBLE ERROR CODE
0000A0CE  0C1D 0020               4625           CMPI.B  #BLANK,(A5)+
0000A0D2  6600 0136               4626           BNE     ERDONE         1ST CHAR NOT SPACE
0000A0D6                          4627  
0000A0D6  137C 0002 000A          4628           MOVE.B  #2,TNB(A1)     INZ # OF BYTES
0000A0DC  337C 0040 000C          4629           MOVE.W  #$40,TLENGTH(A1)  SIZE = .W (DEFAULT)
0000A0E2  4229 000B               4630           CLR.B   TLSPEC(A1)     DEFAULT (SIZE NOT SPECIFIED)
0000A0E6                          4631  
0000A0E6  204B                    4632           MOVE.L  A3,A0          A0 = STORE ADDRESS
0000A0E8  D1FC 0000001F           4633           ADD.L   #FOC,A0
0000A0EE                          4634  
0000A0EE  6100 010C               4635  M340     BSR     GETCHARF       GET PAST SPACES
0000A0F2  0C00 0020               4636           CMPI.B  #BLANK,D0
0000A0F6  67F6                    4637           BEQ     M340
0000A0F8                          4638  
0000A0F8  538D                    4639           SUBQ.L  #1,A5          FORMAT OP-CODE
0000A0FA  6100 0100               4640  M350     BSR     GETCHARF
0000A0FE  10C0                    4641           MOVE.B  D0,(A0)+
0000A100  0C00 002E               4642           CMPI.B  #'.',D0
0000A104  6628                    4643           BNE.S   M352
0000A106                          4644  
0000A106  1355 000B               4645           MOVE.B  (A5),TLSPEC(A1)  NOT DEFAULT
0000A10A  0C15 0057               4646           CMPI.B  #'W',(A5)
0000A10E  671E                    4647           BEQ.S   M352
0000A110  0C15 0053               4648           CMPI.B  #'S',(A5)
0000A114  6718                    4649           BEQ.S   M352           .SHORT = .WORD
0000A116  4269 000C               4650           CLR.W   TLENGTH(A1)
0000A11A  0C15 0042               4651           CMPI.B  #'B',(A5)
0000A11E  670E                    4652           BEQ.S   M352           SIZE = .W
0000A120  337C 0080 000C          4653           MOVE.W  #$80,TLENGTH(A1)
0000A126  0C15 004C               4654           CMPI.B  #'L',(A5)
0000A12A  6600 00D8               4655           BNE     ERF
0000A12E                          4656  
0000A12E  0C00 0020               4657  M352     CMPI.B  #BLANK,D0
0000A132  66C6                    4658           BNE     M350           NOT SPACE CONTINUE
0000A134                          4659  
0000A134                          4660  * SEARCH OP-CODE TABLE
0000A134  41FA FC56               4661           LEA     TBLOPC(PC),A0  A0 = PTR TO TABLE OF CODES
0000A138  244B                    4662  M410     MOVE.L  A3,A2          A3 = START OF STORE BUFFER
0000A13A  D5FC 0000001F           4663           ADD.L   #FOC,A2        A2 = PTR TO OP-CODE JUST FORMATTED
0000A140                          4664  
0000A140  1018                    4665  M415     MOVE.B  (A0)+,D0       XXXXXXDD
0000A142  4880                    4666           EXT.W   D0             XXXXSSDD  SIGN EXTENDED
0000A144  0200 007F               4667           ANDI.B  #$7F,D0
0000A148  B01A                    4668           CMP.B   (A2)+,D0
0000A14A  6606                    4669           BNE.S   M420           NON-MATCH
0000A14C  4A40                    4670           TST.W   D0
0000A14E  6AF0                    4671           BPL     M415           SIGN RESET; CONTINUE
0000A150  6018                    4672           BRA.S   M430           MATCH COMPLETE
0000A152                          4673  
0000A152  4A40                    4674  M420     TST.W   D0             SEQUENCE TO NEXT CODE
0000A154  6B04                    4675           BMI.S   M426
0000A156  1018                    4676  M424     MOVE.B  (A0)+,D0
0000A158  6AFC                    4677           BPL     M424           FINISH THIS OP-CODE
0000A15A  5688                    4678  M426     ADDQ.L  #3,A0          ADJUST PTR TO TABLE
0000A15C  45FA FF32               4679           LEA     TBLOPCE(PC),A2
0000A160  B5C8                    4680           CMP.L   A0,A2
0000A162  66D4                    4681           BNE     M410
0000A164                          4682  
0000A164  7E1F                    4683  M428     MOVEQ   #FOC,D7        ERROR CODE
0000A166  6000 00A2               4684           BRA     ERDONE
0000A16A                          4685  
0000A16A                          4686  * GET GOTO INDEX
0000A16A                          4687  * GET FIRST WORD MASK
0000A16A  1012                    4688  M430     MOVE.B  (A2),D0        MUST TERMINATE OP-CODE
0000A16C  0C00 0020               4689           CMPI.B  #BLANK,D0        WITH SPACE OR PERIOD
0000A170  6706                    4690           BEQ.S   M432
0000A172  0C00 002E               4691           CMPI.B  #'.',D0
0000A176  66EC                    4692           BNE     M428           ERROR
0000A178                          4693  M432
0000A178                          4694  
0000A178  4280                    4695           CLR.L   D0
0000A17A  1018                    4696           MOVE.B  (A0)+,D0       D0 =  KEYS  INDEX
0000A17C  1200                    4697           MOVE.B  D0,D1          D1 =  KEYS (INDEX)
0000A17E  0200 003F               4698           ANDI.B  #$3F,D0        D0 =        INDEX
0000A182  E380                    4699           ASL.L   #1,D0          INDEX * TWO
0000A184  1418                    4700           MOVE.B  (A0)+,D2
0000A186  E14A                    4701           LSL.W   #8,D2
0000A188  1418                    4702           MOVE.B  (A0)+,D2       D2 = FIRST WORD MASK
0000A18A  3282                    4703           MOVE.W  D2,(A1)        *D2,TDATA(A1)
0000A18C                          4704  
0000A18C                          4705  * INSURE .S .W MATCH OP-CODE
0000A18C                          4706  
0000A18C  1629 000B               4707           MOVE.B  TLSPEC(A1),D3  D3 = .n SPECIFIED
0000A190  671A                    4708           BEQ.S   M4326          NOT SPECIFIED
0000A192  0801 0006               4709           BTST    #6,D1
0000A196  670E                    4710           BEQ.S   M4324          .W ALLOWED (.S NOT ALLOWED)
0000A198  0C03 0057               4711           CMPI.B  #'W',D3
0000A19C  67C6                    4712           BEQ     M428           .W NOT ALLOWED
0000A19E  0C03 0042               4713           CMPI.B  #'B',D3
0000A1A2  67C0                    4714           BEQ     M428           .B NOT ALLOWED
0000A1A4  6006                    4715           BRA.S   M4326
0000A1A6                          4716  
0000A1A6  0C03 0053               4717  M4324    CMPI.B  #'S',D3
0000A1AA  67B8                    4718           BEQ     M428           .S NOT ALLOWED
0000A1AC                          4719  M4326
0000A1AC                          4720  
0000A1AC                          4721  * CALCULATE GOTO ADDRESS
0000A1AC                          4722  
0000A1AC  41FA FB92               4723           LEA     TBLKEYS(PC),A0 A0 = PTR TO KEYS
0000A1B0  3030 0000               4724           MOVE.W  (A0,D0),D0     D0 = 16 BIT OFFSET
0000A1B4  45FA F880               4725           LEA     XBASE(PC),A2   A2 = BASE ADDRESS
0000A1B8  D5C0                    4726           ADD.L   D0,A2          A2 = COMPUTED GO TO  ADDRESS
0000A1BA                          4727  
0000A1BA                          4728  * FORMAT OPERAND IF REGUIRED
0000A1BA                          4729  
0000A1BA  4A01                    4730           TST.B   D1             LOOK AT KEY
0000A1BC  6B22                    4731           BMI.S   M440           OPERAND NOT REQUIRED
0000A1BE                          4732  
0000A1BE  204B                    4733           MOVE.L  A3,A0
0000A1C0  D1FC 00000027           4734           ADD.L   #FOP,A0        STORE POINTER
0000A1C6  2348 0012               4735           MOVE.L  A0,PTROP(A1)   POINTER TO OPERAND (FORMATED)
0000A1CA  6130                    4736  M435     BSR.S   GETCHARF       D0 = CHAR
0000A1CC  0C00 0020               4737           CMPI.B  #BLANK,D0
0000A1D0  67F8                    4738           BEQ     M435           SKIP SPACES
0000A1D2                          4739  
0000A1D2  10C0                    4740  M437     MOVE.B  D0,(A0)+       MOVE REST OF SOURCE LINE
0000A1D4  6126                    4741           BSR.S   GETCHARF       D0 = CHAR
0000A1D6  BDCD                    4742           CMP.L   A5,A6
0000A1D8  6AF8                    4743           BPL     M437
0000A1DA  2348 001A               4744           MOVE.L  A0,PTRBUFE(A1) POINTER TO END FORMATED SOURCE
0000A1DE  2C48                    4745           MOVE.L  A0,A6          A6 = POINTER TO END OF SOURCE
0000A1E0                          4746  M440
0000A1E0                          4747  
0000A1E0  2A69 0012               4748           MOVE.L  PTROP(A1),A5   A5 = PTR TO OPERAND
0000A1E4  49E9 0002               4749           LEA     TDATA+2(A1),A4 A4 = BASE ADDR FOR DATA STORE
0000A1E8  4283                    4750           CLR.L   D3             D3 = OFFSET FOR DATA STORE
0000A1EA  4ED2                    4751           JMP     (A2)           GOTO ROUTINE
0000A1EC                          4752  *                               D2 = MASK
0000A1EC                          4753  *                               D4 = P-COUNTER
0000A1EC                          4754  
0000A1EC  0C1D 002C               4755  COMMA    CMPI.B  #',',(A5)+
0000A1F0  6614                    4756           BNE.S   ER             NOT COMMA
0000A1F2  4E75                    4757           RTS
0000A1F4                          4758  
0000A1F4  BDCD                    4759  GETCHAR  CMP.L   A5,A6
0000A1F6  6B0E                    4760           BMI.S   ER
0000A1F8  101D                    4761           MOVE.B  (A5)+,D0
0000A1FA  4E75                    4762           RTS
0000A1FC                          4763  
0000A1FC  BDCD                    4764  GETCHARF CMP.L   A5,A6
0000A1FE  6B04                    4765           BMI.S   ERF
0000A200  101D                    4766           MOVE.B  (A5)+,D0
0000A202  4E75                    4767           RTS
0000A204                          4768  
0000A204  2A48                    4769  ERF      MOVE.L  A0,A5
0000A206                          4770  
0000A206  2E0D                    4771  ER       MOVE.L  A5,D7          D7 = ERROR FLAG
0000A208  9E8B                    4772           SUB.L   A3,D7          ..& POSITION OF ERROR
0000A20A  4286                    4773  ERDONE   CLR.L   D6             D6 = (ZERO) BYTE COUNT
0000A20C  6024                    4774           BRA.S   CMMD35
0000A20E                          4775  
0000A20E  0C15 0020               4776  CMMD2    CMPI.B  #BLANK,(A5)
0000A212  66F2                    4777           BNE     ER             OPERAND DID NOT END WITH SPACE
0000A214                          4778  
0000A214                          4779  MCMMD2   DS      0              NO OPERAND SEQUENCE
0000A214  3282                    4780           MOVE.W  D2,(A1)        *D2,TDATA(A1)
0000A216                          4781  
0000A216  1629 000A               4782           MOVE.B  TNB(A1),D3     FORMAT DATA
0000A21A  2C03                    4783           MOVE.L  D3,D6          D7 = NUMBER OF BYTES
0000A21C  45D1                    4784           LEA     (A1),A2        A2 = PTR TO HEX DATA  *TDATA(A1),A2
0000A21E  2C4B                    4785           MOVE.L  A3,A6          D3 = NUMBER OF BYTES
0000A220  DDFC 0000000A           4786           ADD.L   #FDATA,A6      A6 = STORE PTR
0000A226  101A                    4787  FPR315   MOVE.B  (A2)+,D0
0000A228  6100 F3C0               4788           BSR     PNT2HX
0000A22C  5383                    4789           SUBQ.L  #1,D3
0000A22E  66F6                    4790           BNE     FPR315         MORE BYTES
0000A230                          4791  
0000A230  4287                    4792           CLR.L   D7             RESET ERROR FLAG
0000A232                          4793  
0000A232  4CD1 0007               4794  CMMD35   MOVEM.L (A1),D0-D2       D0-D2 = DATA   *TDATA(A1),D0-D2
0000A236                          4795  
0000A236  2C69 001A               4796           MOVE.L  PTRBUFE(A1),A6   A6 = POINTER TO END OF BUFFER
0000A23A                          4797  
0000A23A  2869 000E               4798           MOVE.L  PCOUNTER(A1),A4  A4 = ORGINAL PC
0000A23E                          4799  
0000A23E  2269 001E               4800           MOVE.L  LINK(A1),A1
0000A242  4E59                    4801           UNLK    A1
0000A244  4E75                    4802           RTS                    RETURN TO REQUESTOR
0000A246                          4803  *                               A3 = POINTER TO START OF BUFFER
0000A246                          4804  *                               D6 = NUMBER OF BYTES ASSEMBLED
0000A246                          4805  *                               D7 = ERROR FLAG (POSITION)
0000A246                          4806  
0000A246                          4807  
0000A246                          4808  *  SIZE = BYTE
0000A246                          4809  *    DY,DX
0000A246                          4810  *    -(AY),-(AX)
0000A246                          4811  *    ....RX@.SS...RY@
0000A246                          4812  MABCD    DS      0              (INDEX 0) ABCD SBCD
0000A246  4A29 000B               4813           TST.B   TLSPEC(A1)
0000A24A  6708                    4814           BEQ.S   MABCD9         DEFAULT SIZE = BYTE
0000A24C  0C69 0000 000C          4815           CMPI.W  #$00,TLENGTH(A1)
0000A252  66B2                    4816           BNE     ER             NOT .B
0000A254                          4817  MABCD9
0000A254                          4818  
0000A254  3E3C 0011               4819           MOVE.W  #$11,D7
0000A258  6100 F84A               4820           BSR     EA
0000A25C                          4821  
0000A25C  618E                    4822           BSR     COMMA
0000A25E                          4823  
0000A25E  2006                    4824           MOVE.L  D6,D0
0000A260  0240 0007               4825           ANDI.W  #7,D0
0000A264  8440                    4826           OR.W    D0,D2
0000A266                          4827  
0000A266  0806 0005               4828           BTST    #5,D6
0000A26A  6716                    4829           BEQ.S   MABCD55        D@,D@ MODE
0000A26C                          4830  
0000A26C  0042 0008               4831           ORI.W   #$0008,D2      -(A@),-(A@) MODE
0000A270                          4832  
0000A270  3E3C 0010               4833           MOVE.W  #$10,D7
0000A274  6100 F82E               4834           BSR     EA
0000A278                          4835  
0000A278  0246 0007               4836           ANDI.W  #7,D6
0000A27C  EE5E                    4837           ROR.W   #7,D6
0000A27E  8446                    4838           OR.W    D6,D2
0000A280  608C                    4839           BRA     CMMD2
0000A282                          4840  
0000A282  6100 F7B8               4841  MABCD55  BSR     GETREGD        D@,D@
0000A286  EE58                    4842           ROR.W   #7,D0
0000A288  8440                    4843           OR.W    D0,D2
0000A28A  6082                    4844  CMMD2S10 BRA     CMMD2
0000A28C                          4845  
0000A28C                          4846  
0000A28C                          4847  MCMP     DS      0              (INDEX 34)
0000A28C  6100 F812               4848           BSR     EAALL
0000A290  2806                    4849           MOVE.L  D6,D4          D4 = SOURCE MODE
0000A292                          4850  
0000A292  6166                    4851           BSR.S   COMMAS20
0000A294                          4852  
0000A294  0C15 0041               4853           CMPI.B  #'A',(A5)
0000A298  6700 0116               4854           BEQ     MADDA21        DESTINATION = A@
0000A29C                          4855  
0000A29C  0C04 003C               4856           CMPI.B  #$3C,D4
0000A2A0  6748                    4857           BEQ.S   MCMP56         SOURCE  ....I  #<DATA>,...
0000A2A2                          4858  
0000A2A2  6100 F792               4859           BSR     FSIZE
0000A2A6                          4860  
0000A2A6  3E3C 0009               4861           MOVE.W  #$009,D7
0000A2AA  6100 F7F8               4862           BSR     EA             D@ + (A@)+
0000A2AE  2006                    4863           MOVE.L  D6,D0          MMMRRR
0000A2B0  0240 0038               4864           ANDI.W  #$38,D0        MMM...
0000A2B4                          4865  
0000A2B4  672C                    4866           BEQ.S   MCMP39         DESTINATION  D@
0000A2B6                          4867  
0000A2B6  0C00 0018               4868           CMPI.B  #$18,D0
0000A2BA  6600 FF4A               4869           BNE     ER
0000A2BE                          4870  
0000A2BE  0246 000F               4871           ANDI.W  #$F,D6         (AY)+,(AX)+
0000A2C2  EE5E                    4872           ROR.W   #7,D6
0000A2C4  8446                    4873           OR.W    D6,D2          ....AX@.........
0000A2C6  0042 0100               4874           ORI.W   #$0100,D2      ...1AX@.........
0000A2CA                          4875  
0000A2CA  2004                    4876           MOVE.L  D4,D0
0000A2CC  0240 0038               4877           ANDI.W  #$38,D0
0000A2D0  0C40 0018               4878           CMPI.W  #$18,D0
0000A2D4  6600 FF30               4879           BNE     ER             NOT (A@)+
0000A2D8  0244 000F               4880           ANDI.W  #$F,D4         ............1AY@
0000A2DC  8444                    4881           OR.W    D4,D2
0000A2DE  6000 FF2E               4882           BRA     CMMD2
0000A2E2                          4883  
0000A2E2                          4884  *  <EA>,D@
0000A2E2  EE5E                    4885  MCMP39   ROR.W   #7,D6
0000A2E4  8446                    4886           OR.W    D6,D2
0000A2E6                          4887  
0000A2E6  8444                    4888           OR.W    D4,D2
0000A2E8  600E                    4889           BRA.S   CMMD2S11
0000A2EA                          4890  
0000A2EA  343C 0C00               4891  MCMP56   MOVE.W  #$0C00,D2      #<DATA>,<EA>      MASK = CMPI
0000A2EE                          4892  
0000A2EE  6100 F746               4893           BSR     FSIZE
0000A2F2                          4894  
0000A2F2  6100 F788               4895           BSR     EADA
0000A2F6  8446                    4896           OR.W    D6,D2
0000A2F8  6090                    4897  CMMD2S11 BRA     CMMD2S10
0000A2FA                          4898  
0000A2FA  6000 FEF0               4899  COMMAS20 BRA     COMMA
0000A2FE                          4900  
0000A2FE                          4901  MADD     DS      0              (INDEX 1)
0000A2FE  6100 F7A0               4902           BSR     EAALL
0000A302  2806                    4903           MOVE.L  D6,D4          D4 = SOURCE MODE
0000A304                          4904  
0000A304  61F4                    4905           BSR     COMMAS20
0000A306                          4906  
0000A306  0C15 0041               4907           CMPI.B  #'A',(A5)
0000A30A  6700 00A4               4908           BEQ     MADDA21        DESTINATION = A@
0000A30E                          4909  
0000A30E  0C04 003C               4910           CMPI.B  #$3C,D4
0000A312  6728                    4911           BEQ.S   MADD56         SOURCE  ....I  #<DATA>,...
0000A314                          4912  
0000A314  6100 F720               4913           BSR     FSIZE
0000A318                          4914  
0000A318  3E3C 01FF               4915           MOVE.W  #$1FF,D7
0000A31C  6100 F786               4916           BSR     EA             ALTERABLE + D@
0000A320  2006                    4917           MOVE.L  D6,D0          MMMRRR
0000A322  0240 0038               4918           ANDI.W  #$38,D0        MMM...
0000A326  6608                    4919           BNE.S   MADD46         DESTINATION NOT  D@
0000A328                          4920  
0000A328                          4921  *  <EA>,D@
0000A328  EE5E                    4922           ROR.W   #7,D6
0000A32A  8446                    4923           OR.W    D6,D2
0000A32C                          4924  
0000A32C  8444                    4925           OR.W    D4,D2
0000A32E  60C8                    4926           BRA     CMMD2S11
0000A330                          4927  
0000A330                          4928  MADD46   DS      0              D@,<EA>
0000A330  0042 0100               4929           ORI.W   #$100,D2
0000A334                          4930  
0000A334  EE5C                    4931           ROR.W   #7,D4
0000A336  8444                    4932           OR.W    D4,D2          <EA> AS DESTINATION
0000A338                          4933  
0000A338  8446                    4934           OR.W    D6,D2          D@  AS SOURCE
0000A33A  60BC                    4935           BRA     CMMD2S11
0000A33C                          4936  
0000A33C  2002                    4937  MADD56   MOVE.L  D2,D0          #<DATA>,<EA>
0000A33E  343C 0600               4938           MOVE.W  #$0600,D2      MASK = ADDI
0000A342                          4939  
0000A342  0C40 D000               4940           CMPI.W  #$D000,D0
0000A346  6704                    4941           BEQ.S   MADD58
0000A348  343C 0400               4942           MOVE.W  #$400,D2       MASK = SUBI
0000A34C                          4943  MADD58
0000A34C                          4944  
0000A34C  6100 F6E8               4945           BSR     FSIZE
0000A350                          4946  
0000A350  6100 F72A               4947           BSR     EADA           DATA ALTERABLE ONLY
0000A354  8446                    4948           OR.W    D6,D2
0000A356  60A0                    4949           BRA     CMMD2S11
0000A358                          4950  
0000A358  2A69 0012               4951  MADDI    MOVE.L  PTROP(A1),A5   (INDEX 3) CMPI
0000A35C  6100 F6D8               4952           BSR     FSIZE
0000A360                          4953  
0000A360  6100 F72C               4954           BSR     EAZ
0000A364                          4955  
0000A364  6194                    4956           BSR     COMMAS20
0000A366                          4957  
0000A366  6100 F714               4958           BSR     EADA           DATA ALTERABLE ONLY
0000A36A  8446                    4959           OR.W    D6,D2
0000A36C  608A                    4960           BRA     CMMD2S11
0000A36E                          4961  
0000A36E                          4962  *  SIZE =  BYTE, WORD, LONG
0000A36E                          4963  *  #<DATA>,SR
0000A36E                          4964  *  #<DATA>,<EA>    DATA ALTERABLE ONLY
0000A36E                          4965  MANDI    DS      0              (INDEX 28) ANDI EORI ORI
0000A36E  6100 F6C6               4966           BSR     FSIZE
0000A372                          4967  
0000A372  6100 F71A               4968           BSR     EAZ
0000A376                          4969  
0000A376  6182                    4970           BSR     COMMAS20
0000A378                          4971  
0000A378  0C15 0053               4972           CMPI.B  #'S',(A5)
0000A37C  670A                    4973           BEQ.S   MANDI23
0000A37E                          4974  
0000A37E  6100 F6FC               4975           BSR     EADA
0000A382  8446                    4976           OR.W    D6,D2
0000A384  6000 FF72               4977           BRA     CMMD2S11
0000A388                          4978  
0000A388  0C2D 0052 0001          4979  MANDI23  CMPI.B  #'R',1(A5)     #<DATA>,SR
0000A38E  6600 FE76               4980           BNE     ER
0000A392  0C69 0080 000C          4981           CMPI.W  #$0080,TLENGTH(A1)
0000A398  6700 FE6C               4982           BEQ     ER             .L NOT ALLOWED WITH SR
0000A39C  0042 003C               4983           ORI.W   #$003C,D2
0000A3A0  548D                    4984           ADDQ.L  #2,A5          POINTER TO END OF OPERAND
0000A3A2  6000 FE6A               4985           BRA     CMMD2
0000A3A6                          4986  
0000A3A6                          4987  MADDA    DS      0              (INDEX 2)
0000A3A6  6100 F6F8               4988           BSR     EAALL
0000A3AA  8446                    4989           OR.W    D6,D2
0000A3AC                          4990  
0000A3AC  6100 FE3E               4991           BSR     COMMA
0000A3B0                          4992  
0000A3B0  8446                    4993  MADDA21  OR.W    D6,D2
0000A3B2  3029 000C               4994           MOVE.W  TLENGTH(A1),D0
0000A3B6  6700 FE4E               4995           BEQ     ER             .BYTE NOT ALLOWED
0000A3BA  E348                    4996           LSL.W   #1,D0          .W = 011......
0000A3BC  0040 00C0               4997           ORI.W   #$00C0,D0      .L = 111......
0000A3C0  8440                    4998           OR.W    D0,D2
0000A3C2                          4999  
0000A3C2  6100 F692               5000           BSR     GETREGA
0000A3C6  EE58                    5001           ROR.W   #7,D0
0000A3C8  8440                    5002           OR.W    D0,D2
0000A3CA  6000 FE42               5003           BRA     CMMD2
0000A3CE                          5004  
0000A3CE                          5005  MADDQ    DS      0              (INDEX 4)
0000A3CE  6100 F666               5006           BSR     FSIZE
0000A3D2                          5007  
0000A3D2  6100 0682               5008           BSR     GETIMM
0000A3D6                          5009  
0000A3D6  4A80                    5010           TST.L   D0
0000A3D8  6700 FE2C               5011           BEQ     ER             DATA = ZERO
0000A3DC  0C00 0009               5012           CMPI.B  #9,D0
0000A3E0  6A00 FE24               5013           BPL     ER             VALUE TOO BIG
0000A3E4  0240 0007               5014           ANDI.W  #$7,D0         MAKE 8 = 0
0000A3E8  EE58                    5015           ROR.W   #7,D0          SHIFT DATA TO BITS 9-11
0000A3EA  8440                    5016           OR.W    D0,D2
0000A3EC                          5017  
0000A3EC  6100 FDFE               5018           BSR     COMMA
0000A3F0                          5019  
0000A3F0  6100 F6A8               5020           BSR     EAA            ALTERABLE ADDRESSING
0000A3F4                          5021  
0000A3F4  8446                    5022           OR.W    D6,D2
0000A3F6  2002                    5023           MOVE.L  D2,D0
0000A3F8  0240 00C0               5024           ANDI.W  #$C0,D0
0000A3FC  660E                    5025           BNE.S   MADDQ25
0000A3FE                          5026  
0000A3FE                          5027  * BYTE SIZE; ADDRESS REGISTER DIRECT NOT ALLOWED
0000A3FE  2002                    5028           MOVE.L  D2,D0
0000A400  0240 0038               5029           ANDI.W  #$38,D0
0000A404  0C00 0008               5030           CMPI.B  #$08,D0
0000A408  6700 FDFC               5031           BEQ     ER
0000A40C  6000 FE00               5032  MADDQ25  BRA     CMMD2
0000A410                          5033  
0000A410                          5034  * SIZE = BYTE, WORD, LONG
0000A410                          5035  *    DY,DX
0000A410                          5036  *    -(AY),-(AX)
0000A410                          5037  *    ....RX@.SS...RY@
0000A410                          5038  MADDX    DS      0              (INDEX 5)
0000A410  6100 F624               5039           BSR     FSIZE
0000A414                          5040  
0000A414  3E3C 0011               5041           MOVE.W  #$11,D7
0000A418  6100 F68A               5042           BSR     EA
0000A41C                          5043  
0000A41C  6100 FDCE               5044           BSR     COMMA
0000A420                          5045  
0000A420  2006                    5046           MOVE.L  D6,D0
0000A422  0240 0007               5047           ANDI.W  #7,D0
0000A426  8440                    5048           OR.W    D0,D2
0000A428                          5049  
0000A428  0806 0005               5050           BTST    #5,D6
0000A42C  6718                    5051           BEQ.S   MADDX5         D@,D@ MODE
0000A42E                          5052  
0000A42E  0042 0008               5053           ORI.W   #$0008,D2      -(A@),-(A@) MODE
0000A432                          5054  
0000A432  3E3C 0010               5055           MOVE.W  #$10,D7
0000A436  6100 F66C               5056           BSR     EA
0000A43A                          5057  
0000A43A  0246 0007               5058           ANDI.W  #7,D6
0000A43E  EE5E                    5059           ROR.W   #7,D6
0000A440  8446                    5060           OR.W    D6,D2
0000A442  6000 FDCA               5061           BRA     CMMD2
0000A446                          5062  
0000A446  6100 F5F4               5063  MADDX5   BSR     GETREGD        D@,D@
0000A44A  EE58                    5064           ROR.W   #7,D0
0000A44C  8440                    5065           OR.W    D0,D2
0000A44E  6000 FDBE               5066           BRA     CMMD2
0000A452                          5067  
0000A452                          5068  *  SIZE = BYTE, WORD, LONG
0000A452                          5069  *         <EA>,D@
0000A452                          5070  *         D@,<EA>
0000A452  6100 F5E2               5071  MAND     BSR     FSIZE          (INDEX 6)
0000A456                          5072  
0000A456  0C15 0023               5073           CMPI.B  #'#',(A5)
0000A45A  6740                    5074           BEQ.S   MAND90
0000A45C                          5075  
0000A45C  6100 0082               5076           BSR     A5TODEST       MOVE A5 TO DESTINATION
0000A460                          5077  
0000A460  1015                    5078           MOVE.B  (A5),D0        D0 = 1ST CHAR OF DESTINATION
0000A462  2A69 0012               5079           MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
0000A466  0C00 0044               5080           CMPI.B  #'D',D0
0000A46A  671A                    5081           BEQ.S   MAND77
0000A46C                          5082  
0000A46C  0042 0100               5083           ORI.W   #$0100,D2       D@,<EA>
0000A470                          5084  
0000A470  6100 F5CA               5085           BSR     GETREGD
0000A474  EE58                    5086           ROR.W   #7,D0
0000A476  8440                    5087           OR.W    D0,D2
0000A478                          5088  
0000A478  6100 FD72               5089           BSR     COMMA
0000A47C                          5090  
0000A47C  6100 F60A               5091           BSR     EAM            ALTERABLE MEMORY
0000A480  8446                    5092           OR.W    D6,D2
0000A482  6000 FD8A               5093           BRA     CMMD2
0000A486                          5094  
0000A486  6100 F60C               5095  MAND77   BSR     EADADDR        <EA>,D@
0000A48A  8446                    5096           OR.W    D6,D2
0000A48C                          5097  
0000A48C  6100 FD5E               5098           BSR     COMMA
0000A490                          5099  
0000A490  6100 F5AA               5100           BSR     GETREGD
0000A494  EE58                    5101           ROR.W   #7,D0
0000A496  8440                    5102           OR.W    D0,D2
0000A498  6000 FD74               5103           BRA     CMMD2
0000A49C                          5104  
0000A49C  0242 F000               5105  MAND90   ANDI.W  #$F000,D2
0000A4A0  0C42 C000               5106           CMPI.W  #$C000,D2
0000A4A4  6708                    5107           BEQ.S   MAND97          AND
0000A4A6  343C 0000               5108           MOVE.W  #$0000,D2      CHANGE TO "ORI"
0000A4AA  6000 FEC2               5109  MAND91   BRA     MANDI
0000A4AE  343C 0200               5110  MAND97   MOVE.W  #$0200,D2      CHANGE TO "ADDI"
0000A4B2  60F6                    5111           BRA     MAND91
0000A4B4                          5112  
0000A4B4  6100 F580               5113  MEOR     BSR     FSIZE          (INDEX 35)
0000A4B8                          5114  
0000A4B8  0C15 0023               5115           CMPI.B  #'#',(A5)
0000A4BC  6716                    5116           BEQ.S   MEOR90
0000A4BE                          5117  
0000A4BE  6100 F57C               5118           BSR     GETREGD
0000A4C2  EE58                    5119           ROR.W   #7,D0
0000A4C4  8440                    5120           OR.W    D0,D2
0000A4C6                          5121  
0000A4C6  6100 FD24               5122           BSR     COMMA
0000A4CA                          5123  
0000A4CA  6100 F5B0               5124           BSR     EADA           DATA ALTERABLE ADDRESSING
0000A4CE  8446                    5125           OR.W    D6,D2
0000A4D0  6000 FD3C               5126           BRA     CMMD2
0000A4D4                          5127  
0000A4D4  2A69 0012               5128  MEOR90   MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
0000A4D8  343C 0A00               5129           MOVE.W  #$0A00,D2      CHANGE TO "EORI"
0000A4DC  6000 FE90               5130           BRA     MANDI
0000A4E0                          5131  
0000A4E0  4281                    5132  A5TODEST CLR.L   D1             MOVE A5 TO DESTINATION
0000A4E2  6100 FD10               5133  A5300    BSR     GETCHAR
0000A4E6  0C00 0028               5134           CMPI.B  #'(',D0
0000A4EA  6602                    5135           BNE.S   A5305
0000A4EC  2200                    5136           MOVE.L  D0,D1
0000A4EE  0C00 0029               5137  A5305    CMPI.B  #')',D0
0000A4F2  67EC                    5138           BEQ     A5TODEST
0000A4F4  0C00 002C               5139           CMPI.B  #',',D0
0000A4F8  66E8                    5140           BNE     A5300
0000A4FA  4A41                    5141           TST     D1
0000A4FC  66E4                    5142           BNE     A5300
0000A4FE  4E75                    5143           RTS
0000A500                          5144  
0000A500                          5145  MASL     DS      0              (INDEX 7)
0000A500                          5146  
0000A500                          5147  *         ASL     LSL     ROL     ROXL
0000A500                          5148  *  MASKS  E000    E008    E018    E010
0000A500                          5149  *         E0C0    E2C0    E6C0    E4C0   SHIFT MEMORY
0000A500                          5150  
0000A500  6100 F534               5151           BSR     FSIZE
0000A504                          5152  
0000A504  101D                    5153           MOVE.B  (A5)+,D0
0000A506  0C00 0023               5154           CMPI.B  #'#',D0
0000A50A  6628                    5155           BNE.S   MSL200
0000A50C                          5156  
0000A50C                          5157  *  #<COUNT>,D@
0000A50C  6100 F4BE               5158           BSR     EV
0000A510  0C80 00000008           5159           CMPI.L  #8,D0
0000A516  6E00 FCEE               5160           BGT     ER             GREATER THAN 8
0000A51A                          5161  
0000A51A  0200 0007               5162           ANDI.B  #$7,D0         MAKE 8 INTO 0
0000A51E  EE58                    5163  MSL150   ROR.W   #7,D0
0000A520  0242 F1FF               5164           ANDI.W  #$F1FF,D2
0000A524  8440                    5165           OR.W    D0,D2          COUNT/REG
0000A526                          5166  
0000A526  6100 FCC4               5167           BSR     COMMA
0000A52A                          5168  
0000A52A  6100 F510               5169           BSR     GETREGD
0000A52E  8440                    5170           OR.W    D0,D2
0000A530  6000 FCDC               5171           BRA     CMMD2
0000A534                          5172  
0000A534                          5173  MSL200   DS      0              D@,D@
0000A534  0C00 0044               5174           CMPI.B  #'D',D0
0000A538  660C                    5175           BNE.S   MSL300
0000A53A                          5176  
0000A53A                          5177  *        D@,D@
0000A53A  0042 0020               5178           ORI.W   #$20,D2
0000A53E  538D                    5179           SUBQ.L  #1,A5
0000A540  6100 F4FA               5180           BSR     GETREGD
0000A544  60D8                    5181           BRA     MSL150
0000A546                          5182  
0000A546                          5183  MSL300   DS      0              <EA>      SHIFT MEMORY
0000A546  538D                    5184           SUBQ.L  #1,A5
0000A548  0042 00C0               5185           ORI.W   #$00C0,D2      SIZE = MEMORY
0000A54C                          5186  
0000A54C  0242 FFC0               5187           ANDI.W  #$FFC0,D2      REMOVE "SHIFT MEMORY" BITS
0000A550                          5188  
0000A550  0C69 0040 000C          5189           CMPI.W  #$0040,TLENGTH(A1)
0000A556  6658                    5190           BNE.S   ER2            NOT .WORD
0000A558                          5191  
0000A558  6100 F52E               5192           BSR     EAM
0000A55C  8446                    5193           OR.W    D6,D2
0000A55E  6000 FCAE               5194           BRA     CMMD2
0000A562                          5195  
0000A562  6100 0334               5196  MSCC     BSR     SIZEBYTE       (INDEX 29) NBCD SCC TAS
0000A566                          5197  
0000A566  6100 F514               5198           BSR     EADA           DATA ALTERABLE ONLY
0000A56A  8446                    5199           OR.W    D6,D2
0000A56C  6000 FCA0               5200           BRA     CMMD2
0000A570                          5201  
0000A570                          5202  MBCHG    DS      0              (9)
0000A570  0C15 0023               5203           CMPI.B  #'#',(A5)
0000A574  6648                    5204           BNE.S   MB200
0000A576                          5205  
0000A576  343C 0840               5206           MOVE.W  #$0840,D2      NEW OP-CODE MASK
0000A57A                          5207  
0000A57A  528D                    5208  MB100    ADDQ.L  #1,A5
0000A57C  6100 F44E               5209           BSR     EV             EVALUATE EXPRESSION
0000A580  0C80 00000021           5210           CMPI.L  #33,D0
0000A586  6E28                    5211           BGT.S   ER2            (MODULO 32)
0000A588  3340 0002               5212           MOVE.W  D0,TDATA+2(A1)
0000A58C  5483                    5213           ADDQ.L  #2,D3          STORE POINTER
0000A58E                          5214  
0000A58E  5429 000A               5215           ADDQ.B  #2,TNB(A1)
0000A592                          5216  
0000A592  6100 FC58               5217  MB105    BSR     COMMA
0000A596                          5218  
0000A596  6100 F4E4               5219           BSR     EADA           DESTINATION
0000A59A  8446                    5220           OR.W    D6,D2
0000A59C                          5221  
0000A59C  4A29 000B               5222           TST.B   TLSPEC(A1)     ..
0000A5A0  6718                    5223           BEQ.S   MB185          DEFAULT
0000A5A2                          5224  
0000A5A2  0246 0038               5225           ANDI.W  #$0038,D6
0000A5A6  660C                    5226           BNE.S   MB145          DESTINATION <EA> WAS NOT D@
0000A5A8                          5227  
0000A5A8  0C69 0080 000C          5228           CMPI.W  #$80,TLENGTH(A1)  DESTINATION <EA> WAS D@
0000A5AE  670A                    5229           BEQ.S   MB185          LENGTH IS .L
0000A5B0  6000 FC54               5230  ER2      BRA     ER
0000A5B4                          5231  
0000A5B4  4A69 000C               5232  MB145    TST.W   TLENGTH(A1)
0000A5B8  66F6                    5233           BNE     ER2            NOT BYTE LENGTH
0000A5BA                          5234  
0000A5BA  6000 FC52               5235  MB185    BRA     CMMD2
0000A5BE                          5236  
0000A5BE  6100 F47C               5237  MB200    BSR     GETREGD        DYNAMIC
0000A5C2  EE58                    5238           ROR.W   #7,D0
0000A5C4  8440                    5239           OR.W    D0,D2
0000A5C6                          5240  
0000A5C6  60CA                    5241           BRA     MB105
0000A5C8                          5242  
0000A5C8  0C15 0023               5243  MBSET    CMPI.B  #'#',(A5)      (INDEX 11) BCLR BSET
0000A5CC  66F0                    5244           BNE     MB200
0000A5CE                          5245  
0000A5CE  343C 08C0               5246           MOVE.W  #$08C0,D2
0000A5D2  60A6                    5247           BRA     MB100
0000A5D4                          5248  
0000A5D4  0C15 0023               5249  MBCLR    CMPI.B  #'#',(A5)      (INDEX 30)
0000A5D8  66E4                    5250           BNE     MB200
0000A5DA                          5251  
0000A5DA  343C 0880               5252           MOVE.W  #$0880,D2
0000A5DE  609A                    5253           BRA     MB100
0000A5E0                          5254  
0000A5E0  0C15 0023               5255  MBTST    CMPI.B  #'#',(A5)      (INDEX 31)
0000A5E4  66D8                    5256           BNE     MB200
0000A5E6                          5257  
0000A5E6  343C 0800               5258           MOVE.W  #$0800,D2
0000A5EA  608E                    5259           BRA     MB100
0000A5EC                          5260  
0000A5EC                          5261  MDBCC    DS      0              (INDEX 8)
0000A5EC  6100 F44E               5262           BSR     GETREGD
0000A5F0  8440                    5263           OR.W    D0,D2
0000A5F2                          5264  
0000A5F2  6100 FBF8               5265           BSR     COMMA
0000A5F6  613C                    5266           BSR.S   EVSR
0000A5F8  601A                    5267           BRA.S   MBRA23
0000A5FA                          5268  
0000A5FA                          5269  *  SIZE   .S  =  .W   (DEFAULT)
0000A5FA                          5270  *         .L  =  .L
0000A5FA                          5271  MBRA     DS      0              (INDEX 10)
0000A5FA  6138                    5272           BSR.S   EVSR
0000A5FC                          5273  
0000A5FC  0C69 0080 000C          5274           CMPI.W  #$0080,TLENGTH(A1)
0000A602  6710                    5275           BEQ.S   MBRA23         FORCED LONG
0000A604                          5276  
0000A604  6100 F724               5277           BSR     EA8BITS        -128 TO +127
0000A608  660A                    5278           BNE.S   MBRA23         NOT 8 BIT VALUE
0000A60A                          5279  
0000A60A  8405                    5280           OR.B    D5,D2
0000A60C  6000 FC00               5281           BRA     CMMD2          .SHORT
0000A610                          5282  
0000A610  6000 FBF4               5283  EVER     BRA     ER             ERROR HANDLER
0000A614                          5284  
0000A614  4A29 000B               5285  MBRA23   TST.B   TLSPEC(A1)
0000A618  6708                    5286           BEQ.S   MBRA27
0000A61A  0C69 0040 000C          5287           CMPI.W  #$0040,TLENGTH(A1)
0000A620  67EE                    5288           BEQ     EVER           .S SPECIFIED
0000A622                          5289  MBRA27
0000A622                          5290  
0000A622  2A04                    5291           MOVE.L  D4,D5          RESTORE D5
0000A624  6100 F6F0               5292           BSR     EA16BITS       -32K TO +32K
0000A628  3345 0002               5293           MOVE.W  D5,TDATA+2(A1)
0000A62C  5429 000A               5294           ADDQ.B  #2,TNB(A1)
0000A630  6000 FBDC               5295           BRA     CMMD2
0000A634                          5296  
0000A634  6100 F396               5297  EVSR     BSR     EV
0000A638  0C15 0020               5298           CMPI.B  #BLANK,(A5)
0000A63C  66D2                    5299           BNE     EVER           DID NOT TERMINATE WITH SPACE
0000A63E                          5300  
0000A63E  2A00                    5301           MOVE.L  D0,D5
0000A640  E280                    5302           ASR.L   #1,D0
0000A642  65CC                    5303           BCS     EVER           ODD VALUE
0000A644  2829 000E               5304           MOVE.L  PCOUNTER(A1),D4
0000A648  5484                    5305           ADDQ.L  #2,D4          D4 = PC + 2
0000A64A  9A84                    5306           SUB.L   D4,D5
0000A64C  67C2                    5307           BEQ     EVER           ZERO; SPECIAL CASE ERROR
0000A64E  2805                    5308           MOVE.L  D5,D4
0000A650  4E75                    5309           RTS
0000A652                          5310  
0000A652                          5311  MCHK     DS      0              (INDEX 12) CHK DIV MUL
0000A652  6100 0238               5312           BSR     SIZEWORD
0000A656                          5313  
0000A656  6100 F43C               5314           BSR     EADADDR        DATA ADDRESSING ONLY
0000A65A  8446                    5315           OR.W    D6,D2
0000A65C                          5316  
0000A65C  6100 FB8E               5317           BSR     COMMA
0000A660                          5318  
0000A660  6100 F3DA               5319           BSR     GETREGD
0000A664  EE58                    5320           ROR.W   #7,D0
0000A666  8440                    5321           OR.W    D0,D2
0000A668                          5322  
0000A668  6000 FBA4               5323           BRA     CMMD2
0000A66C                          5324  
0000A66C                          5325  MCLR     DS      0              (INDEX 13)
0000A66C  6100 F3C8               5326           BSR     FSIZE
0000A670                          5327  
0000A670  6100 F40A               5328           BSR     EADA           DATA ALTERABLE ONLY
0000A674  8446                    5329           OR.W    D6,D2
0000A676  6000 FB96               5330           BRA     CMMD2
0000A67A                          5331  
0000A67A                          5332  * SIZE = BYTE, WORD, LONG
0000A67A                          5333  MCMPM    DS      0              (INDEX 14)
0000A67A  6100 F3BA               5334           BSR     FSIZE
0000A67E                          5335  
0000A67E  3E3C 0008               5336           MOVE.W  #$0008,D7
0000A682  6100 F420               5337           BSR     EA             -(A@)   ONLY
0000A686  0246 0007               5338           ANDI.W  #7,D6
0000A68A  8446                    5339           OR.W    D6,D2
0000A68C                          5340  
0000A68C  6100 FB5E               5341           BSR     COMMA
0000A690                          5342  
0000A690  3E3C 0008               5343           MOVE.W  #$0008,D7
0000A694  6100 F40E               5344           BSR     EA
0000A698  0246 0007               5345           ANDI.W  #7,D6
0000A69C  EE5E                    5346           ROR.W   #7,D6
0000A69E  8446                    5347           OR.W    D6,D2
0000A6A0  6000 FB6C               5348           BRA     CMMD2
0000A6A4                          5349  
0000A6A4                          5350  MEXG     DS      0              (INDEX 16)
0000A6A4  6100 01D6               5351           BSR     SIZELONG
0000A6A8                          5352  
0000A6A8  6100 F3BA               5353           BSR     GETREGAD
0000A6AC  2800                    5354           MOVE.L  D0,D4          D4 = REG NUMBER
0000A6AE  2A01                    5355           MOVE.L  D1,D5          D5 = REG TYPE
0000A6B0                          5356  
0000A6B0  6100 FB3A               5357           BSR     COMMA          TEST FOR COMMA
0000A6B4                          5358  
0000A6B4  6100 F3AE               5359           BSR     GETREGAD
0000A6B8                          5360  
0000A6B8  BA81                    5361           CMP.L   D1,D5
0000A6BA  6714                    5362           BEQ.S   MEXG35         BOTH REGS THE SAME
0000A6BC                          5363  
0000A6BC                          5364  *  DX,AY  OR  AY,DX
0000A6BC  0042 0088               5365           ORI.W   #$88,D2        MODE
0000A6C0  4A01                    5366           TST.B   D1
0000A6C2  6602                    5367           BNE.S   MEXG25
0000A6C4                          5368  
0000A6C4  C144                    5369           EXG     D0,D4          SWAP SOURCE & DESTINATION
0000A6C6                          5370  
0000A6C6  8440                    5371  MEXG25   OR.W    D0,D2          .......MMMMMYYY
0000A6C8  EE5C                    5372           ROR.W   #7,D4
0000A6CA  8444                    5373           OR.W    D4,D2          ....XXXMMMMMYYY
0000A6CC  6000 FB40               5374           BRA     CMMD2
0000A6D0                          5375  
0000A6D0  0042 0040               5376  MEXG35   ORI.W   #$0040,D2      OP-MODE
0000A6D4  4A01                    5377           TST.B   D1
0000A6D6  67EE                    5378           BEQ     MEXG25         DX,DY
0000A6D8                          5379  
0000A6D8  0042 0048               5380           ORI.W   #$0048,D2      AX,AY
0000A6DC  60E8                    5381           BRA     MEXG25
0000A6DE                          5382  
0000A6DE                          5383  
0000A6DE                          5384  MEXT     DS      0              (INDEX 17)
0000A6DE  4A69 000C               5385           TST.W   TLENGTH(A1)
0000A6E2  6700 FB22               5386           BEQ     ER             BYTE SIZE NOT ALLOWED
0000A6E6                          5387  
0000A6E6  6100 F34E               5388           BSR     FSIZE          .W = ........10......
0000A6EA  0642 0040               5389           ADDI.W  #$0040,D2      .L = ........11......
0000A6EE                          5390  
0000A6EE  6100 F34C               5391           BSR     GETREGD
0000A6F2  8440                    5392           OR.W    D0,D2
0000A6F4  6000 FB18               5393           BRA     CMMD2
0000A6F8                          5394  
0000A6F8                          5395  MMOVEM   DS      0              (INDEX 27)
0000A6F8  3029 000C               5396           MOVE.W  TLENGTH(A1),D0 SIZE BITS  76 TO 6
0000A6FC  6700 FB08               5397           BEQ     ER             BYTE       00  ERROR
0000A700  E248                    5398           LSR.W   #1,D0          WORD       01    0
0000A702  0240 0040               5399           ANDI.W  #$0040,D0      LONG       10    1
0000A706  8440                    5400           OR.W    D0,D2
0000A708                          5401  
0000A708  5429 000A               5402           ADDQ.B  #2,TNB(A1)     NUMBER OF BYTES
0000A70C  5483                    5403           ADDQ.L  #2,D3          FORCE STORE PTR PAST MASK
0000A70E                          5404  
0000A70E  0C15 0041               5405           CMPI.B  #'A',(A5)
0000A712  671E                    5406           BEQ.S   MMM44
0000A714  0C15 0044               5407           CMPI.B  #'D',(A5)
0000A718  6718                    5408           BEQ.S   MMM44
0000A71A                          5409  
0000A71A                          5410  *    <EA>,<REGISTER LIST>       MEMORY TO REGISTER
0000A71A  0042 0400               5411           ORI.W   #$0400,D2      DIRECTION BIT
0000A71E                          5412  
0000A71E  3E3C 07EC               5413           MOVE.W  #$7EC,D7       MODES ALLOWED
0000A722  6100 F380               5414           BSR     EA
0000A726  8446                    5415           OR.W    D6,D2
0000A728                          5416  
0000A728  6100 FAC2               5417           BSR     COMMA
0000A72C                          5418  
0000A72C  612A                    5419           BSR.S   MMM48
0000A72E  6000 FADE               5420           BRA     CMMD2
0000A732                          5421  
0000A732                          5422  
0000A732                          5423  *   <REGISTER LIST>,<EA>        REGISTER TO MEMORY
0000A732                          5424  MMM44    DS      0
0000A732                          5425  
0000A732                          5426  * EVALUATE DESTINATION FIRST
0000A732  6100 FAC0               5427  MMM46    BSR     GETCHAR
0000A736  0C00 002C               5428           CMPI.B  #',',D0        FIND COMMA
0000A73A  66F6                    5429           BNE     MMM46
0000A73C                          5430  
0000A73C  3E3C 01F4               5431           MOVE.W  #$1F4,D7       MODES ALLOWED
0000A740  6100 F362               5432           BSR     EA
0000A744  8446                    5433           OR.W    D6,D2
0000A746  234D 0016               5434           MOVE.L  A5,PENDOP(A1)  END OF OPERAND
0000A74A  2A69 0012               5435           MOVE.L  PTROP(A1),A5
0000A74E  6108                    5436           BSR.S   MMM48          EVALUATE REGISTERS
0000A750  2A69 0016               5437           MOVE.L  PENDOP(A1),A5  POINTER TO END OF OPERAND
0000A754  6000 FAB8               5438           BRA     CMMD2
0000A758                          5439  
0000A758                          5440  *        D6 = CORRESPONDENCE MASK
0000A758                          5441  *        D4 = CONTROL  $FF '-BLANK/'
0000A758  4286                    5442  MMM48    CLR.L   D6             MASK
0000A75A  78FF                    5443           MOVEQ   #-1,D4         CONTROL = $FF
0000A75C                          5444  
0000A75C  6100 FA96               5445  RL111    BSR     GETCHAR
0000A760  0C00 002C               5446           CMPI.B  #',',D0
0000A764  6706                    5447           BEQ.S   RL114          DONE; FOUND COMMA
0000A766  0C00 0020               5448           CMPI.B  #BLANK,D0
0000A76A  6602                    5449           BNE.S   RL115          NOT SPACE
0000A76C  4E75                    5450  RL114    RTS     DONE
0000A76E                          5451  
0000A76E  0C00 002F               5452  RL115    CMPI.B  #'/',D0
0000A772  6614                    5453           BNE.S   RL444
0000A774                          5454  
0000A774  4A04                    5455           TST.B   D4             CONTROL
0000A776  6B00 FA8E               5456           BMI     ER
0000A77A  2800                    5457           MOVE.L  D0,D4          CONTROL = '/'
0000A77C  6100 F2E6               5458  RL333    BSR     GETREGAD
0000A780  8200                    5459           OR.B    D0,D1          D1 = BIT POSITION
0000A782  1A01                    5460           MOVE.B  D1,D5          D5 = LAST REGISTER ENTERED
0000A784  6146                    5461           BSR.S   SETBIT
0000A786  60D4                    5462           BRA     RL111
0000A788                          5463  
0000A788  0C00 002D               5464  RL444    CMPI.B  #'-',D0
0000A78C  6630                    5465           BNE.S   RL666
0000A78E                          5466  
0000A78E  0C04 002F               5467           CMPI.B  #'/',D4        CONTROL
0000A792  6600 FA72               5468           BNE     ER
0000A796  2800                    5469           MOVE.L  D0,D4          CONTROL = '-'
0000A798  6100 F2CA               5470           BSR     GETREGAD
0000A79C  8200                    5471           OR.B    D0,D1
0000A79E  2E01                    5472           MOVE.L  D1,D7          D7 = NOW REGISTER
0000A7A0  1005                    5473           MOVE.B  D5,D0          D5 = LAST REG
0000A7A2  B300                    5474           EOR.B   D1,D0
0000A7A4  0200 0038               5475           ANDI.B  #$38,D0
0000A7A8  6600 FA5C               5476           BNE     ER             NOT MATCED SET
0000A7AC  BA01                    5477           CMP.B   D1,D5
0000A7AE  6A00 FA56               5478           BPL     ER
0000A7B2                          5479  
0000A7B2  5285                    5480  RL555    ADDQ.L  #1,D5
0000A7B4  2205                    5481           MOVE.L  D5,D1
0000A7B6  6114                    5482           BSR.S   SETBIT
0000A7B8  BA07                    5483           CMP.B   D7,D5
0000A7BA  6BF6                    5484           BMI     RL555
0000A7BC  609E                    5485           BRA     RL111
0000A7BE                          5486  
0000A7BE  4A04                    5487  RL666    TST.B   D4
0000A7C0  6A00 FA44               5488           BPL     ER
0000A7C4  183C 002F               5489           MOVE.B  #'/',D4        CONTROL = '/'
0000A7C8  538D                    5490           SUBQ.L  #1,A5
0000A7CA  60B0                    5491           BRA     RL333
0000A7CC                          5492  
0000A7CC  41FA 001A               5493  SETBIT   LEA     MTBL(PC),A0    SET BIT IN CORRESPONDENCE MASK
0000A7D0  2002                    5494           MOVE.L  D2,D0
0000A7D2  0240 0038               5495           ANDI.W  #$38,D0
0000A7D6  0C40 0020               5496           CMPI.W  #$20,D0
0000A7DA  6604                    5497           BNE.S   RL30           NOT PREDECREMENT
0000A7DC  1230 1000               5498           MOVE.B  (A0,D1),D1     D1 = BIT  (FOR SURE)
0000A7E0  03C6                    5499  RL30     BSET    D1,D6
0000A7E2                          5500  
0000A7E2  3346 0002               5501           MOVE.W  D6,TDATA+2(A1) SAVE CORRESPONDENCE MASK
0000A7E6  4E75                    5502           RTS
0000A7E8                          5503  
0000A7E8= 0F 0E 0D 0C 0B 0A ...   5504  MTBL     DC.B    15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
0000A7F8                          5505  
0000A7F8                          5506  
0000A7F8                          5507  
0000A7F8                          5508  
0000A7F8                          5509  *   D@,<DATA>(A@)
0000A7F8                          5510  *   <DATA>(A@),D@
0000A7F8                          5511  *         (A@),D@            FORCED TO 0(A@),D0
0000A7F8                          5512  *         D@,(A@)            FORCED TO D0,0(A@)
0000A7F8                          5513  *
0000A7F8                          5514  *  SIZE = WORD, LONG
0000A7F8                          5515  MMOVEP   DS      0              (INDEX 33)
0000A7F8  3029 000C               5516           MOVE.W  TLENGTH(A1),D0
0000A7FC  6700 FA08               5517           BEQ     ER             .BYTE NOT ALLOWED
0000A800  E248                    5518           LSR.W   #1,D0
0000A802  0240 0040               5519           ANDI.W  #$0040,D0
0000A806  8440                    5520           OR.W    D0,D2          SIZE
0000A808                          5521  
0000A808  3E3C 0025               5522           MOVE.W  #$25,D7
0000A80C  6100 F296               5523           BSR     EA             D6 = MODE
0000A810                          5524  
0000A810  6100 F9DA               5525           BSR     COMMA
0000A814                          5526  
0000A814  2006                    5527           MOVE.L  D6,D0
0000A816  0240 0038               5528           ANDI.W  #$38,D0
0000A81A  0C00 0000               5529           CMPI.B  #$0,D0
0000A81E  670A                    5530           BEQ.S   MMP344         D@,<DATA>(A@)
0000A820                          5531  
0000A820                          5532  *    <DATA>(A@),D@
0000A820  6100 F21A               5533           BSR     GETREGD
0000A824  EE58                    5534           ROR.W   #7,D0
0000A826  8440                    5535           OR.W    D0,D2          D@
0000A828  6010                    5536           BRA.S   MMP348
0000A82A                          5537  
0000A82A  0042 0080               5538  MMP344   ORI.W   #$0080,D2      REGISTER TO MEMORY
0000A82E                          5539  
0000A82E  EE5E                    5540           ROR.W   #7,D6
0000A830  8446                    5541           OR.W    D6,D2          D@
0000A832                          5542  
0000A832  3E3C 0024               5543           MOVE.W  #$24,D7
0000A836  6100 F26C               5544           BSR     EA
0000A83A  2006                    5545  MMP348   MOVE.L  D6,D0
0000A83C  0246 0007               5546           ANDI.W  #7,D6
0000A840  8446                    5547           OR.W    D6,D2          A@
0000A842                          5548  
0000A842  0240 0038               5549           ANDI.W  #$38,D0
0000A846  0C00 0010               5550           CMPI.B  #$10,D0
0000A84A  660A                    5551           BNE.S   MMP368         <DATA>(A@)
0000A84C                          5552  
0000A84C  4269 0002               5553           CLR.W   TDATA+2(A1)    <DATA> FORCED TO ZERO;  "(A@)"
0000A850  5429 000A               5554           ADDQ.B  #2,TNB(A1)     NUMBER OF BYTES
0000A854  5483                    5555           ADDQ.L  #2,D3          STORE POINTER
0000A856  6000 F9B6               5556  MMP368   BRA     CMMD2
0000A85A                          5557  
0000A85A                          5558  MMOVEQ   DS      0              (INDEX 34)
0000A85A  6100 01FA               5559           BSR     GETIMM
0000A85E  2A00                    5560           MOVE.L  D0,D5
0000A860                          5561  
0000A860  6100 F4C8               5562           BSR     EA8BITS        -128 TO +127
0000A864  6600 F9A0               5563           BNE     ER
0000A868  8405                    5564           OR.B    D5,D2          D5 = VALUE
0000A86A                          5565  
0000A86A  6100 F980               5566           BSR     COMMA
0000A86E                          5567  
0000A86E  6100 F1CC               5568           BSR     GETREGD        D@
0000A872  EE58                    5569           ROR.W   #7,D0
0000A874                          5570  
0000A874  8440                    5571  MMQ20    OR.W    D0,D2
0000A876  6104                    5572           BSR.S   SIZELONG
0000A878  6000 F994               5573           BRA     CMMD2
0000A87C                          5574  
0000A87C  4A29 000B               5575  SIZELONG TST.B   TLSPEC(A1)     MUST BE .LONG
0000A880  6708                    5576           BEQ.S   SI201          DEFAULT SIZE OK
0000A882  0C69 0080 000C          5577           CMPI.W  #$0080,TLENGTH(A1)
0000A888  660A                    5578           BNE.S   ER10           NOT .LONG
0000A88A  4E75                    5579  SI201    RTS
0000A88C                          5580  
0000A88C  0C69 0040 000C          5581  SIZEWORD CMPI.W  #$0040,TLENGTH(A1)  MUST BE .WORD
0000A892  67F6                    5582           BEQ     SI201          [RTS]
0000A894  6000 F970               5583  ER10     BRA     ER
0000A898                          5584  
0000A898  4A29 000B               5585  SIZEBYTE TST.B   TLSPEC(A1)
0000A89C  6706                    5586           BEQ.S   SI222          DEFAULT SIZE OK
0000A89E  4A69 000C               5587           TST.W   TLENGTH(A1)
0000A8A2  66F0                    5588           BNE     ER10
0000A8A4  4E75                    5589  SI222    RTS
0000A8A6                          5590  
0000A8A6                          5591  MMOVE    DS      0              (INDEX 21)
0000A8A6  0C15 0053               5592           CMPI.B  #'S',(A5)
0000A8AA  661C                    5593           BNE.S   MMM40
0000A8AC  343C 40C0               5594           MOVE.W  #$40C0,D2      SR,<EA>
0000A8B0  528D                    5595           ADDQ.L  #1,A5
0000A8B2  0C1D 0052               5596           CMPI.B  #'R',(A5)+
0000A8B6  66DC                    5597           BNE     ER10
0000A8B8                          5598  
0000A8B8  6100 F932               5599           BSR     COMMA
0000A8BC                          5600  
0000A8BC  6100 F1BE               5601           BSR     EADA           DATA ALTERABLE ONLY (DESTINATION)
0000A8C0                          5602  
0000A8C0  8446                    5603  MM315    OR.W    D6,D2
0000A8C2  61C8                    5604           BSR     SIZEWORD
0000A8C4  6000 F948               5605           BRA     CMMD2
0000A8C8                          5606  
0000A8C8  0C15 0055               5607  MMM40    CMPI.B  #'U',(A5)
0000A8CC  661C                    5608           BNE.S   MMM50
0000A8CE  528D                    5609           ADDQ.L  #1,A5
0000A8D0  0C1D 0053               5610           CMPI.B  #'S',(A5)+
0000A8D4  66BE                    5611           BNE     ER10
0000A8D6  0C1D 0050               5612           CMPI.B  #'P',(A5)+
0000A8DA  66B8                    5613           BNE     ER10
0000A8DC                          5614  
0000A8DC  6100 F90E               5615           BSR     COMMA
0000A8E0                          5616  
0000A8E0  343C 4E68               5617           MOVE.W  #$4E68,D2      USP,A@
0000A8E4  6100 F170               5618           BSR     GETREGA
0000A8E8  608A                    5619           BRA     MMQ20
0000A8EA                          5620  
0000A8EA                          5621  * GET EXCEPTIONS FROM DESTINATION
0000A8EA                          5622  MMM50    DS      0
0000A8EA                          5623  
0000A8EA  6100 FBF4               5624           BSR     A5TODEST       MOVE A5 TO DESTINATION
0000A8EE                          5625  
0000A8EE  101D                    5626           MOVE.B  (A5)+,D0
0000A8F0  0C00 0043               5627           CMPI.B  #'C',D0
0000A8F4  6622                    5628           BNE.S   MMM60
0000A8F6  0C1D 0043               5629           CMPI.B  #'C',(A5)+
0000A8FA  6698                    5630           BNE     ER10
0000A8FC  0C1D 0052               5631           CMPI.B  #'R',(A5)+
0000A900  6692                    5632           BNE     ER10
0000A902  343C 44C0               5633           MOVE.W  #$44C0,D2      <EA>,CCR
0000A906                          5634  
0000A906  234D 0016               5635  MM508    MOVE.L  A5,PENDOP(A1)  SAVE POINTER
0000A90A  2A69 0012               5636           MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
0000A90E                          5637  
0000A90E  6100 F184               5638           BSR     EADADDR        DATA ADDRESSING ONLY (SOURCE)
0000A912  2A69 0016               5639           MOVE.L  PENDOP(A1),A5
0000A916  60A8                    5640           BRA     MM315
0000A918                          5641  
0000A918  0C00 0053               5642  MMM60    CMPI.B  #'S',D0
0000A91C  660E                    5643           BNE.S   MM70
0000A91E  343C 46C0               5644           MOVE.W  #$46C0,D2      <EA>,SR
0000A922  0C1D 0052               5645           CMPI.B  #'R',(A5)+
0000A926  6600 F8DE               5646           BNE     ER
0000A92A  60DA                    5647           BRA     MM508
0000A92C                          5648  
0000A92C  0C00 0055               5649  MM70     CMPI.B  #'U',D0
0000A930  6628                    5650           BNE.S   MM80
0000A932  343C 4E60               5651           MOVE.W  #$4E60,D2      A@,USP
0000A936  0C1D 0053               5652           CMPI.B  #'S',(A5)+
0000A93A  6600 F8CA               5653           BNE     ER
0000A93E  0C1D 0050               5654           CMPI.B  #'P',(A5)+
0000A942  6600 F8C2               5655           BNE     ER
0000A946                          5656  
0000A946  234D 0016               5657           MOVE.L  A5,PENDOP(A1)
0000A94A  2A69 0012               5658           MOVE.L  PTROP(A1),A5
0000A94E  6100 F106               5659           BSR     GETREGA
0000A952  2A69 0016               5660           MOVE.L  PENDOP(A1),A5  RESTORE A5
0000A956  6000 FF1C               5661           BRA     MMQ20
0000A95A                          5662  
0000A95A  2A69 0012               5663  MM80     MOVE.L  PTROP(A1),A5   A5 = POINTER TO SOURCE FIELD
0000A95E  6100 F0D6               5664           BSR     FSIZE          GET SIZE (BITS  7 - 6)
0000A962  ED4A                    5665           LSL.W   #6,D2          ADJUST TO(BITS 13-12)
0000A964  0802 000D               5666           BTST    #13,D2
0000A968  6608                    5667           BNE.S   MM804          .L 10 TO 10
0000A96A  0642 1000               5668           ADDI.W  #$1000,D2      .W 01 TO 11
0000A96E  0042 1000               5669           ORI.W   #$1000,D2      .B 00 TO 01
0000A972  6100 F12C               5670  MM804    BSR     EAALL          SOURCE; ALL MODES ALLOWED
0000A976  8446                    5671           OR.W    D6,D2
0000A978                          5672  
0000A978                          5673  * IF BYTE SIZE; "ADDRESS REGISTER DIRECT" NOT ALLOWED
0000A978                          5674  
0000A978  2002                    5675           MOVE.L  D2,D0
0000A97A  0240 3000               5676           ANDI.W  #$3000,D0
0000A97E  0C40 1000               5677           CMPI.W  #$1000,D0
0000A982  660C                    5678           BNE.S   MM806          NOT .B SIZE
0000A984  0206 0038               5679           ANDI.B  #$38,D6
0000A988  0C06 0008               5680           CMPI.B  #$08,D6
0000A98C  6700 F878               5681           BEQ     ER
0000A990                          5682  MM806    DS      0
0000A990                          5683  
0000A990  6100 F85A               5684           BSR     COMMA
0000A994                          5685  
0000A994  3E3C 01FF               5686           MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
0000A998  6100 F10A               5687           BSR     EA
0000A99C                          5688  
0000A99C  2006                    5689           MOVE.L  D6,D0          DESTINATION
0000A99E  0240 0038               5690           ANDI.W  #$0038,D0
0000A9A2  0C40 0008               5691           CMPI.W  #$0008,D0
0000A9A6  6712                    5692           BEQ.S   MMOVEA1        A@ MAKE MOVEA
0000A9A8                          5693  
0000A9A8                          5694  * POSITION REGISTER AND MODE OF DESTINATION
0000A9A8                          5695  
0000A9A8  E69E                    5696  MM825    ROR.L   #3,D6          RRR............. .............MMM
0000A9AA  E65E                    5697           ROR.W   #3,D6                           MMM.............
0000A9AC  4846                    5698           SWAP    D6             MMM............. RRR.............
0000A9AE  E75E                    5699           ROL.W   #3,D6                           .............RRR
0000A9B0  E39E                    5700           ROL.L   #1,D6          MM.............. ............RRRM
0000A9B2  E19E                    5701           ROL.L   #8,D6          ................ ....RRRMMM......
0000A9B4  8446                    5702           OR.W    D6,D2
0000A9B6  6000 F856               5703           BRA     CMMD2
0000A9BA                          5704  
0000A9BA  4283                    5705  MMOVEA1  CLR.L   D3
0000A9BC  137C 0002 000A          5706           MOVE.B  #2,TNB(A1)
0000A9C2                          5707  
0000A9C2                          5708  MMOVEA   DS      0              (INDEX 32)
0000A9C2  2A69 0012               5709           MOVE.L  PTROP(A1),A5   A5 = POINTER TO OPERAND
0000A9C6                          5710  
0000A9C6  3429 000C               5711           MOVE.W  TLENGTH(A1),D2 D0 = SIZE
0000A9CA  6700 F83A               5712           BEQ     ER             .BYTE NOT ALLOWED
0000A9CE                          5713  
0000A9CE  ED4A                    5714           LSL.W   #6,D2          .SIZE
0000A9D0  0802 000C               5715           BTST    #12,D2
0000A9D4  6704                    5716           BEQ.S   MMA225         .L = ..10
0000A9D6  0042 3000               5717           ORI.W   #$3000,D2      .W = ..11
0000A9DA                          5718  MMA225
0000A9DA                          5719  
0000A9DA  6100 F0C4               5720           BSR     EAALL          ALL MODES ALLOWED
0000A9DE  8446                    5721           OR.W    D6,D2
0000A9E0                          5722  
0000A9E0  6100 F80A               5723           BSR     COMMA
0000A9E4                          5724  
0000A9E4  3E3C 0002               5725           MOVE.W  #$0002,D7      A@ ONLY
0000A9E8  6100 F0BA               5726           BSR     EA
0000A9EC  60BA                    5727           BRA     MM825
0000A9EE                          5728  
0000A9EE                          5729  
0000A9EE                          5730  MJMP     DS      0              (INDEX 18)
0000A9EE  4A29 000B               5731           TST.B   TLSPEC(A1)
0000A9F2  671C                    5732           BEQ.S   MJMP32         DEFAULT (ALLOW EITHER .S OR .L)
0000A9F4  3029 000C               5733           MOVE.W  TLENGTH(A1),D0
0000A9F8  6700 F80C               5734           BEQ     ER             .B NOT ALLOWED
0000A9FC  3E3C 06E4               5735           MOVE.W  #$6E4,D7       D7 = MODES ALLOWED
0000AA00  0C40 0040               5736           CMPI.W  #$40,D0
0000AA04  6704                    5737           BEQ.S   MJMP22         .S SPECIFIED (.W ACCEPTED)
0000AA06  3E3C 8764               5738           MOVE.W  #$8764,D7      MODE FOR .L
0000AA0A  6100 F098               5739  MJMP22   BSR     EA
0000AA0E  6004                    5740           BRA.S   MJMP42
0000AA10                          5741  
0000AA10  6100 F070               5742  MJMP32   BSR     EAC            CONTROL ADDRESSING ONLY
0000AA14  8446                    5743  MJMP42   OR.W    D6,D2
0000AA16  6000 F7F6               5744           BRA     CMMD2
0000AA1A                          5745  
0000AA1A                          5746  * SIZE = LONG
0000AA1A                          5747  MLEA     DS      0              (INDEX 19)
0000AA1A  6100 FE60               5748           BSR     SIZELONG
0000AA1E                          5749  
0000AA1E  6100 F062               5750           BSR     EAC            CONTROL ADDRESSING ONLY
0000AA22  8446                    5751           OR.W    D6,D2
0000AA24                          5752  
0000AA24  6100 F7C6               5753           BSR     COMMA
0000AA28                          5754  
0000AA28  6100 F02C               5755           BSR     GETREGA
0000AA2C  EE58                    5756           ROR.W   #7,D0
0000AA2E  8440                    5757           OR.W    D0,D2
0000AA30  6000 F7DC               5758           BRA     CMMD2
0000AA34                          5759  
0000AA34                          5760  
0000AA34                          5761  * SIZE = LONG
0000AA34                          5762  MPEA     DS      0              (INDEX 36)
0000AA34  6100 FE46               5763           BSR     SIZELONG
0000AA38                          5764  
0000AA38  6100 F048               5765           BSR     EAC            CONTROL ADDRESSING ONLY
0000AA3C  8446                    5766           OR.W    D6,D2
0000AA3E  6000 F7CE               5767           BRA     CMMD2
0000AA42                          5768  
0000AA42                          5769  MSWAP    DS      0              (INDEX 24)
0000AA42                          5770  * SIZE WORD
0000AA42  0C69 0040 000C          5771           CMPI.W  #$0040,TLENGTH(A1)
0000AA48  6600 F7BC               5772           BNE     ER             NOT .W
0000AA4C                          5773  
0000AA4C  6100 EFEE               5774           BSR     GETREGD        D@ ONLY
0000AA50  8440                    5775           OR.W    D0,D2
0000AA52  6000 F7BA               5776           BRA     CMMD2
0000AA56                          5777  
0000AA56  0C1D 0023               5778  GETIMM   CMPI.B  #'#',(A5)+
0000AA5A  6600 F7AA               5779           BNE     ER
0000AA5E                          5780  
0000AA5E  6100 EF6C               5781           BSR     EV             EVALUATE EXPRESSION
0000AA62  4E75                    5782           RTS                    D0 = VALUE
0000AA64                          5783  
0000AA64  6100 EFF0               5784  MLINK    BSR     GETREGA        (INDEX 20)
0000AA68  8440                    5785           OR.W    D0,D2
0000AA6A                          5786  
0000AA6A  6100 F780               5787           BSR     COMMA
0000AA6E                          5788  
0000AA6E  61E6                    5789           BSR     GETIMM
0000AA70  2A00                    5790           MOVE.L  D0,D5
0000AA72  6100 F2A2               5791           BSR     EA16BITS       -32K TO +32K
0000AA76  3340 0002               5792           MOVE.W  D0,TDATA+2(A1)
0000AA7A                          5793  
0000AA7A  5429 000A               5794           ADDQ.B  #2,TNB(A1)
0000AA7E  6000 F78E               5795           BRA     CMMD2
0000AA82                          5796  
0000AA82                          5797  MSTOP    DS      0              (INDEX 23)
0000AA82                          5798  * UNSIZED
0000AA82  61D2                    5799           BSR     GETIMM
0000AA84  0C80 00010000           5800           CMPI.L  #$00010000,D0
0000AA8A  6400 F77A               5801           BCC     ER
0000AA8E  3340 0002               5802           MOVE.W  D0,TDATA+2(A1)
0000AA92  5429 000A               5803           ADDQ.B  #2,TNB(A1)
0000AA96  6000 F776               5804           BRA     CMMD2
0000AA9A                          5805  
0000AA9A                          5806  MTRAP    DS      0              (INDEX 25)
0000AA9A  61BA                    5807           BSR     GETIMM
0000AA9C  0C80 00000010           5808           CMPI.L  #16,D0
0000AAA2  6400 F762               5809           BCC     ER
0000AAA6  8440                    5810           OR.W    D0,D2
0000AAA8  6000 F764               5811           BRA     CMMD2
0000AAAC                          5812  
0000AAAC                          5813  MUNLK    DS      0              (INDEX 26)
0000AAAC                          5814  * UNSIZED
0000AAAC  6100 EFA8               5815           BSR     GETREGA
0000AAB0  8440                    5816           OR.W    D0,D2
0000AAB2  6000 F75A               5817           BRA     CMMD2
0000AAB6                          5818  
0000AAB6                          5819  MDC      DS      0              (INDEX 37) .W ONLY ALLOWED
0000AAB6  6100 EF14               5820           BSR     EV
0000AABA  2A00                    5821           MOVE.L  D0,D5
0000AABC  6100 F24E               5822           BSR     EA16BIT        ONLY .W ALLOWED     -32K TO +64K
0000AAC0  3405                    5823           MOVE.W  D5,D2
0000AAC2  6000 F74A               5824           BRA     CMMD2
0000AAC6                          5825  
0000AAC6                          5826  
0000AAC6                          5827  
0000AAC6                          5828  
0000AAC6                          5829  *-------------------------------------------------------------------------
0000AAC6                          5830  * File DCODE68K  68K ONE LINE DISASSEMBLER                        07/28/82
0000AAC6                          5831  
0000AAC6                          5832  *        CALLING SEQUENCE:
0000AAC6                          5833  *   D0,D1,D2 = CODE TO BE DISASSEMBLED
0000AAC6                          5834  *   A4 = VALUE OF PROGRAM COUNTER FOR THE CODE
0000AAC6                          5835  *   A5 = POINTER TO STORE DATA (BUFSIZE = 80 ASSUMED)
0000AAC6                          5836  *        JSR       DCODE68K
0000AAC6                          5837  
0000AAC6                          5838  *        RETURN:
0000AAC6                          5839  *   A4 = VALUE OF PROGRAM COUNTER FOR NEXT INSTRUCTION
0000AAC6                          5840  *   A5 = POINTER TO LINE AS DISASSEMBLED
0000AAC6                          5841  *   A6 = POINTER TO END OF LINE
0000AAC6                          5842  *
0000AAC6                          5843  * 01234567890123456789012345678901234567890123456789
0000AAC6                          5844  * AAAAAA FDATA.DDDDDDDDDDDDDD FOC.... FOP.....
0000AAC6                          5845  
0000AAC6                          5846  *FDATA   EQU     10             DATA FIELD
0000AAC6                          5847  *FOC     EQU     31             OP-CODE FIELD
0000AAC6                          5848  *FOP     EQU     39             OPERAND FIELD
0000AAC6                          5849  
0000AAC6                          5850  * CAUSES ORGIN MODULO 4
0000AAC6                          5851  LONG     MACRO
0000AAC6                          5852           DS      0
0000AAC6                          5853           DS.B    (*-X)&2
0000AAC6                          5854           ENDM
0000AAC6                          5855  
0000AAC6                          5856  
0000AAC6                          5857  X        DS      0              BASE ADDRESS THIS MODULE
0000AAC6                          5858m          LONG
0000AAC6                          5859  
0000AAC6                          5860  *  MOVEM REGISTERS TO EA
0000AAC6                          5861  *
0000AAC6                          5862  *        01001D001S......
0000AAC6                          5863  *        ..........XXXXXX       EFFECTIVE ADDRESS
0000AAC6                          5864  *        .........0......       WORD
0000AAC6                          5865  *        .........1......       LONG
0000AAC6                          5866  *        .....0..........       REGISTER TO MEMORY
0000AAC6                          5867  *        .....1..........       MEMORY TO REGISTER
0000AAC6                          5868  *
0000AAC6                          5869  
0000AAC6                          5870  IMOVEMFR DS      0
0000AAC6  6100 071E               5871           BSR     MOVEMS         SIZE
0000AACA                          5872  
0000AACA  7C38                    5873           MOVEQ   #$0038,D6
0000AACC  CC54                    5874           AND.W   (A4),D6
0000AACE  0C46 0020               5875           CMPI.W  #$0020,D6
0000AAD2  6706                    5876           BEQ.S   IM7788         PREDECREMENT MODE
0000AAD4                          5877  
0000AAD4  7C01                    5878           MOVEQ   #1,D6          D6 = INCREMENTER (BIT POSITION)
0000AAD6  7200                    5879           MOVEQ   #0,D1          D1 = BIT POSITION
0000AAD8  6004                    5880           BRA.S   IM7799
0000AADA                          5881  
0000AADA  7CFF                    5882  IM7788   MOVEQ   #-1,D6         D6 = DECREMENTER (BIT POSITION)
0000AADC  720F                    5883           MOVEQ   #15,D1         D1 = BIT POSITION
0000AADE  6100 071A               5884  IM7799   BSR     MOVEMR         BUILD MASK WORD
0000AAE2                          5885  
0000AAE2  1CFC 002C               5886           MOVE.B  #',',(A6)+     STORE COMMA
0000AAE6                          5887  
0000AAE6  5483                    5888           ADDQ.L  #2,D3
0000AAE8  3814                    5889           MOVE.W  (A4),D4
0000AAEA  3E3C 01F4               5890           MOVE.W  #$1F4,D7       CONTROL + PREDECREMENT
0000AAEE  6100 0534               5891           BSR     EEA
0000AAF2  601C                    5892           BRA.S   CS16           COMMON
0000AAF4                          5893  
0000AAF4                          5894m          LONG
0000AAF6                          5895  * MOVEM  EA  TO REGISTERS
0000AAF6                          5896  *
0000AAF6  6100 06EE               5897  IMOVEMTR BSR     MOVEMS         SIZE
0000AAFA  5483                    5898           ADDQ.L  #2,D3
0000AAFC  3E3C 07EC               5899           MOVE.W  #$7EC,D7       CONTROL + POSTINCREMENT
0000AB00  6100 0522               5900           BSR     EEA
0000AB04                          5901  
0000AB04  1CFC 002C               5902           MOVE.B  #',',(A6)+     STORE COMMA
0000AB08                          5903  
0000AB08  7C01                    5904           MOVEQ   #1,D6          D6 = BIT POSITION INCREMENTER
0000AB0A  7200                    5905           MOVEQ   #0,D1          D1 = BIT POSITION
0000AB0C  6100 06EC               5906           BSR     MOVEMR
0000AB10                          5907  
0000AB10  606C                    5908  CS16     BRA.S   CS15           COMMON
0000AB12                          5909  
0000AB12                          5910  
0000AB12                          5911m          LONG
0000AB12                          5912  ISTOP    DS      0
0000AB12  302C 0002               5913           MOVE.W  2(A4),D0
0000AB16  1CFC 0023               5914           MOVE.B  #'#',(A6)+     IMMEDIATE
0000AB1A  1CFC 0024               5915           MOVE.B  #'$',(A6)+     HEX
0000AB1E  6100 EAC2               5916           BSR     PNT4HX         VALUE
0000AB22  6000 07EE               5917           BRA     COMMON4
0000AB26                          5918  
0000AB26                          5919m          LONG
0000AB26                          5920  IMMED    DS      0              ADD  AND  CMP #  EOR  OR  SUB
0000AB26  6100 0472               5921           BSR     FORMSIZE
0000AB2A  5483                    5922           ADDQ.L  #2,D3          SIZE = 4
0000AB2C  1CFC 0023               5923           MOVE.B  #'#',(A6)+     IMMEDIATE
0000AB30                          5924  
0000AB30  4280                    5925           CLR.L   D0
0000AB32  302C 0002               5926           MOVE.W  2(A4),D0       D0 = EXTENSION WORD
0000AB36  3214                    5927           MOVE.W  (A4),D1
0000AB38  EC49                    5928           LSR.W   #6,D1
0000AB3A  0241 0003               5929           ANDI.W  #3,D1
0000AB3E  6746                    5930           BEQ.S   IMMED65        .BYTE
0000AB40                          5931  
0000AB40  0C01 0001               5932           CMPI.B  #1,D1
0000AB44  6750                    5933           BEQ.S   IMMED75        .WORD
0000AB46                          5934  
0000AB46  5483                    5935           ADDQ.L  #2,D3          .LONG    SIZE = 6
0000AB48  202C 0002               5936           MOVE.L  2(A4),D0       D0 = LONG EXTENSION WORD
0000AB4C                          5937  
0000AB4C  6100 E380               5938  IMMED45  BSR     HEX2DEC        DECIMAL
0000AB50                          5939  
0000AB50  1CC5                    5940           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AB52                          5941  
0000AB52  3014                    5942           MOVE    (A4),D0
0000AB54  0240 003F               5943           ANDI.W  #$003F,D0
0000AB58  0C40 003C               5944           CMPI.W  #$003C,D0      DESTINATION ADDRESS MODE 111100  "SR"
0000AB5C  6622                    5945           BNE.S   IMMED55        NOT FOUND
0000AB5E                          5946  
0000AB5E  3014                    5947           MOVE.W  (A4),D0        "SR"  ILLEGAL FOR
0000AB60  0240 4000               5948           ANDI.W  #$4000,D0      ADDI   SUBI  CMPI
0000AB64  6600 07D6               5949           BNE     FERROR         0600   0400  0C00
0000AB68                          5950  
0000AB68  3214                    5951           MOVE.W  (A4),D1
0000AB6A  0241 00C0               5952           ANDI.W  #$00C0,D1
0000AB6E  0C41 0080               5953           CMPI.W  #$0080,D1
0000AB72  6700 07C8               5954           BEQ     FERROR         .LONG NOT ALLOWED
0000AB76                          5955  
0000AB76  1CFC 0053               5956           MOVE.B  #'S',(A6)+     #,SR FOR ANDI, EORI, ORI
0000AB7A  1CFC 0052               5957           MOVE.B  #'R',(A6)+
0000AB7E  603E                    5958  CS15     BRA.S   CS14           COMMON
0000AB80                          5959  
0000AB80  6100 04A2               5960  IMMED55  BSR     EEA
0000AB84  6038                    5961           BRA.S   CS14           COMMON
0000AB86                          5962  
0000AB86  2200                    5963  IMMED65  MOVE.L  D0,D1          D1 = XXXXXXXX........
0000AB88  E049                    5964           LSR.W   #8,D1          D1 = 00000000XXXXXXXX
0000AB8A  670A                    5965           BEQ.S   IMMED75
0000AB8C  2200                    5966           MOVE.L  D0,D1
0000AB8E  EE41                    5967           ASR.W   #7,D1
0000AB90  5241                    5968           ADDQ.W  #1,D1          CHECK FOR NEGATIVE
0000AB92  6600 07A8               5969           BNE     FERROR
0000AB96                          5970  
0000AB96  48C0                    5971  IMMED75  EXT.L   D0
0000AB98  60B2                    5972           BRA     IMMED45
0000AB9A                          5973  
0000AB9A                          5974  *  BIT   5432109876543210
0000AB9A                          5975  *        ....RRRMMM......       DESTINATION REGISTER MODE
0000AB9A                          5976  *        ..........MMMRRR       SOURCE MODE REGISTER
0000AB9A                          5977  *        0001............       .BYTE
0000AB9A                          5978  *        0011............       .WORD
0000AB9A                          5979  *        0010............       .LONG
0000AB9A                          5980  *
0000AB9A                          5981  * IF BYTE SIZE; DESTINATION ADDRESS DIRECT NOT ALLOWED
0000AB9A                          5982m          LONG
0000AB9A                          5983  IMOVE    DS      0
0000AB9A  6000 03A2               5984           BRA     IMOVEA1
0000AB9E                          5985  
0000AB9E                          5986m          LONG
0000AB9E                          5987  ILINK    DS      0
0000AB9E  615E                    5988           BSR.S   FORMREGA
0000ABA0                          5989  
0000ABA0  1CC5                    5990           MOVE.B  D5,(A6)+       COMMA SERARATOR
0000ABA2                          5991  
0000ABA2  1CFC 0023               5992           MOVE.B  #'#',(A6)+
0000ABA6  302C 0002               5993           MOVE.W  2(A4),D0
0000ABAA  48C0                    5994           EXT.L   D0
0000ABAC  6100 E320               5995           BSR     HEX2DEC        DECIMAL DISPLACEMENT
0000ABB0  6000 0760               5996           BRA     COMMON4
0000ABB4                          5997  
0000ABB4                          5998m          LONG
0000ABB6                          5999  FORM1    DS      0              CLR  NEG  NEGX  NOT TST
0000ABB6  6100 03E2               6000           BSR.L   FORMSIZE
0000ABBA                          6001  
0000ABBA                          6002  
0000ABBA                          6003  *                               NBCD TAS
0000ABBA  6100 0468               6004  FORM1A   BSR     EEA            DATA ALTERABLE ONLY
0000ABBE  606E                    6005  CS14     BRA.S   CS13           COMMON
0000ABC0                          6006  
0000ABC0                          6007m          LONG
0000ABC2                          6008  FORM3    DS      0              EXT  SWAP
0000ABC2  614A                    6009           BSR.S   FORMREGD
0000ABC4  6068                    6010           BRA.S   CS13           COMMON
0000ABC6                          6011  
0000ABC6                          6012m          LONG
0000ABC6                          6013  FORM4    DS      0              TRAP
0000ABC6  1CFC 0023               6014           MOVE.B  #'#',(A6)+
0000ABCA  3014                    6015           MOVE.W  (A4),D0
0000ABCC  0280 0000000F           6016           ANDI.L  #$0F,D0
0000ABD2  6100 E2FA               6017           BSR     HEX2DEC        DECIMAL
0000ABD6  6056                    6018           BRA.S   CS13           COMMON
0000ABD8                          6019  
0000ABD8                          6020m          LONG
0000ABDA                          6021  FORM5    DS      0              UNLNK
0000ABDA  6122                    6022           BSR.S   FORMREGA
0000ABDC  6050                    6023           BRA.S   CS13           COMMON
0000ABDE                          6024  
0000ABDE                          6025  *  BIT   5432109876543210
0000ABDE                          6026  *        ....RRR.........       ADDRESS REGISTER
0000ABDE                          6027  *        ..........XXXXXX       EFFECTIVE ADDRESS
0000ABDE                          6028  *
0000ABDE                          6029m          LONG
0000ABDE                          6030  FORM6A   DS      0              LEA
0000ABDE  3E3C 07E4               6031           MOVE.W  #$7E4,D7       CONTROL ADDRESSING
0000ABE2  6154                    6032           BSR.S   EEA10
0000ABE4                          6033  
0000ABE4  1CC5                    6034           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000ABE6                          6035  
0000ABE6  3814                    6036           MOVE.W  (A4),D4
0000ABE8  EF5C                    6037           ROL.W   #7,D4
0000ABEA  6112                    6038           BSR.S   FORMREGA
0000ABEC  6040                    6039           BRA.S   CS13           COMMON
0000ABEE                          6040  
0000ABEE                          6041  *  BIT   5432109876543210
0000ABEE                          6042  *        ....DDD.........       DATA REGISTER
0000ABEE                          6043  *        ..........XXXXXX       EFFECTIVE ADDRESS
0000ABEE                          6044  *
0000ABEE                          6045m          LONG
0000ABEE                          6046  FORM6D   DS      0              CHK  DIVS  DIVU  MULS  MULU
0000ABEE  3E3C 0FFD               6047           MOVE.W  #$FFD,D7       DATA ADDRESSING
0000ABF2  6144                    6048           BSR.S   EEA10
0000ABF4                          6049  
0000ABF4  1CC5                    6050           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000ABF6                          6051  
0000ABF6  3814                    6052           MOVE.W  (A4),D4
0000ABF8  EF5C                    6053           ROL.W   #7,D4
0000ABFA  6112                    6054           BSR.S   FORMREGD
0000ABFC  6030                    6055           BRA.S   CS13           COMMON
0000ABFE                          6056  
0000ABFE  1CFC 0041               6057  FORMREGA MOVE.B  #'A',(A6)+     FORMAT A@
0000AC02  0204 0007               6058  FORMREG5 ANDI.B  #$07,D4
0000AC06  0004 0030               6059           ORI.B   #'0',D4
0000AC0A  1CC4                    6060           MOVE.B  D4,(A6)+
0000AC0C  4E75                    6061           RTS
0000AC0E                          6062  
0000AC0E  1CFC 0044               6063  FORMREGD MOVE.B  #'D',(A6)+     FORMAT D@
0000AC12  60EE                    6064           BRA     FORMREG5
0000AC14                          6065  
0000AC14                          6066  *  BIT   5432109876543210
0000AC14                          6067  *        ....DDD......DDD       DATA REGISTERS
0000AC14                          6068  *
0000AC14                          6069m          LONG
0000AC16                          6070  FORM7    DS      0              EXG
0000AC16  EF5C                    6071           ROL.W   #7,D4
0000AC18  61F4                    6072           BSR     FORMREGD
0000AC1A                          6073  
0000AC1A  1CC5                    6074           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AC1C                          6075  
0000AC1C  3814                    6076           MOVE.W  (A4),D4
0000AC1E  61EE                    6077           BSR     FORMREGD
0000AC20  600C                    6078           BRA.S   CS13           COMMON
0000AC22                          6079  
0000AC22                          6080  *  BIT   5432109876543210
0000AC22                          6081  *        ....AAA......AAA       ADDRESS REGISTERS
0000AC22                          6082  *
0000AC22                          6083m          LONG
0000AC22                          6084  FORM8    DS      0              EXG
0000AC22  EF5C                    6085           ROL.W   #7,D4
0000AC24  61D8                    6086           BSR     FORMREGA
0000AC26                          6087  
0000AC26  1CFC 002C               6088  FORM815  MOVE.B  #',',(A6)+     COMMA SEPARATOR
0000AC2A                          6089  
0000AC2A  3814                    6090           MOVE.W  (A4),D4
0000AC2C  61D0                    6091           BSR     FORMREGA
0000AC2E  6000 0080               6092  CS13     BRA     CS12           COMMON
0000AC32                          6093  
0000AC32                          6094  *  BIT   5432109876543210
0000AC32                          6095  *        ....DDD.........       DATA REGISTER
0000AC32                          6096  *        .............AAA       ADDRESS REGISTER
0000AC32                          6097  *
0000AC32                          6098m          LONG
0000AC32                          6099  FORM9    DS      0              EXG
0000AC32  EF5C                    6100           ROL.W   #7,D4
0000AC34  61D8                    6101           BSR     FORMREGD       DATA REGISTER
0000AC36  60EE                    6102           BRA     FORM815
0000AC38                          6103  
0000AC38  6000 03EA               6104  EEA10    BRA     EEA
0000AC3C                          6105  
0000AC3C                          6106  *  BIT   5432109876543210
0000AC3C                          6107  *        ..........AAAAAA         EFFECTIVE ADDRESS
0000AC3C                          6108  *        .......MMM......         OP-MODE
0000AC3C                          6109  *        ....RRR.........         D-REGISTER
0000AC3C                          6110  *        .......011......         WORD  EA,A@
0000AC3C                          6111  *        .......111......         LONG  EA,A@
0000AC3C                          6112  *        .......000......         EA,D@ BYTE (ADDRESS REGISTER DIRECT NOT ALLOWED)
0000AC3C                          6113  *        .......0........         EA,D@
0000AC3C                          6114  *        .......1........         D@,EA
0000AC3C                          6115  *        ........00......         BYTE
0000AC3C                          6116  *        ........01......         WORD
0000AC3C                          6117  *        ........10......         LONG
0000AC3C                          6118  *
0000AC3C                          6119m          LONG
0000AC3E                          6120  *                               ADD <EA>,A@   CMP <EA>,A@   SUB <EA>,A@
0000AC3E                          6121  FORM10EX DS      0              ADD  CMP  SUB
0000AC3E  3E3C 0FFF               6122           MOVE.W  #$FFF,D7       ALL MODES ALLOWED
0000AC42  2004                    6123           MOVE.L  D4,D0
0000AC44  0240 01C0               6124           ANDI.W  #$01C0,D0
0000AC48  673A                    6125           BEQ.S   FORM103        .......000......
0000AC4A  0C40 01C0               6126           CMPI.W  #$01C0,D0
0000AC4E  6710                    6127           BEQ.S   FORM10E3       .......111......
0000AC50  0C40 00C0               6128           CMPI.W  #$00C0,D0
0000AC54  661E                    6129           BNE.S   FORM10E6
0000AC56                          6130  
0000AC56  1AFC 002E               6131           MOVE.B  #'.',(A5)+     .......011......       STORE PERIOD
0000AC5A  1AFC 0057               6132           MOVE.B  #'W',(A5)+
0000AC5E  6008                    6133           BRA.S   FORM10E4
0000AC60                          6134  
0000AC60  1AFC 002E               6135  FORM10E3 MOVE.B  #'.',(A5)+
0000AC64  1AFC 004C               6136           MOVE.B  #'L',(A5)+
0000AC68                          6137  
0000AC68  61CE                    6138  FORM10E4 BSR     EEA10
0000AC6A                          6139  
0000AC6A  1CC5                    6140           MOVE.B  D5,(A6)+       STORE COMMA SEPARATOR
0000AC6C                          6141  
0000AC6C  3814                    6142           MOVE.W  (A4),D4
0000AC6E  EF5C                    6143           ROL.W   #7,D4
0000AC70  618C                    6144           BSR     FORMREGA       <EA>,A@
0000AC72  603C                    6145           BRA.S   CS12           COMMON
0000AC74                          6146  
0000AC74  0814 0000               6147  FORM10E6 BTST.B  #0,(A4)
0000AC78  6620                    6148           BNE.S   FORM105        .......1........    D@,<EA>
0000AC7A  600C                    6149           BRA.S   FORM104        .......0........    <EA>,D@
0000AC7C                          6150  
0000AC7C                          6151  *  BIT   5432109876543210
0000AC7C                          6152  *        ..........AAAAAA       EFFECTIVE ADDRESS
0000AC7C                          6153  *        .......MMM......       OP-MODE
0000AC7C                          6154  *        ....RRR.........       D-REGISTER
0000AC7C                          6155  *        .......0........       EA,D@
0000AC7C                          6156  *        .......1........       D@,EA
0000AC7C                          6157  *        ........00......       BYTE
0000AC7C                          6158  *        ........01......       WORD
0000AC7C                          6159  *        ........10......       LONG
0000AC7C                          6160m          LONG
0000AC7E                          6161  FORM10   DS      0              AND  EOR  OR
0000AC7E  0814 0000               6162           BTST.B  #0,(A4)
0000AC82  6616                    6163           BNE.S   FORM105
0000AC84                          6164  
0000AC84  3E3C 0FFD               6165  FORM103  MOVE.W  #$FFD,D7       DATA ADDRESSING
0000AC88  6100 0310               6166  FORM104  BSR     FORMSIZE
0000AC8C  61AA                    6167           BSR     EEA10          <EA>,D@
0000AC8E                          6168  
0000AC8E  1CC5                    6169           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AC90                          6170  
0000AC90  1814                    6171           MOVE.B  (A4),D4
0000AC92  E20C                    6172           LSR.B   #1,D4
0000AC94  6100 FF78               6173           BSR     FORMREGD
0000AC98  6016                    6174           BRA.S   CS12           COMMON
0000AC9A                          6175  
0000AC9A  6100 02FE               6176  FORM105  BSR     FORMSIZE       D@,<EA>
0000AC9E  1814                    6177           MOVE.B  (A4),D4
0000ACA0  E20C                    6178           LSR.B   #1,D4
0000ACA2  6100 FF6A               6179           BSR     FORMREGD
0000ACA6                          6180  
0000ACA6  1CC5                    6181           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000ACA8                          6182  
0000ACA8  3814                    6183           MOVE.W  (A4),D4
0000ACAA  3E3C 01FD               6184           MOVE.W  #$1FD,D7       ALTERABLE MEMORY ADDRESSING
0000ACAE  6188                    6185           BSR     EEA10
0000ACB0  6000 0662               6186  CS12     BRA     COMMON
0000ACB4                          6187  
0000ACB4                          6188m          LONG
0000ACB6                          6189  *                               PEA     (JMP  JSR)
0000ACB6  3E3C 07E4               6190  FORM11   MOVE.W  #$7E4,D7       CONTROL ADDERSSING
0000ACBA  6100 FF7C               6191           BSR     EEA10
0000ACBE  60F0                    6192           BRA     CS12           COMMON
0000ACC0                          6193  
0000ACC0                          6194m          LONG
0000ACC2                          6195  *                               JMP  JSR
0000ACC2  2004                    6196  FORM11SL MOVE.L  D4,D0          LOOK FOR .S  OR  .L
0000ACC4  0240 003F               6197           ANDI.W  #$3F,D0
0000ACC8  0C40 0038               6198           CMPI.W  #$38,D0
0000ACCC  6608                    6199           BNE.S   FORM112        NOT .S
0000ACCE  1AFC 002E               6200           MOVE.B  #'.',(A5)+     PERIOD
0000ACD2  1AFC 0053               6201           MOVE.B  #'S',(A5)+     S
0000ACD6  0C40 0039               6202  FORM112  CMPI.W  #$39,D0
0000ACDA  6608                    6203           BNE.S   FORM114
0000ACDC  1AFC 002E               6204           MOVE.B  #'.',(A5)+     PERIOD
0000ACE0  1AFC 004C               6205           MOVE.B  #'L',(A5)+     L
0000ACE4  60D0                    6206  FORM114  BRA     FORM11
0000ACE6                          6207  
0000ACE6                          6208  *  BIT   5432109876543210
0000ACE6                          6209  *        ....XXX.....0...       DATA DESTINATION REGISTER
0000ACE6                          6210  *        ....XXX.....1...       ADDRESS REGISTER
0000ACE6                          6211  *        ....XXX.00......       BYTE
0000ACE6                          6212  *        ........01......       WORD
0000ACE6                          6213  *        ........10......       LONG
0000ACE6                          6214  *        ............0...       DATA REGISTER TO DATA REGISTER
0000ACE6                          6215  *        ............1...       MEMORY TO MEMORY
0000ACE6                          6216  *        ............0XXX       DATA SOURCE REGISTER
0000ACE6                          6217  *        ............1XXX       ADDRESS SOURCE REGISTER
0000ACE6                          6218  *
0000ACE6                          6219m          LONG
0000ACE6                          6220  FORM12   DS      0              ABCD  ADDX  SBCD  SUBX
0000ACE6  6100 02B2               6221           BSR     FORMSIZE
0000ACEA                          6222  
0000ACEA  0804 0003               6223           BTST    #3,D4
0000ACEE  6610                    6224           BNE.S   FORM125
0000ACF0                          6225  
0000ACF0  6100 FF1C               6226           BSR     FORMREGD       D@,D@;   FORMAT SOURCE
0000ACF4                          6227  
0000ACF4  1CC5                    6228           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000ACF6                          6229  
0000ACF6  1814                    6230           MOVE.B  (A4),D4
0000ACF8  E20C                    6231           LSR.B   #1,D4
0000ACFA  6100 FF12               6232           BSR     FORMREGD       FORMAT DESTINATION
0000ACFE  6046                    6233           BRA.S   CS11           COMMON
0000AD00                          6234  
0000AD00  1CFC 002D               6235  FORM125  MOVE.B  #'-',(A6)+     -
0000AD04  1CFC 0028               6236           MOVE.B  #'(',(A6)+     (
0000AD08  6100 FEF4               6237           BSR     FORMREGA       A@    SOURCE
0000AD0C                          6238  
0000AD0C  203C 282D2C29           6239           MOVE.L  #'(-,)',D0     ),-(
0000AD12  6152                    6240           BSR.S   SCHR           STORE CHARS
0000AD14                          6241  
0000AD14  1814                    6242           MOVE.B  (A4),D4
0000AD16  E20C                    6243           LSR.B   #1,D4
0000AD18  6100 FEE4               6244           BSR     FORMREGA       A@   DESTINATION
0000AD1C  1CFC 0029               6245           MOVE.B  #')',(A6)+
0000AD20  6024                    6246           BRA.S   CS11           COMMON
0000AD22                          6247  
0000AD22                          6248  *  BIT   5432109876543210
0000AD22                          6249  *        ....XXX.....1...       ADDRESS REGISTER    DESTINATION
0000AD22                          6250  *        ....XXX.00......       BYTE
0000AD22                          6251  *        ........01......       WORD
0000AD22                          6252  *        ........10......       LONG
0000AD22                          6253  *        ............1...       MEMORY TO MEMORY
0000AD22                          6254  *        ............1XXX       ADDRESS SOURCE REGISTER
0000AD22                          6255  *
0000AD22                          6256m          LONG
0000AD22                          6257  FORM12A  DS      0              CMPM
0000AD22  6100 0276               6258           BSR     FORMSIZE
0000AD26                          6259  
0000AD26  1CFC 0028               6260           MOVE.B  #'(',(A6)+     (
0000AD2A  6100 FED2               6261           BSR     FORMREGA       A@
0000AD2E                          6262  
0000AD2E  203C 282C2B29           6263           MOVE.L  #'(,+)',D0     )+,(
0000AD34  6130                    6264           BSR.S   SCHR           STORE CHARS
0000AD36                          6265  
0000AD36  1814                    6266           MOVE.B  (A4),D4
0000AD38  E20C                    6267           LSR.B   #1,D4
0000AD3A  6100 FEC2               6268           BSR     FORMREGA       A@
0000AD3E  1CFC 0029               6269           MOVE.B  #')',(A6)+
0000AD42  1CFC 002B               6270           MOVE.B  #'+',(A6)+
0000AD46  6000 05CC               6271  CS11     BRA     COMMON
0000AD4A                          6272  
0000AD4A                          6273m          LONG
0000AD4A  6000 021E               6274  IQUICK   BRA     IQUICKA        ADDQ  SUBQ
0000AD4E                          6275  
0000AD4E                          6276  *  BIT   5432109876543210
0000AD4E                          6277  *        0111...0........       FIXED
0000AD4E                          6278  *        ....RRR.........       DATA REGISTER
0000AD4E                          6279  *        ........DDDDDDDD       SIGN EXTENDED DATA
0000AD4E                          6280  *
0000AD4E                          6281m          LONG
0000AD4E                          6282  IMOVEQ   DS      0
0000AD4E  1CFC 0023               6283           MOVE.B  #'#',(A6)+     IMMEDIATE
0000AD52                          6284  
0000AD52  3014                    6285           MOVE.W  (A4),D0
0000AD54  4880                    6286           EXT.W   D0
0000AD56  48C0                    6287           EXT.L   D0
0000AD58  6100 E174               6288           BSR     HEX2DEC        DECIMAL
0000AD5C                          6289  
0000AD5C  1CC5                    6290           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AD5E                          6291  
0000AD5E  EF5C                    6292           ROL.W   #7,D4
0000AD60  6100 FEAC               6293           BSR     FORMREGD
0000AD64  60E0                    6294           BRA     CS11           COMMON
0000AD66                          6295  
0000AD66  1CC0                    6296  SCHR     MOVE.B  D0,(A6)+       OUTPUT STRING
0000AD68  E088                    6297           LSR.L   #8,D0
0000AD6A  66FA                    6298           BNE     SCHR           MORE TO OUTPUT
0000AD6C  4E75                    6299           RTS
0000AD6E                          6300  
0000AD6E                          6301  * MOVE FROM SR  (STATUS REGISTER)
0000AD6E                          6302  *
0000AD6E                          6303m          LONG
0000AD6E  203C 2C525300           6304  IMVFSR   MOVE.L  #',RS'+0,D0   SR,
0000AD74                          6305  
0000AD74  61F0                    6306           BSR     SCHR
0000AD76  6100 02AC               6307           BSR     EEA            DATA ALTERABLE
0000AD7A  60CA                    6308           BRA     CS11           COMMON
0000AD7C                          6309  
0000AD7C                          6310  * MOVE FROM USP (USER STACK POINTER)
0000AD7C                          6311  *
0000AD7C                          6312m          LONG
0000AD7E  203C 2C505355           6313  IMVFUSP  MOVE.L  #',PSU',D0     USP,
0000AD84  61E0                    6314           BSR     SCHR
0000AD86  6100 FE76               6315           BSR     FORMREGA
0000AD8A  60BA                    6316           BRA     CS11           COMMON
0000AD8C                          6317  
0000AD8C                          6318  * MOVE TO SR (STATUS REGISTER)
0000AD8C                          6319  *
0000AD8C                          6320m          LONG
0000AD8E  3E3C 0FFD               6321  IMVTSR   MOVE.W  #$FFD,D7       DATA ADDRESSING
0000AD92  6100 0290               6322           BSR     EEA
0000AD96  203C 52532C00           6323           MOVE.L  #'RS,'+0,D0   ,SR
0000AD9C  61C8                    6324  IMVT44   BSR     SCHR
0000AD9E  60A6                    6325           BRA     CS11           COMMON
0000ADA0                          6326  
0000ADA0                          6327  * MOVE TO USP (USER STACK POINTER)
0000ADA0                          6328  *
0000ADA0                          6329m          LONG
0000ADA2  6100 FE5A               6330  IMVTUSP  BSR     FORMREGA
0000ADA6  203C 5053552C           6331           MOVE.L  #'PSU,',D0     ,USP
0000ADAC  60EE                    6332           BRA     IMVT44
0000ADAE                          6333  
0000ADAE                          6334  *  MOVE TO CCR (CONDITION CODE REGISTER)
0000ADAE                          6335  *
0000ADAE                          6336m          LONG
0000ADAE  3E3C 0FFD               6337  IMVTCCR  MOVE.W  #$FFD,D7       DATA ADDRESSING
0000ADB2  6100 0270               6338           BSR     EEA
0000ADB6  203C 5243432C           6339           MOVE.L  #'RCC,',D0     ,CCR
0000ADBC  60DE                    6340           BRA     IMVT44
0000ADBE                          6341  
0000ADBE                          6342  *  BIT   5432109876543210
0000ADBE                          6343  *        0000...1..001...       FIXED
0000ADBE                          6344  *        ....XXX.........       DATA REGISTER
0000ADBE                          6345  *        ........0.......       MEMORY TO REGISTER
0000ADBE                          6346  *        ........1.......       REGISTER TO MEMORY
0000ADBE                          6347  *        .........0......       WORD
0000ADBE                          6348  *        .........1......       LONG
0000ADBE                          6349  *        .............XXX       ADDRESS REGISTER
0000ADBE                          6350  *
0000ADBE                          6351m          LONG
0000ADBE                          6352  IMOVEP   DS      0
0000ADBE  1AFC 002E               6353           MOVE.B  #'.',(A5)+     D@,#(A@)
0000ADC2  303C 4C57               6354           MOVE.W  #'LW',D0
0000ADC6  0804 0006               6355           BTST    #6,D4
0000ADCA  6702                    6356           BEQ.S   IMOVEP11       USE "W"
0000ADCC  E048                    6357           LSR.W   #8,D0          USE "L"
0000ADCE  1AC0                    6358  IMOVEP11 MOVE.B  D0,(A5)+       LENGTH
0000ADD0                          6359  
0000ADD0  1814                    6360           MOVE.B  (A4),D4
0000ADD2  E20C                    6361           LSR.B   #1,D4
0000ADD4                          6362  
0000ADD4  082C 0007 0001          6363           BTST.B  #7,1(A4)
0000ADDA  670E                    6364           BEQ.S   IMOVEP35
0000ADDC                          6365  
0000ADDC  6100 FE30               6366           BSR     FORMREGD       D@,$HHHH(A@)
0000ADE0                          6367  
0000ADE0  1CC5                    6368           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000ADE2                          6369  
0000ADE2  3814                    6370           MOVE.W  (A4),D4
0000ADE4  6112                    6371           BSR.S   IMOVEP66
0000ADE6  6000 052A               6372  CS20     BRA     COMMON4
0000ADEA                          6373  
0000ADEA  610C                    6374  IMOVEP35 BSR.S   IMOVEP66       $HHHH(A@),D@
0000ADEC                          6375  
0000ADEC  1CC5                    6376           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000ADEE                          6377  
0000ADEE  1814                    6378           MOVE.B  (A4),D4
0000ADF0  E20C                    6379           LSR.B   #1,D4
0000ADF2  6100 FE1A               6380           BSR     FORMREGD
0000ADF6  60EE                    6381           BRA     CS20           COMMON4
0000ADF8                          6382  
0000ADF8  1CFC 0024               6383  IMOVEP66 MOVE.B  #'$',(A6)+     FORMAT DISPLACEMENT
0000ADFC  302C 0002               6384           MOVE.W  2(A4),D0
0000AE00  6100 E7E0               6385           BSR     PNT4HX
0000AE04                          6386  
0000AE04  1CFC 0028               6387           MOVE.B  #'(',(A6)+
0000AE08                          6388  
0000AE08  3814                    6389           MOVE.W  (A4),D4
0000AE0A  6100 FDF2               6390           BSR     FORMREGA
0000AE0E  1CFC 0029               6391           MOVE.B  #')',(A6)+
0000AE12  4E75                    6392           RTS
0000AE14                          6393  
0000AE14                          6394m          LONG
0000AE16  6000 04FC               6395  SCOMMON  BRA     COMMON         NOP RESET RTE RTR RTS TRAPV
0000AE1A                          6396  
0000AE1A                          6397m          LONG
0000AE1A  6100 00EA               6398  ISCC     BSR     ICCCC          GET REST OF OP-CODE
0000AE1E  6100 0204               6399           BSR     EEA            DATA ALTERABLE
0000AE22  60F2                    6400           BRA     SCOMMON
0000AE24                          6401  
0000AE24                          6402  
0000AE24                          6403m          LONG
0000AE26                          6404  IDBCC    DS      0              DB--
0000AE26  3814                    6405           MOVE.W  (A4),D4
0000AE28  6100 FDE4               6406           BSR     FORMREGD
0000AE2C                          6407  
0000AE2C  1CC5                    6408           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AE2E  1CFC 0024               6409           MOVE.B  #'$',(A6)+     HEX FIELD TO FOLLOW
0000AE32                          6410  
0000AE32  6100 00D2               6411           BSR     ICCCC
0000AE36  602E                    6412           BRA.S   ICC55
0000AE38                          6413  
0000AE38                          6414  *  BIT   5432109876543210
0000AE38                          6415  *        0110............       FIXED
0000AE38                          6416  *        ....CCCC........       CONDITION
0000AE38                          6417  *        ........DDDDDDD0       DISPLACEMENT
0000AE38                          6418  *        ...............1       ERROR (ODD BOUNDRY DISPLACEMENT)
0000AE38                          6419  *
0000AE38                          6420m          LONG
0000AE3A                          6421  ICC      DS      0              B--
0000AE3A  6100 00CA               6422           BSR     ICCCC
0000AE3E                          6423  
0000AE3E  1CFC 0024               6424  IBSR     MOVE.B  #'$',(A6)+     BSR   BRA
0000AE42                          6425  
0000AE42  4A04                    6426           TST.B   D4
0000AE44  6720                    6427           BEQ.S   ICC55          16 BIT DISPLACEMENT
0000AE46                          6428  
0000AE46  1AFC 002E               6429           MOVE.B  #'.',(A5)+
0000AE4A  1AFC 0053               6430           MOVE.B  #'S',(A5)+
0000AE4E  4884                    6431           EXT.W   D4             8 BIT DISPLACEMENT
0000AE50                          6432  
0000AE50  48C4                    6433  ICC35    EXT.L   D4             SIGN-EXTENDED DISPLACEMENT
0000AE52  D8A9 FFFC               6434           ADD.L   HISPC(A1),D4   + PROGRAM COUNTER
0000AE56  5484                    6435           ADDQ.L  #2,D4          + TWO
0000AE58  2004                    6436           MOVE.L  D4,D0
0000AE5A                          6437  
0000AE5A  E284                    6438           ASR.L   #1,D4
0000AE5C  6500 04DE               6439           BCS     FERROR         ODD BOUNDRY DISPLACEMENT
0000AE60                          6440  
0000AE60  6100 E77A               6441           BSR     PNT6HX
0000AE64  60B0                    6442           BRA     SCOMMON
0000AE66                          6443  
0000AE66  5483                    6444  ICC55    ADDQ.L  #2,D3          SIZE
0000AE68  382C 0002               6445           MOVE.W  2(A4),D4
0000AE6C  1AFC 002E               6446           MOVE.B  #'.',(A5)+
0000AE70  1AFC 004C               6447           MOVE.B  #'L',(A5)+     .L FOR 16 BIT DISPLACEMENT
0000AE74  60DA                    6448           BRA     ICC35
0000AE76                          6449  
0000AE76                          6450m          LONG
0000AE76                          6451  *                               BCHG  BCLR  BSET  BTST
0000AE76                          6452  ISETD    DS      0              DYNAMIC BIT
0000AE76  EF5C                    6453           ROL.W   #7,D4
0000AE78  6100 FD94               6454           BSR     FORMREGD       DATA REGISTER
0000AE7C                          6455  
0000AE7C  1CC5                    6456  ISETD12  MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AE7E                          6457  
0000AE7E  3814                    6458           MOVE.W  (A4),D4
0000AE80  6100 01A2               6459           BSR     EEA            DATA ALTERABLE
0000AE84  6090                    6460  CS18     BRA     SCOMMON
0000AE86                          6461  
0000AE86                          6462m          LONG
0000AE86                          6463  *                            BCHG  BCLR  BSET  BTST
0000AE86                          6464  *  1ST WORD     .... .... ..XX XXXX    EA   DATA ALTERABLE ONLY
0000AE86                          6465  *  2ND WORD     0000 0000 000Y YYYY    BIT NUMBER
0000AE86                          6466  *
0000AE86                          6467  ISETS    DS      0              STATIC BIT
0000AE86  5483                    6468           ADDQ.L  #2,D3     SIZE
0000AE88  1CFC 0023               6469           MOVE.B  #'#',(A6)+     IMMEDIATE
0000AE8C                          6470  
0000AE8C  4280                    6471           CLR.L   D0
0000AE8E  302C 0002               6472           MOVE.W  2(A4),D0       GET BIT POSITION FROM 2ND WORD
0000AE92  2200                    6473           MOVE.L  D0,D1
0000AE94  EA89                    6474           LSR.L   #5,D1
0000AE96  6600 04A4               6475           BNE     FERROR
0000AE9A  6100 E032               6476           BSR     HEX2DEC        DECIMAL
0000AE9E                          6477  
0000AE9E  60DC                    6478           BRA     ISETD12
0000AEA0                          6479  
0000AEA0                          6480  *   BIT  5432109876543210
0000AEA0                          6481  *        ....XXX.........       IMMEDIATE COUNT/REGISTER
0000AEA0                          6482  *        .......0........       RIGHT SHIFT
0000AEA0                          6483  *        .......1........       LEFT SHIFT
0000AEA0                          6484  *        ........00......       BYTE
0000AEA0                          6485  *        ........01......       WORD
0000AEA0                          6486  *        ........10......       LONG
0000AEA0                          6487  *        ....0...11......       WORD (MEMORY)
0000AEA0                          6488  *        ....0...11AAAAAA       EFFECTIVE ADDRESS
0000AEA0                          6489  *        ..........0.....       SHIFT IMMEDIATE COUNT
0000AEA0                          6490  *        ..........1.....       SHIFT COUNT (MODULO 64) IN DATA REGISTER
0000AEA0                          6491  *
0000AEA0                          6492m          LONG
0000AEA2                          6493  ISHIFT   DS      0              AS-  LS-  RO-  ROX-
0000AEA2  303C 4C52               6494           MOVE.W  #'LR',D0
0000AEA6  0804 0008               6495           BTST    #8,D4          DIRECTION BIT
0000AEAA  6702                    6496           BEQ.S   ISHIFT13       RIGHT
0000AEAC  E048                    6497           LSR.W   #8,D0          LEFT
0000AEAE  1AC0                    6498  ISHIFT13 MOVE.B  D0,(A5)+       DIRECTION; "L" OR "R"
0000AEB0                          6499  
0000AEB0  3014                    6500           MOVE.W  (A4),D0
0000AEB2  0240 00C0               6501           ANDI.W  #$00C0,D0
0000AEB6  0C40 00C0               6502           CMPI.W  #$00C0,D0
0000AEBA  6730                    6503           BEQ.S   ISHIFTM1       MEMORY SHIFT
0000AEBC                          6504  
0000AEBC  6100 00DC               6505           BSR     FORMSIZE
0000AEC0                          6506  
0000AEC0  EF5C                    6507           ROL.W   #7,D4
0000AEC2  0804 000C               6508           BTST    #12,D4         I/R BIT
0000AEC6  6616                    6509           BNE.S   ISHIFT33       COUNT IN REGISTER
0000AEC8                          6510  
0000AEC8  0204 0007               6511           ANDI.B  #$07,D4        IMMEDIATE COUNT
0000AECC  6604                    6512           BNE.S   ISHIFT23
0000AECE  0004 0008               6513           ORI.B   #$08,D4        CHANGE ZERO TO EIGHT
0000AED2  0004 0030               6514  ISHIFT23 ORI.B   #'0',D4
0000AED6  1CFC 0023               6515           MOVE.B  #'#',(A6)+
0000AEDA  1CC4                    6516           MOVE.B  D4,(A6)+
0000AEDC  6004                    6517           BRA.S   ISHIFT44
0000AEDE                          6518  
0000AEDE  6100 FD2E               6519  ISHIFT33 BSR     FORMREGD
0000AEE2                          6520  
0000AEE2  1CC5                    6521  ISHIFT44 MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AEE4                          6522  
0000AEE4  3814                    6523           MOVE.W  (A4),D4
0000AEE6  6100 FD26               6524           BSR     FORMREGD
0000AEEA  6098                    6525  CS17     BRA     CS18           COMMON
0000AEEC                          6526  
0000AEEC  1AFC 002E               6527  ISHIFTM1 MOVE.B  #'.',(A5)+     PERIOD
0000AEF0  1AFC 0057               6528           MOVE.B  #'W',(A5)+     .WORD
0000AEF4                          6529  
0000AEF4  0804 000B               6530           BTST    #11,D4
0000AEF8  6600 0442               6531           BNE     FERROR         BIT 11 MUST BE ZERO
0000AEFC                          6532  
0000AEFC  3E3C 01FC               6533           MOVE.W  #$1FC,D7       MEMORY ALTERABLE ADDRESSING
0000AF00  6100 0122               6534           BSR     EEA
0000AF04  60E4                    6535           BRA     CS17           COMMON
0000AF06                          6536  
0000AF06  700F                    6537  ICCCC    MOVEQ   #$0F,D0        APPEND CONDITION CODE
0000AF08  C014                    6538           AND.B   (A4),D0        D0 = CCC
0000AF0A  E388                    6539           LSL.L   #1,D0          D0 = CCC*2
0000AF0C                          6540  
0000AF0C  323B 0010               6541           MOVE.W  BRTBL(PC,D0.W),D1  GET BRANCH MNEMONIC
0000AF10  1AC1                    6542           MOVE.B  D1,(A5)+           (REVERSED) FROM THE TABLE
0000AF12  E049                    6543           LSR.W   #8,D1              AND ADD THE NONBLANK PORTION
0000AF14  0C01 0020               6544           CMPI.B  #BLANK,D1          TO THE BUFFER.
0000AF18  6702                    6545           BEQ.S   ICCCC9
0000AF1A  1AC1                    6546           MOVE.B  D1,(A5)+
0000AF1C  4E75                    6547  ICCCC9   RTS
0000AF1E                          6548  
0000AF1E= 20 54                   6549  BRTBL    DC.B    ' T'      'T '  BRA ACCEPTED
0000AF20= 20 46                   6550           DC.B    ' F'      'F '
0000AF22= 49 48                   6551           DC.B    'IH'      'HI'
0000AF24= 53 4C                   6552           DC.B    'SL'      'LS'
0000AF26= 43 43                   6553           DC.B    'CC'      'CC'
0000AF28= 53 43                   6554           DC.B    'SC'      'CS'
0000AF2A= 45 4E                   6555           DC.B    'EN'      'NE'
0000AF2C= 51 45                   6556           DC.B    'QE'      'EQ'
0000AF2E= 43 56                   6557           DC.B    'CV'      'VC'
0000AF30= 53 56                   6558           DC.B    'SV'      'VS'
0000AF32= 4C 50                   6559           DC.B    'LP'      'PL'
0000AF34= 49 4D                   6560           DC.B    'IM'      'MI'
0000AF36= 45 47                   6561           DC.B    'EG'      'GE'
0000AF38= 54 4C                   6562           DC.B    'TL'      'LT'
0000AF3A= 54 47                   6563           DC.B    'TG'      'GT'
0000AF3C= 45 4C                   6564           DC.B    'EL'      'LE'
0000AF3E                          6565  
0000AF3E                          6566  *   BIT  5432109876543210
0000AF3E                          6567  *        ....RRRMMM......    DESTINATION REGISTER MODE
0000AF3E                          6568  *        ..........MMMRRR    SOURCE MODE REGISTER
0000AF3E                          6569  *
0000AF3E                          6570  * IF BYTE SIZE; ADDRESS DIRECT NOT ALLOWED AS SOURCE
0000AF3E                          6571  *
0000AF3E                          6572  IMOVEA1  DS      0
0000AF3E  3E3C 0FFF               6573           MOVE.W  #$FFF,D7       ALL MODES
0000AF42  6100 00E0               6574           BSR     EEA
0000AF46                          6575  
0000AF46  1CC5                    6576           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AF48                          6577  
0000AF48  3814                    6578           MOVE.W  (A4),D4        ....RRRMMM......
0000AF4A  E24C                    6579           LSR.W   #1,D4          .....RRRMMM.....
0000AF4C  EA0C                    6580           LSR.B   #5,D4          .....RRR.....MMM
0000AF4E  E05C                    6581           ROR.W   #8,D4          .....MMM.....RRR
0000AF50  EB0C                    6582           LSL.B   #5,D4          .....MMMRRR.....
0000AF52  EA4C                    6583           LSR.W   #5,D4          ..........MMMRRR
0000AF54                          6584  
0000AF54                          6585  * IF .BYTE DESTINATION A@ NOT ALLOWED
0000AF54  3E3C 01FF               6586           MOVE.W  #$1FF,D7       DATA ALTERABLE + A@
0000AF58  1014                    6587           MOVE.B  (A4),D0
0000AF5A  0C00 0001               6588           CMPI.B  #$01,D0
0000AF5E  6604                    6589           BNE.S   IMOVE19        NOT BYTE SIZE
0000AF60                          6590  
0000AF60  3E3C 01FD               6591           MOVE.W  #$1FD,D7       DATA ALTERABLE
0000AF64                          6592  IMOVE19
0000AF64                          6593  
0000AF64  6100 00BE               6594           BSR     EEA
0000AF68  602C                    6595           BRA.S   CS19           COMMON
0000AF6A                          6596  
0000AF6A                          6597  *  IF BYTE; ADDRESS REGISTER DIRECT NOT ALLOWED
0000AF6A                          6598  IQUICKA  DS      0              ADDQ  SUBQ
0000AF6A  612E                    6599           BSR.S   FORMSIZE
0000AF6C                          6600  
0000AF6C  1CFC 0023               6601           MOVE.B  #'#',(A6)+
0000AF70  EF5C                    6602           ROL.W   #7,D4
0000AF72  0204 0007               6603           ANDI.B  #7,D4
0000AF76  6604                    6604           BNE.S   IQUICK21
0000AF78  0004 0008               6605           ORI.B   #8,D4          MAKE ZERO INTO EIGHT
0000AF7C  0004 0030               6606  IQUICK21 ORI.B   #'0',D4        MAKE ASCII
0000AF80  1CC4                    6607           MOVE.B  D4,(A6)+
0000AF82                          6608  
0000AF82  1CC5                    6609           MOVE.B  D5,(A6)+       COMMA SEPARATOR
0000AF84                          6610  
0000AF84  3814                    6611           MOVE.W  (A4),D4
0000AF86                          6612  
0000AF86  3014                    6613           MOVE.W  (A4),D0
0000AF88  0240 00C0               6614           ANDI.W  #$00C0,D0
0000AF8C  6704                    6615           BEQ.S   IQUICK31       DATA ALTERABLE
0000AF8E  3E3C 01FF               6616           MOVE.W  #$1FF,D7       ALTERABLE ADDRESSING
0000AF92  6100 0090               6617  IQUICK31 BSR     EEA
0000AF96  6000 037C               6618  CS19     BRA     COMMON
0000AF9A                          6619  
0000AF9A                          6620  *  BIT   5432109876543210
0000AF9A                          6621  *        ........00......       BYTE
0000AF9A                          6622  *        ........01......       WORD
0000AF9A                          6623  *        ........10......       LONG
0000AF9A                          6624  *        ........11......       ERROR
0000AF9A                          6625  *
0000AF9A                          6626  FORMSIZE DS      0
0000AF9A  3414                    6627           MOVE.W  (A4),D2
0000AF9C  1AFC 002E               6628           MOVE.B  #'.',(A5)+     STORE PERIOD
0000AFA0  EC4A                    6629           LSR.W   #6,D2
0000AFA2  0242 0003               6630           ANDI.W  #$03,D2
0000AFA6  6606                    6631           BNE.S   FORM91
0000AFA8  1AFC 0042               6632           MOVE.B  #'B',(A5)+     STORE "B"
0000AFAC  6016                    6633           BRA.S   FORM95
0000AFAE                          6634  
0000AFAE  103C 0057               6635  FORM91   MOVE.B  #'W',D0
0000AFB2  0C02 0001               6636           CMPI.B  #1,D2
0000AFB6  670A                    6637           BEQ.S   FORM93
0000AFB8  103C 004C               6638           MOVE.B  #'L',D0
0000AFBC  0C02 0002               6639           CMPI.B  #2,D2
0000AFC0  665E                    6640           BNE.S   FE10           FERROR
0000AFC2  1AC0                    6641  FORM93   MOVE.B  D0,(A5)+       STORE "W" OR "L"
0000AFC4  4E75                    6642  FORM95   RTS
0000AFC6                          6643  
0000AFC6  6100 FC46               6644  EA000    BSR     FORMREGD
0000AFCA  0807 0000               6645           BTST    #0,D7
0000AFCE  6750                    6646           BEQ.S   FE10           FERROR
0000AFD0  4E75                    6647           RTS
0000AFD2                          6648  
0000AFD2  6100 FC2A               6649  EA001    BSR     FORMREGA
0000AFD6  0807 0001               6650           BTST    #1,D7
0000AFDA  6744                    6651           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
0000AFDC  4E75                    6652           RTS
0000AFDE                          6653  
0000AFDE  1CFC 0028               6654  EA010    MOVE.B  #'(',(A6)+
0000AFE2  6100 FC1A               6655           BSR     FORMREGA
0000AFE6  1CFC 0029               6656           MOVE.B  #')',(A6)+
0000AFEA  0807 0002               6657           BTST    #2,D7
0000AFEE  6730                    6658           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
0000AFF0  4E75                    6659           RTS
0000AFF2                          6660  
0000AFF2  1CFC 0028               6661  EA011    MOVE.B  #'(',(A6)+
0000AFF6  6100 FC06               6662           BSR     FORMREGA
0000AFFA  1CFC 0029               6663           MOVE.B  #')',(A6)+
0000AFFE  1CFC 002B               6664           MOVE.B  #'+',(A6)+
0000B002  0807 0003               6665           BTST    #3,D7
0000B006  6718                    6666           BEQ.S   FE10           FERROR  THIS MODE NOT ALLOWED
0000B008  4E75                    6667  EA011RTS RTS
0000B00A                          6668  
0000B00A  1CFC 002D               6669  EA100    MOVE.B  #'-',(A6)+
0000B00E  1CFC 0028               6670           MOVE.B  #'(',(A6)+
0000B012  6100 FBEA               6671           BSR     FORMREGA
0000B016  1CFC 0029               6672           MOVE.B  #')',(A6)+
0000B01A  0807 0004               6673           BTST    #4,D7
0000B01E  66E8                    6674           BNE     EA011RTS
0000B020  6000 031A               6675  FE10     BRA     FERROR         THIS MODE NOT ALLOWED
0000B024                          6676  
0000B024                          6677  *  ENTER       A4 = POINTER TO FIRST WORD
0000B024                          6678  *              D3 = OFFSET TO EXTENSION
0000B024                          6679  *              D4 = VALUE TO PROCESS
0000B024                          6680  *              D7 = MODES ALLOWED MASK
0000B024                          6681  *
0000B024                          6682  EEA      DS      0
0000B024  2004                    6683           MOVE.L  D4,D0
0000B026  E648                    6684           LSR.W   #3,D0
0000B028  0240 0007               6685           ANDI.W  #$7,D0
0000B02C  6798                    6686           BEQ     EA000
0000B02E                          6687  
0000B02E  0C00 0001               6688           CMPI.B  #1,D0
0000B032  679E                    6689           BEQ     EA001
0000B034                          6690  
0000B034  0C00 0002               6691           CMPI.B  #2,D0
0000B038  67A4                    6692           BEQ     EA010
0000B03A                          6693  
0000B03A  0C00 0003               6694           CMPI.B  #3,D0
0000B03E  67B2                    6695           BEQ     EA011
0000B040                          6696  
0000B040  0C00 0004               6697           CMPI.B  #4,D0
0000B044  67C4                    6698           BEQ     EA100
0000B046                          6699  
0000B046  0C00 0005               6700           CMPI.B  #5,D0
0000B04A  6760                    6701           BEQ.S   EA101
0000B04C                          6702  
0000B04C  0C00 0007               6703           CMPI.B  #7,D0
0000B050  6770                    6704           BEQ.S   EA111
0000B052                          6705  
0000B052                          6706  *    EXTENSION WORD
0000B052                          6707  *   BIT  5432109876543210
0000B052                          6708  *        0...............    DATA REGISTER
0000B052                          6709  *        1...............    ADDRESS REGISTER
0000B052                          6710  *        .RRR............    REGISTER
0000B052                          6711  *        ....0...........    SIGN EXTENDED, LOW ORDER INTEGER IN INDEX REG
0000B052                          6712  *        ....1...........    LONG VALUE IN INDEX REGISTER
0000B052                          6713  *        .....000........
0000B052                          6714  *        ........DDDDDDDD    DISPLACEMENT INTEGER
0000B052                          6715  *
0000B052                          6716  * EA110            ADDRESS REGISTER INDIRECT WITH INDEX
0000B052                          6717  
0000B052  0807 0006               6718           BTST    #6,D7
0000B056  67C8                    6719           BEQ     FE10           FERROR  THIS MODE NOT ALLOWED
0000B058                          6720  
0000B058  3234 3000               6721           MOVE.W  (A4,D3),D1
0000B05C  0241 0700               6722           ANDI.W  #$0700,D1
0000B060  66BE                    6723           BNE     FE10           FERROR  BITS 10-8 MUST BE ZERO
0000B062                          6724  
0000B062  3034 3000               6725           MOVE.W  (A4,D3),D0     D0 = DISPLACEMENT
0000B066  4880                    6726           EXT.W   D0
0000B068  48C0                    6727           EXT.L   D0
0000B06A  6100 DE62               6728           BSR     HEX2DEC        DECIMAL
0000B06E  1CFC 0028               6729           MOVE.B  #'(',(A6)+     (
0000B072                          6730  
0000B072  6100 FB8A               6731           BSR     FORMREGA       XX(A@
0000B076                          6732  
0000B076  1CFC 002C               6733           MOVE.B  #',',(A6)+     XX(A@,
0000B07A                          6734  
0000B07A  1834 3000               6735           MOVE.B  (A4,D3),D4
0000B07E  E804                    6736           ASR.B   #4,D4
0000B080  6A06                    6737           BPL.S   EA1105
0000B082  6100 FB7A               6738           BSR     FORMREGA
0000B086  6004                    6739           BRA.S   EA1107
0000B088                          6740  
0000B088  6100 FB84               6741  EA1105   BSR     FORMREGD
0000B08C  1CFC 002E               6742  EA1107   MOVE.B  #'.',(A6)+     XX(A@,X@.
0000B090                          6743  
0000B090  3834 3000               6744           MOVE.W  (A4,D3),D4     D4 = R@
0000B094  103C 0057               6745           MOVE.B  #'W',D0        ..........W
0000B098  0804 000B               6746           BTST    #11,D4
0000B09C  6704                    6747           BEQ.S   EA1109
0000B09E  103C 004C               6748           MOVE.B  #'L',D0        ..........L
0000B0A2  1CC0                    6749  EA1109   MOVE.B  D0,(A6)+
0000B0A4  1CFC 0029               6750           MOVE.B  #')',(A6)+     ...........)
0000B0A8  5483                    6751           ADDQ.L  #2,D3
0000B0AA  4E75                    6752           RTS
0000B0AC                          6753  
0000B0AC                          6754  * ADDRESS REGISTER INDIRECT WITH DISPLACEMENT
0000B0AC                          6755  *
0000B0AC  0807 0005               6756  EA101    BTST    #5,D7          101000;   DIS(A@)
0000B0B0  6756                    6757           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
0000B0B2                          6758  
0000B0B2  3034 3000               6759           MOVE.W  (A4,D3),D0
0000B0B6  48C0                    6760           EXT.L   D0
0000B0B8  6100 DE14               6761           BSR     HEX2DEC        DECIMAL
0000B0BC  5483                    6762           ADDQ.L  #2,D3          SIZE
0000B0BE  6000 FF1E               6763           BRA     EA010
0000B0C2                          6764  
0000B0C2                          6765  *  111000        ABSOLUTE SHORT
0000B0C2                          6766  *  111001        ABSOLUTE LONG
0000B0C2                          6767  *  111010        PROGRAM COUNTER WITH DISPLACEMENT
0000B0C2                          6768  *  111011        PROGRAM COUNTER WITH INDEX
0000B0C2                          6769  *  111100        IMMEDIATE OR STATUS REG
0000B0C2                          6770  *
0000B0C2                          6771  EA111
0000B0C2  0244 0007               6772           ANDI.W  #7,D4
0000B0C6  6618                    6773           BNE.S   EA1112
0000B0C8                          6774  
0000B0C8  0807 0007               6775           BTST    #7,D7
0000B0CC  673A                    6776           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
0000B0CE                          6777  
0000B0CE  3034 3000               6778           MOVE.W  (A4,D3),D0     111000;   ABSOLUTE SHORT
0000B0D2  48C0                    6779           EXT.L   D0
0000B0D4  1CFC 0024               6780           MOVE.B  #'$',(A6)+
0000B0D8  6100 E4FA               6781           BSR     PNT8HX         SIGN EXTENDED VALUE
0000B0DC  5483                    6782           ADDQ.L  #2,D3          SIZE + 2
0000B0DE  4E75                    6783           RTS
0000B0E0                          6784  
0000B0E0  0C04 0001               6785  EA1112   CMPI.B  #1,D4
0000B0E4  6616                    6786           BNE.S   EA1113
0000B0E6                          6787  
0000B0E6  0807 0008               6788           BTST    #8,D7
0000B0EA  671C                    6789           BEQ.S   FE11           FERROR;  THIS MODE NOT ALLOWED
0000B0EC                          6790  
0000B0EC  1CFC 0024               6791           MOVE.B  #'$',(A6)+     HEX
0000B0F0  2034 3000               6792           MOVE.L  (A4,D3),D0     111001;     ABSOLUTE LONG
0000B0F4  6100 E4DE               6793           BSR     PNT8HX
0000B0F8                          6794  *-       MOVE.B  #'.',(A6)+     FORCE LONG FORMAT
0000B0F8                          6795  *-       MOVE.B  #'L',(A6)+     IE   .L
0000B0F8  5883                    6796           ADDQ.L  #4,D3
0000B0FA  4E75                    6797           RTS
0000B0FC                          6798  
0000B0FC  0C04 0002               6799  EA1113   CMPI.B  #2,D4
0000B100  662C                    6800           BNE.S   EA1114
0000B102                          6801  
0000B102  0807 0009               6802           BTST    #9,D7
0000B106  6604                    6803           BNE.S   EA1113A
0000B108  6000 0232               6804  FE11     BRA     FERROR         THIS MODE NOT ALLOWED
0000B10C                          6805  EA1113A
0000B10C                          6806  
0000B10C  3034 3000               6807           MOVE.W  (A4,D3),D0     111010;  PC + DISPLACEMENT  DESTINATION(PC)
0000B110  48C0                    6808           EXT.L   D0
0000B112  D0A9 FFFC               6809           ADD.L   HISPC(A1),D0
0000B116  5480                    6810           ADDQ.L  #2,D0
0000B118  1CFC 0024               6811           MOVE.B  #'$',(A6)+     HEX "$"
0000B11C  6100 E4B6               6812           BSR     PNT8HX         DESTINATION
0000B120  203C 29435028           6813           MOVE.L  #')CP(',D0     (PC)
0000B126  6100 FC3E               6814           BSR     SCHR           STORE WORD
0000B12A  5483                    6815           ADDQ.L  #2,D3          SIZE
0000B12C  4E75                    6816           RTS
0000B12E                          6817  
0000B12E  0C04 0003               6818  EA1114   CMPI.B  #3,D4
0000B132  6664                    6819           BNE.S   EA1115
0000B134                          6820  
0000B134                          6821  * PROGRAM COUNTER WITH INDEX    DESTINATION(PC,R@.X)
0000B134                          6822  *
0000B134                          6823  *        5432109876543210       SECOND WORD
0000B134                          6824  *        0...............       DATA REGISTER
0000B134                          6825  *        1...............       ADDRESS REGISTER
0000B134                          6826  *        .XXX............       REGISTER
0000B134                          6827  *        ....0...........       SIGN-EXTENDED, LOW ORDER WORD INTEGER
0000B134                          6828  *                               ..IN INDEX REGISTER
0000B134                          6829  *        ....1...........       LONG VALUE IN INDEX REGISTER
0000B134                          6830  *        .....000........
0000B134                          6831  *        ........XXXXXXXX       DISPLACEMENT INTEGER
0000B134                          6832  *
0000B134  0807 000A               6833           BTST    #10,D7
0000B138  67CE                    6834           BEQ     FE11           FERROR  THIS MODE NOT ASLLOWED
0000B13A                          6835  
0000B13A  3234 3000               6836           MOVE.W  (A4,D3),D1
0000B13E  0241 0700               6837           ANDI.W  #$0700,D1
0000B142  66C4                    6838           BNE     FE11           FERROR;  BITS 10-8 MUST BE ZERO
0000B144                          6839  
0000B144  1034 3001               6840           MOVE.B  1(A4,D3),D0    111100;   DESTINATION(PC,R@.X)
0000B148  4880                    6841           EXT.W   D0
0000B14A  48C0                    6842           EXT.L   D0
0000B14C  D0A9 FFFC               6843           ADD.L   HISPC(A1),D0
0000B150  5480                    6844           ADDQ.L  #2,D0
0000B152  1CFC 0024               6845           MOVE.B  #'$',(A6)+     HEX "$"
0000B156  6100 E47C               6846           BSR     PNT8HX         DESTINATION
0000B15A                          6847  
0000B15A  203C 2C435028           6848           MOVE.L  #',CP(',D0
0000B160  6100 FC04               6849           BSR     SCHR           DES(PC,
0000B164                          6850  
0000B164  3834 3000               6851           MOVE.W  (A4,D3),D4
0000B168  E95C                    6852           ROL.W   #4,D4
0000B16A  0804 0003               6853           BTST    #3,D4
0000B16E  6706                    6854           BEQ.S   EAF25
0000B170  6100 FA8C               6855           BSR     FORMREGA
0000B174  6004                    6856           BRA.S   EAF27
0000B176  6100 FA96               6857  EAF25    BSR     FORMREGD       DES(PC,R@
0000B17A                          6858  EAF27
0000B17A                          6859  
0000B17A  1CFC 002E               6860           MOVE.B  #'.',(A6)+     DES(PC,R@.
0000B17E                          6861  
0000B17E  3834 3000               6862           MOVE.W  (A4,D3),D4
0000B182  303C 4C57               6863           MOVE.W  #'LW',D0
0000B186  0804 000B               6864           BTST    #11,D4
0000B18A  6702                    6865           BEQ.S   EAF35
0000B18C  E048                    6866           LSR.W   #8,D0
0000B18E  1CC0                    6867  EAF35    MOVE.B  D0,(A6)+       DES(PC,R@.X
0000B190                          6868  
0000B190  1CFC 0029               6869           MOVE.B  #')',(A6)+     DES(PC,R@.X)
0000B194  5483                    6870           ADDQ.L  #2,D3
0000B196  4E75                    6871           RTS
0000B198                          6872  
0000B198                          6873  *   BIT  5432109876543210
0000B198                          6874  *        ..........111100       FIRST WORD;  #<IMMEDIATE>
0000B198                          6875  *
0000B198  0C04 0004               6876  EA1115   CMPI.B  #4,D4
0000B19C  6600 FF6A               6877           BNE     FE11           FERROR
0000B1A0                          6878  
0000B1A0  0807 000B               6879           BTST    #11,D7
0000B1A4  6700 FF62               6880           BEQ     FE11           FERROR;  THIS MODE NOT ALLOWED
0000B1A8                          6881  
0000B1A8  1CFC 0023               6882           MOVE.B  #'#',(A6)+     IMMEDIATE
0000B1AC                          6883  
0000B1AC  122D FFFF               6884           MOVE.B  -1(A5),D1
0000B1B0  0C01 004C               6885           CMPI.B  #'L',D1
0000B1B4  6724                    6886           BEQ.S   EA11155        LONG
0000B1B6                          6887  
0000B1B6  3034 3000               6888           MOVE.W  (A4,D3),D0
0000B1BA                          6889  
0000B1BA  0C01 0042               6890           CMPI.B  #'B',D1
0000B1BE  6610                    6891           BNE.S   EA11153        .WORD
0000B1C0                          6892  
0000B1C0                          6893  * BYTE SIZE; DATA ALLOWED
0000B1C0                          6894  *  0000 0000 XXXX XXXX
0000B1C0                          6895  *  1111 1111 1XXX XXXX
0000B1C0  2200                    6896           MOVE.L  D0,D1
0000B1C2  E049                    6897           LSR.W   #8,D1
0000B1C4  670A                    6898           BEQ.S   EA11153
0000B1C6  2200                    6899           MOVE.L  D0,D1
0000B1C8  EE41                    6900           ASR.W   #7,D1
0000B1CA  5241                    6901           ADDQ.W  #1,D1
0000B1CC  6600 FF3A               6902           BNE     FE11           FERROR
0000B1D0                          6903  
0000B1D0  48C0                    6904  EA11153  EXT.L   D0
0000B1D2  6100 DCFA               6905           BSR     HEX2DEC
0000B1D6  5483                    6906           ADDQ.L  #2,D3
0000B1D8  4E75                    6907           RTS
0000B1DA                          6908  
0000B1DA  2034 3000               6909  EA11155  MOVE.L  (A4,D3),D0
0000B1DE  6100 DCEE               6910           BSR     HEX2DEC
0000B1E2  5883                    6911           ADDQ.L  #4,D3          SIZE
0000B1E4  4E75                    6912           RTS
0000B1E6                          6913  
0000B1E6  1AFC 002E               6914  MOVEMS   MOVE.B  #'.',(A5)+     PERIOD
0000B1EA  303C 4C57               6915           MOVE.W  #'LW',D0
0000B1EE  0804 0006               6916           BTST    #6,D4
0000B1F2  6702                    6917           BEQ.S   MOVEMS2
0000B1F4  E048                    6918           LSR.W   #8,D0
0000B1F6  1AC0                    6919  MOVEMS2  MOVE.B  D0,(A5)+       SIZE
0000B1F8  4E75                    6920           RTS
0000B1FA                          6921  
0000B1FA                          6922  * MOVEM - REGISTER EXPANSION
0000B1FA                          6923  *
0000B1FA                          6924  MOVEMR   DS      0
0000B1FA  342C 0002               6925           MOVE.W  2(A4),D2       D2 = SECOND WORD
0000B1FE  7020                    6926           MOVEQ   #$20,D0        D0 = SPACE
0000B200  7E2F                    6927           MOVEQ   #$2F,D7        D7 = /
0000B202  538E                    6928           SUBQ.L  #1,A6          ADJUST STORE POINTER
0000B204  7A30                    6929           MOVEQ   #$30,D5        D5 = REGISTER #
0000B206  383C 4144               6930           MOVE.W  #'AD',D4       D4 = REG CLASS
0000B20A                          6931  
0000B20A  0302                    6932  MOVEMR11 BTST    D1,D2
0000B20C  6730                    6933           BEQ.S   MOVEMR77       BIT RESET
0000B20E                          6934  
0000B20E  B016                    6935           CMP.B   (A6),D0        BIT SET
0000B210  6612                    6936           BNE.S   MOVEMR44       NOT SPACE
0000B212                          6937  
0000B212  1D44 0001               6938  MOVEMR33 MOVE.B  D4,1(A6)       REG TYPE
0000B216  1D45 0002               6939           MOVE.B  D5,2(A6)       REG #
0000B21A  1D7C 002D 0003          6940           MOVE.B  #'-',3(A6)     -
0000B220  568E                    6941           ADDQ.L  #3,A6
0000B222  602E                    6942           BRA.S   MOVEMR88
0000B224                          6943  
0000B224  0C16 002C               6944  MOVEMR44 CMPI.B  #',',(A6)
0000B228  67E8                    6945           BEQ     MOVEMR33       COMMA SEPARATOR
0000B22A                          6946  
0000B22A  BE16                    6947           CMP.B   (A6),D7        / SEPARATOR
0000B22C  67E4                    6948           BEQ     MOVEMR33
0000B22E                          6949  
0000B22E  1D44 0001               6950           MOVE.B  D4,1(A6)       REG TYPE
0000B232  1D45 0002               6951           MOVE.B  D5,2(A6)       REG #
0000B236  1D7C 002D 0003          6952           MOVE.B  #'-',3(A6)     - SEPARATOR
0000B23C  6014                    6953           BRA.S   MOVEMR88
0000B23E                          6954  
0000B23E  0C16 002C               6955  MOVEMR77 CMPI.B  #',',(A6)
0000B242  670E                    6956           BEQ.S   MOVEMR88       COMMA
0000B244                          6957  
0000B244  B016                    6958           CMP.B   (A6),D0
0000B246  670A                    6959           BEQ.S   MOVEMR88       SPACE
0000B248  B02E 0001               6960           CMP.B   1(A6),D0
0000B24C  6702                    6961           BEQ.S   MOVEMR79       SPACE
0000B24E  568E                    6962           ADDQ.L  #3,A6
0000B250  1C87                    6963  MOVEMR79 MOVE.B  D7,(A6)        / SEPARATOR
0000B252                          6964  
0000B252  5285                    6965  MOVEMR88 ADDQ.L  #1,D5
0000B254  D286                    6966           ADD.L   D6,D1          D1 = BIT POSITION
0000B256  0C05 0038               6967           CMPI.B  #'8',D5
0000B25A  66AE                    6968           BNE     MOVEMR11
0000B25C                          6969  
0000B25C  B016                    6970           CMP.B   (A6),D0        SPACE
0000B25E  670A                    6971           BEQ.S   MOVEMR94
0000B260                          6972  
0000B260  B02E 0001               6973           CMP.B   1(A6),D0       SPACE
0000B264  6704                    6974           BEQ.S   MOVEMR94
0000B266  568E                    6975           ADDQ.L  #3,A6
0000B268  1C87                    6976           MOVE.B  D7,(A6)        /   SEPARATOR
0000B26A                          6977  
0000B26A  1A3C 0030               6978  MOVEMR94 MOVE.B  #'0',D5        RESET REG TO ZERO
0000B26E  E04C                    6979           LSR.W   #8,D4          CHANGE REG TYPE
0000B270  6698                    6980           BNE     MOVEMR11       MORE
0000B272                          6981  
0000B272  1C80                    6982           MOVE.B  D0,(A6)        SPACE
0000B274  4E75                    6983           RTS
0000B276                          6984  
0000B276                          6985  DCODE68K DS      0
0000B276  4E51 FFF0               6986           LINK    A1,#-LOCVARSZ       CREATE A FRAME FOR THE
0000B27A  48E9 1007 FFF0          6987           MOVEM.L D0-D2/A4,DDATA(A1)  CODE AND ITS PC.  A4
0000B280  49E9 FFF0               6988           LEA     DDATA(A1),A4        POINTS TO THE CODE.
0000B284                          6989  
0000B284  264D                    6990           MOVE.L  A5,A3          A3 = START OF OUTPUT BUFFER
0000B286  7050                    6991           MOVEQ   #BUFSIZE,D0
0000B288  2C4B                    6992           MOVE.L  A3,A6
0000B28A  1CFC 0020               6993  DEC311   MOVE.B  #BLANK,(A6)+   SPACE FILL BUFFER
0000B28E  5380                    6994           SUBQ.L  #1,D0
0000B290  66F8                    6995           BNE     DEC311
0000B292                          6996  
0000B292  2C4B                    6997           MOVE.L  A3,A6          FORMAT ADDRESS
0000B294  2029 FFFC               6998           MOVE.L  HISPC(A1),D0
0000B298  6100 E36C               6999           BSR     FRELADDR
0000B29C                          7000  
0000B29C                          7001  * CHECK FOR KNOWN ILLEGAL CODES
0000B29C  3014                    7002           MOVE.W  (A4),D0
0000B29E                          7003  
0000B29E  4BFA 00C6               7004           LEA     KI(PC),A5
0000B2A2  2C4D                    7005           MOVE.L  A5,A6
0000B2A4  DDFC 00000002           7006           ADD.L   #KIEND-KI,A6
0000B2AA  B05D                    7007  DEC404   CMP.W   (A5)+,D0
0000B2AC  671A                    7008           BEQ.S   FE12           FERROR;  ILLEGAL CODE
0000B2AE  BBCE                    7009           CMP.L   A6,A5
0000B2B0  66F8                    7010           BNE     DEC404
0000B2B2                          7011  
0000B2B2                          7012  * LOOK FOR MATCH OF OP-CODE
0000B2B2                          7013  *
0000B2B2  4BFA 00B4               7014           LEA     TBL(PC),A5     A5 = POINTER TO DECODE TABLE
0000B2B6  4DFA 02BA               7015           LEA     TBLE(PC),A6    A6 = POINTER TO END OF TABLE
0000B2BA  3014                    7016  DEC411   MOVE.W  (A4),D0        FIRST WORD
0000B2BC  C05D                    7017           AND.W   (A5)+,D0       MASK
0000B2BE  B05D                    7018           CMP.W   (A5)+,D0
0000B2C0  6708                    7019           BEQ.S   DEC425         FOUND MATCH
0000B2C2  548D                    7020           ADDQ.L  #2,A5          UPDATE POINTER
0000B2C4  BBCE                    7021           CMP.L   A6,A5
0000B2C6  66F2                    7022           BNE     DEC411         MORE TABLE
0000B2C8  6072                    7023  FE12     BRA.S   FERROR         ILLEGAL INSTRUCTION
0000B2CA                          7024  
0000B2CA  4286                    7025  DEC425   CLR.L   D6
0000B2CC  1C1D                    7026           MOVE.B  (A5)+,D6       D6 = (GOTO OFFSET)/4
0000B2CE  E58E                    7027           LSL.L   #2,D6
0000B2D0                          7028  
0000B2D0  4287                    7029           CLR.L   D7
0000B2D2  1E1D                    7030           MOVE.B  (A5)+,D7       D7 = INDEX TO OP-CODE
0000B2D4                          7031  
0000B2D4                          7032  * MOVE OP-CODE TO BUFFER
0000B2D4                          7033  *
0000B2D4  41FA 029C               7034           LEA     OPCTBL(PC),A0
0000B2D8  4A47                    7035  DEC510   TST     D7
0000B2DA  6708                    7036           BEQ.S   DEC530         AT INDEX
0000B2DC  4A18                    7037  DEC515   TST.B   (A0)+
0000B2DE  6AFC                    7038           BPL     DEC515         MOVE THROUGH FIELD
0000B2E0  5387                    7039           SUBQ.L  #1,D7
0000B2E2  60F4                    7040           BRA     DEC510
0000B2E4                          7041  
0000B2E4  701F                    7042  DEC530   MOVEQ   #FOC,D0
0000B2E6  4BF3 0000               7043           LEA.L   (A3,D0),A5     A5 = STORE POINTER  OP-CODE
0000B2EA  1018                    7044  DEC535   MOVE.B  (A0)+,D0
0000B2EC  0880 0007               7045           BCLR    #7,D0
0000B2F0  6604                    7046           BNE.S   DEC537         END OF MOVE
0000B2F2  1AC0                    7047           MOVE.B  D0,(A5)+
0000B2F4  60F4                    7048           BRA     DEC535
0000B2F6  1AC0                    7049  DEC537   MOVE.B  D0,(A5)+
0000B2F8                          7050  
0000B2F8                          7051  * CALCULATE GOTO AND GO
0000B2F8                          7052  *
0000B2F8  7602                    7053           MOVEQ   #2,D3          D3= SIZE
0000B2FA  41FA F7CA               7054           LEA     X(PC),A0
0000B2FE  D1C6                    7055           ADD.L   D6,A0
0000B300                          7056  
0000B300  7027                    7057           MOVEQ   #FOP,D0
0000B302  4DF3 0000               7058           LEA.L   (A3,D0),A6     A6 = POINTER FOR OPERAND
0000B306                          7059  
0000B306  3814                    7060           MOVE.W  (A4),D4        D4 = FIRST WORD
0000B308                          7061  
0000B308  1A3C 002C               7062           MOVE.B  #',',D5        D5 = CONTAINS ASCII COMMA
0000B30C                          7063  
0000B30C  3E3C 01FD               7064           MOVE.W  #$1FD,D7       D7 = DATA ALTERABLE MODES ALLOWED
0000B310                          7065  
0000B310  4ED0                    7066           JMP     (A0)
0000B312                          7067  *
0000B312                          7068  *  A4 = POINTER TO DATA IN FRAME CREATED BY 'LINK A1,...'
0000B312                          7069  *  A5 = POINTER STORE OP-CODE
0000B312                          7070  *  A6 = POINTER STORE OPERAND
0000B312                          7071  *  D3 = SIZE = 2 BYTES
0000B312                          7072  *  D4 = FIRST WORD
0000B312                          7073  *  D7 = ADDRESS MODES ALLOWED ($1FD) DATA ALTERABLE
0000B312                          7074  
0000B312  5483                    7075  COMMON4  ADDQ.L  #2,D3          SIZE = 4
0000B314                          7076  
0000B314  2C03                    7077  COMMON   MOVE.L  D3,D6          D6 = SIZE
0000B316  1CFC 0020               7078           MOVE.B  #BLANK,(A6)+   SPACE AS LAST CHAR
0000B31A                          7079  
0000B31A  2A4E                    7080           MOVE.L  A6,A5          SAVE END OF BUFFER POINTER
0000B31C  700A                    7081           MOVEQ   #FDATA,D0
0000B31E  4DF3 0000               7082           LEA.L   (A3,D0),A6
0000B322                          7083  
0000B322  301C                    7084  COMMON35 MOVE.W  (A4)+,D0       GET NEXT WORD OF DATA.
0000B324  54A9 FFFC               7085           ADDQ.L  #2,HISPC(A1)   ADJUST PROG COUNTER.
0000B328  6100 E2B8               7086           BSR     PNT4HX         FORMAT DATA. (A6)+
0000B32C  5503                    7087           SUBQ.B  #2,D3
0000B32E  66F2                    7088           BNE     COMMON35
0000B330                          7089  
0000B330  2C4D                    7090           MOVE.L  A5,A6          A6 = RESTORE END POINTER
0000B332                          7091  
0000B332  2A4B                    7092           MOVE.L  A3,A5          A5 =  BEGINNING OF BUFFER
0000B334                          7093  
0000B334  2869 FFFC               7094           MOVE.L  HISPC(A1),A4   MOVE THE UPDATED PC
0000B338  4E59                    7095           UNLK    A1               TO A4 AND UNDO FRAME.
0000B33A                          7096  
0000B33A  4E75                    7097           RTS
0000B33C                          7098  
0000B33C                          7099  
0000B33C                          7100  FERROR   DS      0
0000B33C                          7101  * ILLEGAL INSTRUCTION
0000B33C                          7102  *
0000B33C  701F                    7103           MOVEQ   #FOC,D0
0000B33E  4DF3 0000               7104           LEA.L   (A3,D0),A6
0000B342  4BFA 0018               7105           LEA     MSG111(PC),A5
0000B346  101D                    7106  FERROR35 MOVE.B  (A5)+,D0
0000B348  0C00 0004               7107           CMPI.B  #EOT,D0
0000B34C  6704                    7108           BEQ.S   FERROR39
0000B34E  1CC0                    7109           MOVE.B  D0,(A6)+
0000B350  60F4                    7110           BRA     FERROR35
0000B352                          7111  FERROR39 DS      0
0000B352                          7112  
0000B352  3014                    7113           MOVE.W  (A4),D0
0000B354  6100 E28C               7114           BSR     PNT4HX
0000B358                          7115  
0000B358  7602                    7116           MOVEQ   #2,D3          SIZE
0000B35A                          7117  
0000B35A  60B8                    7118           BRA     COMMON
0000B35C                          7119  
0000B35C= 44 43 2E 57 20 20 ...   7120  MSG111   DC.B    'DC.W    $',EOT
0000B366                          7121  
0000B366                          7122  
0000B366                          7123  
0000B366= 4AFB                    7124  KI       DC.W    $4AFB          KNOWN ILLEGAL CODES
0000B368                          7125  KIEND    DS      0
0000B368                          7126  
0000B368                          7127  
0000B368                          7128  *  \1   MASK
0000B368                          7129  *  \2   OP-CODE PATTERN
0000B368                          7130  *  \3   GOTO OFFSET
0000B368                          7131  *  \4   INDEX TO OP-CODE
0000B368                          7132  C68      MACRO
0000B368                          7133           DC.W    $\1
0000B368                          7134           DC.W    $\2
0000B368                          7135           DC.B    (\3-X)>>2
0000B368                          7136           DC.B    \4
0000B368                          7137           ENDM
0000B368                          7138  
0000B368                          7139  TBL      DS      0
0000B368                          7140m          C68     FEC0,E6C0,ISHIFT,56           RO
0000B36E                          7141m          C68     FEC0,E4C0,ISHIFT,57           ROX
0000B374                          7142m          C68     FEC0,E2C0,ISHIFT,55           LS
0000B37A                          7143m          C68     FEC0,E0C0,ISHIFT,54           AS
0000B380                          7144m          C68     F018,E018,ISHIFT,56           RO
0000B386                          7145m          C68     F018,E010,ISHIFT,57           ROX
0000B38C                          7146m          C68     F018,E008,ISHIFT,55           LS
0000B392                          7147m          C68     F018,E000,ISHIFT,54           AS
0000B398                          7148m          C68     F0C0,D0C0,FORM10EX,4          ADD       <EA>,A@
0000B39E                          7149m          C68     F130,D100,FORM12,53           ADDX
0000B3A4                          7150m          C68     F000,D000,FORM10EX,4            ADD
0000B3AA                          7151m          C68     F1F8,C188,FORM9,50            EXG
0000B3B0                          7152m          C68     F1F8,C148,FORM8,50            EXG
0000B3B6                          7153m          C68     F1F8,C140,FORM7,50            EXG
0000B3BC                          7154m          C68     F1F0,C100,FORM12,49           ABCD
0000B3C2                          7155m          C68     F1C0,C1C0,FORM6D,48           MULS
0000B3C8                          7156m          C68     F1C0,C0C0,FORM6D,47           MULU
0000B3CE                          7157m          C68     F000,C000,FORM10,2            AND
0000B3D4                          7158m          C68     F0C0,B0C0,FORM10EX,6          CMP     <EA>,A@
0000B3DA                          7159m          C68     F138,B108,FORM12A,46           CMPM
0000B3E0                          7160m          C68     F100,B100,FORM10,5            EOR
0000B3E6                          7161m          C68     F000,B000,FORM10EX,6            CMP
0000B3EC                          7162m          C68     F0C0,90C0,FORM10EX,44         SUB       <EA>,A@
0000B3F2                          7163m          C68     F130,9100,FORM12,45           SUBX
0000B3F8                          7164m          C68     F000,9000,FORM10EX,44           SUB
0000B3FE                          7165m          C68     F1F0,8100,FORM12,43           SBCD
0000B404                          7166m          C68     F1C0,81C0,FORM6D,42           DIVS
0000B40A                          7167m          C68     F1C0,80C0,FORM6D,41           DIVU
0000B410                          7168m          C68     F000,8000,FORM10,40           OR
0000B416                          7169m          C68     F100,7000,IMOVEQ,39           MOVEQ
0000B41C                          7170m          C68     FF00,6100,IBSR,51             BSR
0000B422                          7171m          C68     FF00,6000,IBSR,65             BRA
0000B428                          7172m          C68     F000,6000,ICC,38              B
0000B42E                          7173m          C68     F0F8,50C8,IDBCC,37              DB
0000B434                          7174m          C68     F0C0,50C0,ISCC,36             S
0000B43A                          7175m          C68     F100,5100,IQUICK,35           SUBQ
0000B440                          7176m          C68     F100,5000,IQUICK,34           ADDQ
0000B446                          7177m          C68     F1C0,41C0,FORM6A,33           LEA
0000B44C                          7178m          C68     F1C0,4180,FORM6D,32           CHK
0000B452                          7179m          C68     FFC0,4EC0,FORM11SL,31         JMP
0000B458                          7180m          C68     FFC0,4E80,FORM11SL,30         JSR
0000B45E                          7181m          C68     FFFF,4E77,SCOMMON,29           RTR
0000B464                          7182m          C68     FFFF,4E76,SCOMMON,28           TRAPV
0000B46A                          7183m          C68     FFFF,4E75,SCOMMON,27           RTS
0000B470                          7184m          C68     FFFF,4E73,SCOMMON,26           RTE
0000B476                          7185m          C68     FFFF,4E72,ISTOP,25             STOP
0000B47C                          7186m          C68     FFFF,4E71,SCOMMON,24           NOP
0000B482                          7187m          C68     FFFF,4E70,SCOMMON,23           RESET
0000B488                          7188m          C68     FFF8,4E68,IMVFUSP,60          MOVE FROM USP
0000B48E                          7189m          C68     FFF8,4E60,IMVTUSP,60          MOVE TO USP
0000B494                          7190m          C68     FFF8,4E58,FORM5,22            UNLINK
0000B49A                          7191m          C68     FFF8,4E50,ILINK,21            LINK
0000B4A0                          7192m          C68     FFF0,4E40,FORM4,20            TRAP
0000B4A6                          7193m          C68     FF80,4C80,IMOVEMTR,15         MOVEM FROM REGISTERS
0000B4AC                          7194m          C68     FFC0,4AC0,FORM1A,19           TAS
0000B4B2                          7195m          C68     FF00,4A00,FORM1,18            TST
0000B4B8                          7196m          C68     FFF8,48C0,FORM3,17            EXT.L
0000B4BE                          7197m          C68     FFF8,4880,FORM3,16            EXT.W
0000B4C4                          7198m          C68     FF80,4880,IMOVEMFR,15         MOVEA TO REGISTERS
0000B4CA                          7199m          C68     FFF8,4840,FORM3,14            SWAP
0000B4D0                          7200m          C68     FFC0,4840,FORM11,13           PEA
0000B4D6                          7201m          C68     FFC0,4800,FORM1A,12           NBCD
0000B4DC                          7202m          C68     FFC0,46C0,IMVTSR,59           MOVE TO SR
0000B4E2                          7203m          C68     FF00,4600,FORM1,11            NOT
0000B4E8                          7204m          C68     FFC0,44C0,IMVTCCR,59          MOVE TO CCR
0000B4EE                          7205m          C68     FF00,4400,FORM1,10            NEG
0000B4F4                          7206m          C68     FF00,4200,FORM1,9             CLR
0000B4FA                          7207m          C68     FFC0,40C0,IMVFSR,59           MOVE.W  FROM  SR
0000B500                          7208m          C68     FF00,4000,FORM1,8             NEGX
0000B506                          7209m          C68     F000,3000,IMOVE,59            MOVE.W
0000B50C                          7210m          C68     F000,2000,IMOVE,60            MOVE.L
0000B512                          7211m          C68     F000,1000,IMOVE,58            MOVE.B
0000B518                          7212m          C68     FF00,0C00,IMMED,6             CMP       #
0000B51E                          7213m          C68     FF00,0A00,IMMED,5             EOR       #
0000B524                          7214m          C68     FF00,0600,IMMED,4             ADD       #
0000B52A                          7215m          C68     FF00,0400,IMMED,3             SUB       #
0000B530                          7216m          C68     FF00,0200,IMMED,2             AND       #
0000B536                          7217m          C68     FF00,0000,IMMED,1             OR        #
0000B53C                          7218m          C68     F138,0108,IMOVEP,0            MOVEP
0000B542                          7219m          C68     FFC0,08C0,ISETS,64            BSET
0000B548                          7220m          C68     FFC0,0880,ISETS,63            BCLR
0000B54E                          7221m          C68     FFC0,0840,ISETS,62            BCHG
0000B554                          7222m          C68     FFC0,0800,ISETS,61            BTST
0000B55A                          7223m          C68     F1C0,01C0,ISETD,64            BSET
0000B560                          7224m          C68     F1C0,0180,ISETD,63            BCLR
0000B566                          7225m          C68     F1C0,0140,ISETD,62            BCHG
0000B56C                          7226m          C68     F1C0,0100,ISETD,61            BTST
0000B572                          7227  TBLE     DS      0
0000B572                          7228  
0000B572                          7229  N68      MACRO
0000B572                          7230           DC.B    '\1',128+'\2'        \1\2
0000B572                          7231           ENDM
0000B572                          7232  
0000B572                          7233  OPCTBL   DS      0
0000B572                          7234m          N68     MOVE,P    0
0000B577                          7235m          N68     O,R       1
0000B579                          7236m          N68     AN,D      2
0000B57C                          7237m          N68     SU,B      3
0000B57F                          7238m          N68     AD,D      4
0000B582                          7239m          N68     EO,R      5
0000B585                          7240m          N68     CM,P      6
0000B588                          7241m          N68     MOV,E     7
0000B58C                          7242m          N68     NEG,X     8
0000B590                          7243m          N68     CL,R      9
0000B593                          7244m          N68     NE,G      10
0000B596                          7245m          N68     NO,T      11
0000B599                          7246m          N68     NBC,D     12
0000B59D                          7247m          N68     PEA.,L    13
0000B5A2                          7248m          N68     SWAP.,W   14
0000B5A8                          7249m          N68     MOVE,M    15
0000B5AD                          7250m          N68     EXT.,W    16
0000B5B2                          7251m          N68     EXT.,L    17
0000B5B7                          7252m          N68     TS,T      18
0000B5BA                          7253m          N68     TAS.,B    19
0000B5BF                          7254m          N68     TRA,P     20
0000B5C3                          7255m          N68     LIN,K     21
0000B5C7                          7256m          N68     UNL,K     22
0000B5CB                          7257m          N68     RESE,T    23
0000B5D0                          7258m          N68     NO,P      24
0000B5D3                          7259m          N68     STO,P     25
0000B5D7                          7260m          N68     RT,E      26
0000B5DA                          7261m          N68     RT,S      27
0000B5DD                          7262m          N68     TRAP,V    28
0000B5E2                          7263m          N68     RT,R      29
0000B5E5                          7264m          N68     JS,R      30
0000B5E8                          7265m          N68     JM,P      31
0000B5EB                          7266m          N68     CHK.,W    32
0000B5F0                          7267m          N68     LEA.,L    33
0000B5F5                          7268m          N68     ADD,Q     34
0000B5F9                          7269m          N68     SUB,Q     35
0000B5FD= D3                      7270           DC.B    128+'S'   36
0000B5FE                          7271m          N68     D,B       37
0000B600= C2                      7272           DC.B    128+'B'   38
0000B601                          7273m          N68     MOVEQ.,L  .....39
0000B608                          7274m          N68     O,R       40
0000B60A                          7275m          N68     DIVU.,W   41
0000B610                          7276m          N68     DIVS.,W   42
0000B616                          7277m          N68     SBC,D     43
0000B61A                          7278m          N68     SU,B      44
0000B61D                          7279m          N68     SUB,X     45
0000B621                          7280m          N68     CMP,M     46
0000B625                          7281m          N68     MULU.,W   47
0000B62B                          7282m          N68     MULS.,W   48
0000B631                          7283m          N68     ABC,D    49
0000B635                          7284m          N68     EX,G      50
0000B638                          7285m          N68     BS,R      .....51
0000B63B                          7286m          N68     NUL,L     .....52
0000B63F                          7287m          N68     ADD,X     53
0000B643                          7288m          N68     A,S       54
0000B645                          7289m          N68     L,S       55
0000B647                          7290m          N68     R,O       56
0000B649                          7291m          N68     RO,X      57
0000B64C                          7292m          N68     MOVE.,B   58
0000B652                          7293m          N68     MOVE.,W   59
0000B658                          7294m          N68     MOVE.,L   60
0000B65E                          7295m          N68     BTS,T     61
0000B662                          7296m          N68     BCH,G     62
0000B666                          7297m          N68     BCL,R     63
0000B66A                          7298m          N68     BSE,T     64
0000B66E                          7299m          N68     BR,A      65
0000B671                          7300  
0000B671= 00                      7301           DC.B    0              PAD BYTE
0000B672                          7302  
0000B672                          7303  
0000B672                          7304  
0000B672                          7305  *-------------------------------------------------------------------------
0000B672                          7306  * File TRAP14    Trap 14 handler of "TUTOR"                       06/25/82
0000B672                          7307  
0000B672                          7308  *        CALLING SEQUENCE
0000B672                          7309  *                  D7 = XXXXXXFF   WHERE "FF" IF FUNCTION NUMBER
0000B672                          7310  *                  TRAP      #14
0000B672                          7311  
0000B672                          7312  TRAP14
0000B672  48E7 4160               7313           MOVEM.L D1/D7/A1-A2,-(A7)
0000B676                          7314  
0000B676  2278 064C               7315           MOVE.L  CTLINK,A1
0000B67A  1211                    7316  T100     MOVE.B  (A1),D1        D1 = FUNCTION FROM TABLE
0000B67C  0C01 00FF               7317           CMPI.B  #$FF,D1
0000B680  6740                    7318           BEQ.S   T500           END OF TABLE
0000B682                          7319  
0000B682  0C01 00FE               7320           CMPI.B  #$FE,D1
0000B686  6774                    7321           BEQ.S   T600           LINK IN LIST
0000B688                          7322  
0000B688  B207                    7323           CMP.B   D7,D1
0000B68A  6704                    7324           BEQ.S   T400           FOUND MATCH
0000B68C                          7325  
0000B68C  5889                    7326           ADDQ.L  #4,A1
0000B68E  60EA                    7327           BRA     T100
0000B690                          7328  
0000B690  2211                    7329  T400     MOVE.L  (A1),D1        FFAAAAAA
0000B692  E181                    7330           ASL.L   #8,D1          AAAAAA..
0000B694  E089                    7331           LSR.L   #8,D1          00AAAAAA  GO TO ADDRESS
0000B696                          7332  
0000B696  082F 0005 0010          7333           BTST.B  #5,16(A7)
0000B69C  6710                    7334           BEQ.S   T450           CALL FROM USER MODE
0000B69E                          7335  
0000B69E                          7336  *  CALL FROM SUPERVISOR MODE
0000B69E                          7337  * STACK (WORDS)
0000B69E                          7338  *   +0   D1 HIGH
0000B69E                          7339  *   +2   D1 LOW
0000B69E                          7340  *   +4   D7 HIGH
0000B69E                          7341  *   +6   D7 LOW
0000B69E                          7342  *   +8   A1 HIGH
0000B69E                          7343  *   +10  A1 LOW
0000B69E                          7344  *   +12  A2 HIGH              STATUS REG
0000B69E                          7345  *   +14  A2 LOW               GOTO HIGH
0000B69E                          7346  *   +16  STATUS REG           GOTO LOW
0000B69E                          7347  *   +18  RETURN HIGH        RETURN HIGH
0000B69E                          7348  *   +20  RETURN LOW         RETURN LOW
0000B69E                          7349  *
0000B69E  2F6F 0010 000C          7350           MOVE.L  16(A7),12(A7)  SR
0000B6A4  2F41 000E               7351           MOVE.L  D1,14(A7)      GOTO ADDRESS
0000B6A8  4CDF 0282               7352           MOVEM.L (A7)+,D1/D7/A1 RESTORE REGISTERS
0000B6AC  4E73                    7353           RTE                    GOTO (AND TRIM STACK)
0000B6AE                          7354  
0000B6AE                          7355  * STACK (WORDS)
0000B6AE                          7356  *   +0   D1 HIGH
0000B6AE                          7357  *   +2   D1 LOW
0000B6AE                          7358  *   +4   D7 HIGH
0000B6AE                          7359  *   +6   D7 LOW
0000B6AE                          7360  *   +8   A1 HIGH
0000B6AE                          7361  *   +10  A1 LOW
0000B6AE                          7362  *   +12  A2 HIGH                                 (USER STACK)
0000B6AE                          7363  *   +14  A2 LOW
0000B6AE                          7364  *   +16  STATUS REG         STATUS REG
0000B6AE                          7365  *   +18  RETURN HIGH        GOTO HIGH            RETURN HIGH
0000B6AE                          7366  *   +20  RETURN LOW         GOTO LOW             RETURN LOW
0000B6AE                          7367  *
0000B6AE                          7368  * CALL FROM USER MODE
0000B6AE  2E2F 0012               7369  T450     MOVE.L  18(A7),D7      RETURN PC
0000B6B2  2F41 0012               7370           MOVE.L  D1,18(A7)      GOTO ADDRESS
0000B6B6  4E69                    7371           MOVE.L  USP,A1         POINTER TO USER STACK
0000B6B8  2307                    7372           MOVE.L  D7,-(A1)       RETURN PC TO USER STACK
0000B6BA  4E61                    7373           MOVE.L  A1,USP         UPDATED USER STACK POINTER
0000B6BC  4CDF 0682               7374           MOVEM.L (A7)+,D1/D7/A1/A2
0000B6C0  4E73                    7375           RTE
0000B6C2                          7376  
0000B6C2  4CDF 0682               7377  T500     MOVEM.L (A7)+,D1/D7/A1/A2
0000B6C6                          7378m          SAVEREGS
0000B6D6  4BFA 0012               7379           LEA     MSGT14(PC),A5
0000B6DA  6100 CA16               7380           BSR     FIXDATA
0000B6DE  6100 E142               7381           BSR     OUT1CR
0000B6E2  6100 D192               7382           BSR     TDISPLY
0000B6E6  6000 CADC               7383           BRA     MACSBUG
0000B6EA                          7384  
0000B6EA= 55 4E 44 45 46 49 ...   7385  MSGT14   DC.B    'UNDEFINED TRAP 14',EOT
0000B6FC                          7386  
0000B6FC                          7387  
0000B6FC                          7388  
0000B6FC                          7389  
0000B6FC                          7390  
0000B6FC  2251                    7391  T600     MOVE.L  (A1),A1
0000B6FE  6000 FF7A               7392           BRA     T100
0000B702                          7393  
0000B702                          7394  T700     DS      0              253 APPEND NEW TABLE
0000B702  2208                    7395           MOVE.L  A0,D1          ..AAAAAA
0000B704  2078 064C               7396           MOVE.L  CTLINK,A0      A0 = LINK TO BE RETURNED
0000B708  E199                    7397           ROL.L   #8,D1          AAAAAA..
0000B70A  123C 00FE               7398           MOVE.B  #$FE,D1        AAAAAAFE
0000B70E  E099                    7399           ROR.L   #8,D1          FEAAAAAA
0000B710  21C1 064C               7400           MOVE.L  D1,CTLINK
0000B714  4E75                    7401           RTS
0000B716                          7402  
0000B716                          7403  
0000B716                          7404  *  CREATE ENTRY TO FUNCTION/ADDRESS TABLE
0000B716                          7405  *    FFAAAAAA
0000B716                          7406  *    FF......      FUNCTION NUMBER
0000B716                          7407  *    ..AAAAAA      ADDRESS OF FUNCTION
0000B716                          7408  
0000B716                          7409  FADDR    MACRO   \1,\2
0000B716                          7410           DC.L    (\1<<24)+\2
0000B716                          7411           ENDM
0000B716                          7412  
0000B716                          7413  
0000B716                          7414m CT       FADDR   253,T700       APPEND NEW TABLE
0000B71A                          7415m          FADDR   252,FIXDADD    APPEND DATA (A5) TO BUFFER (A6)+
0000B71E                          7416m          FADDR   251,FIXBUF     SET A5 & A6 AS POINTERS TO BUFFER
0000B722                          7417m          FADDR   250,FIXDATA    MOVE DATA (A5) TO BUFFER; A5=BUFFER A6
0000B726                          7418m          FADDR   249,FIXDCRLF
0000B72A                          7419m          FADDR   248,F100       OUTPUT CHAR PORT1  D0=CHAR
0000B72E                          7420m          FADDR   247,F110       INPUT CHAR PORT1  D0=CHAR
0000B732                          7421m          FADDR   243,OUTPUT     OUTPUT STRING PORT1 (A5) (A6)
0000B736                          7422m          FADDR   242,OUTPUT21   OUTPUT STRING PORT2 (A5) (A6)
0000B73A                          7423m          FADDR   241,PORTIN1    INPUT STRING PORT1  (A5) (A6)
0000B73E                          7424m          FADDR   236,HEX2DEC    CONVERT HEX D0 TO DECIMAL (A6)+
0000B742                          7425m          FADDR   235,GETHEX     GET HEX CHAR INTO D0 FROM (A5)+
0000B746                          7426m          FADDR   234,PUTHEX     FORMAT HEX CHAR FROM D0 TO (A6)+
0000B74A                          7427m          FADDR   233,PNT2HX     FORMAT 2 HEX CHAR FROM D0 TO (A6)+
0000B74E                          7428m          FADDR   232,PNT4HX     FORMAT 4 HEX CHAR FROM D0 TO (A6)+
0000B752                          7429m          FADDR   231,PNT6HX     FORMAT 6 HEX CHAR FROM D0 TO (A6)+
0000B756                          7430m          FADDR   230,PNT8HX     FORMAT 8 HEX CHAR FROM D0 TO (A6)+
0000B75A                          7431m          FADDR   229,START      RESTART TUTOR INITIALIZE EVERYTHING
0000B75E                          7432m          FADDR   228,MACSBUG    GOTO TUTOR;   PRINT PROMPT
0000B762                          7433m          FADDR   227,F120       OUTPUT STRING,CR,LF PORT1 (A5) (A6)
0000B766                          7434m          FADDR   226,GETNUMA    GET HEX NUMBER (A5)+ INTO D0
0000B76A                          7435m          FADDR   225,GETNUMD    GET DECIMAL NUMBER (A5)+ INTO D0
0000B76E                          7436m          FADDR   224,PORTIN1N   INPUT STRING PORT1 (NO AUTO LF)
0000B772                          7437  
0000B772                          7438m          FADDR   255,$FFFFFF    END KEY
0000B776                          7439  
0000B776  6100 E12C               7440  F100     BSR     GETSER1        A0 = PORT1 ADDRESS
0000B77A  6000 E1FC               7441           BRA     OUTCH
0000B77E                          7442  
0000B77E  6100 E124               7443  F110     BSR     GETSER1        A0 = PORT1 ADDRESS
0000B782  6000 E224               7444           BRA     INCHNE
0000B786                          7445           
0000B786  6100 E0B4               7446  F120     BSR     OUTPUT         OUTPUT STRING,CR,LF PORT1 (A5) (A6)
0000B78A  700D                    7447           MOVEQ   #CR,D0
0000B78C  61E8                    7448           BSR     F100           OUTPUT CHAR
0000B78E  700A                    7449           MOVEQ   #LF,D0
0000B790  61E4                    7450           BSR     F100           OUTPUT CHAR
0000B792  4E75                    7451           RTS
0000B794                          7452  
0000B794                          7453  
0000B794= 00 00 00 00 00 00 ...   7454           DCB.B   $54,0          PAD BYTES
0000B7E8                          7455  
0000B7E8                          7456  
0000B7E8                          7457  *-------------------------------------------------------------------------
0000B7E8                          7458  * File YROM      Version/checksum/identification                  07/29/82
0000B7E8                          7459  
0000B7E8  =00000004               7460  VERSION  EQU     4         BINARY FOR VERSION 1.3
0000B7E8                          7461  
0000B7E8= 04 04                   7462           DC.B    VERSION,VERSION
0000B7EA                          7463  LAST     DS.W    0              LAST ADDRESS+1
0000B7EA                          7464  
0000B7EA                          7465           END     START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A3OUT               8A70
A5300               A4E2
A5305               A4EE
A5TODEST            A4E0
ABORT335            957C
ABORTB              955C
ABORTE              9598
ADDR2MEM            0
ADDRESS             FFFFFFC0
ADDRMSG             803A
ADR                 5F2
ALTSER1             624
ALTSER2             628
AV11                2C
AV12                30
AV2                 8
AV24                60
AV3                 C
AV31                7C
AV4                 10
AV46                B8
AV47                BC
AV48                C0
AV8                 20
AV9                 24
BCMD0               85C8
BCMD00              85D6
BCMD01              85AC
BCMD3               85E4
BCMD33              85EA
BCMD5               8602
BCMD55              860A
BCMD6               85FC
BCMD7               8614
BCMD77              861C
BCMD8               8622
BCMD81              8642
BCMD9               8646
BEGHRAM             44C
BELL                7
BERRD               4CA
BERRMSG             8030
BFCMD               8456
BFCMD11             8496
BKPOINT             4AFB
BKSPACE             9912
BLANK               20
BLANKIT             9924
BM112               84E4
BM122               84EC
BM132               84F0
BM142               84F6
BMCMD               84A8
BPADD               470
BPCNT               494
BPDATA              4B8
BPSTATUS            4E0
BPTILL              490
BRCMD               85C4
BREAK               998C
BRTBL               AF1E
BS101               86F4
BS200               8700
BS213               8732
BS215               8736
BS219               873A
BS225               874C
BS311               875E
BS313               8762
BS323               8782
BS325               8788
BS355               87B0
BS365               87BA
BS4CTLH             9920
BS91                86BA
BS97                86E4
BSCMD               868A
BTCMD               87C4
BUFFER              540
BUFFSIZE            80
BUFSIZE             50
C68                 6AC
CC                  FFFFFFBC
CHARSAVE            9952
CHKBP               8D56
CHKBP1              8D84
CHKBP11             8D90
CHKBP2              8D9A
CHKBP3              8DA6
CHKBP4              8DAA
CHKBRK              998A
CHKCR               9962
CHKCTLD             9936
CHKCTLH             9906
CKADDR              96CA
CKADR39             96D2
CKADR99             96E6
CKWADR              96C4
CMD                 187
CMMD2               A20E
CMMD2S10            A28A
CMMD2S11            A2F8
CMMD35              A232
CODE68K             A090
COMMA               A1EC
COMMAS20            A2FA
COMMON              B314
COMMON35            B322
COMMON4             B312
CR                  D
CRPADS              61A
CRTPNT              648
CS11                AD46
CS12                ACB0
CS13                AC2E
CS14                ABBE
CS15                AB7E
CS16                AB10
CS17                AEEA
CS18                AE84
CS19                AF96
CS20                ADE6
CT                  B716
CTLC                3
CTLD                4
CTLH                8
CTLINK              64C
CTLW                17
CTLX                18
DCCMD               8816
DCODE68K            B276
DDATA               FFFFFFF0
DEC311              B28A
DEC404              B2AA
DEC411              B2BA
DEC425              B2CA
DEC510              B2D8
DEC515              B2DC
DEC530              B2E4
DEC535              B2EA
DEC537              B2F6
DECODE1             8216
DECODE10            822C
DECODE2             8236
DECODE21            8240
DECODE3             8266
DECODE4             8244
DECODE41            8252
DECODE6             8206
DEL                 7F
DELAYC1             1000
DFCMD               8874
DUCMD               8992
DUMPTEMP            5C0
EA                  9AA4
EA000               AFC6
EA001               AFD2
EA010               AFDE
EA011               AFF2
EA011RTS            B008
EA0633              9AD2
EA0634              9AD6
EA0635              9AE2
EA0637              9AEA
EA10                9AF6
EA100               B00A
EA101               B0AC
EA11                9B22
EA1105              B088
EA1107              B08C
EA1109              B0A2
EA111               B0C2
EA1112              B0E0
EA1113              B0FC
EA1113A             B10C
EA1114              B12E
EA1115              B198
EA11153             B1D0
EA11155             B1DA
EA16BIT             9D0C
EA16BITC            9D1A
EA16BITS            9D16
EA21                9B3A
EA31                9B4E
EA34                9B84
EA35                9B86
EA41                9B94
EA4102              9BA8
EA4105              9BAE
EA4120              9BEA
EA4127              9BC4
EA4135              9BD4
EA5115              9C30
EA5116              9C34
EA5118              9C74
EA5119              9C7A
EA5119E             9C84
EA61                9C86
EA71                9CB8
EA7113              9CFA
EA7115              9D00
EA8BIT              9D22
EA8BITC             9D2E
EA8BITS             9D2A
EAA                 9A9A
EAALL               9AA0
EAC                 9A82
EADA                9A7C
EADADDR             9A94
EAF25               B176
EAF27               B17A
EAF35               B18E
EAM                 9A88
EAS                 9D30
EASEX               9D3E
EAZ                 9A8E
ECHOPT1             4E2
EEA                 B024
EEA10               AC38
ENDHRAM             650
ENDS0               8A04
EOHLOOP             8E40
EOT                 4
ER                  A206
ER1                 9A78
ER10                A894
ER2                 A5B0
ER3                 9B90
ER4                 9CB4
ERDONE              A20A
ERF                 A204
ERROR               80B0
ESKB                0
ESKE                22
EV                  99CC
EV15                99D4
EV21                99D0
EV39                99EA
EVECT               8452
EVECT2              95B0
EVECT4              9578
EVECT5              836C
EVECT6              83B2
EVECT7              8402
EVECTL              95A0
EVER                A610
EVSR                A634
F100                B776
F110                B77E
F120                B786
FADDR               753
FDATA               A
FE10                B020
FE11                B108
FE12                B2C8
FERROR              B33C
FERROR35            B346
FERROR39            B352
FIRST               8000
FIXBP               85B4
FIXBUF              98AA
FIXD2               8100
FIXDADD             80F6
FIXDATA             80F2
FIXDCRLF            8106
FLAG                0
FNEXTF              96A6
FNEXTF1             96A4
FNEXTF7             96C0
FOC                 1F
FOL                 1F
FOP                 27
FORM1               ABB6
FORM10              AC7E
FORM103             AC84
FORM104             AC88
FORM105             AC9A
FORM10E3            AC60
FORM10E4            AC68
FORM10E6            AC74
FORM10EX            AC3E
FORM11              ACB6
FORM112             ACD6
FORM114             ACE4
FORM11SL            ACC2
FORM12              ACE6
FORM125             AD00
FORM12A             AD22
FORM1A              ABBA
FORM3               ABC2
FORM4               ABC6
FORM5               ABDA
FORM6A              ABDE
FORM6D              ABEE
FORM7               AC16
FORM8               AC22
FORM815             AC26
FORM9               AC32
FORM91              AFAE
FORM93              AFC2
FORM95              AFC4
FORMREG5            AC02
FORMREGA            ABFE
FORMREGD            AC0E
FORMSIZE            AF9A
FPR315              A226
FREL10              9612
FREL15              9624
FREL20              963C
FREL25              964E
FREL30              9658
FRELADDR            9606
FSIZE               9A36
GAE                 8B7C
GAP111              8AC8
GAP111S             8B32
GAP113              8AD0
GAP118              8B2A
GAP119              8B2C
GAP121              8B34
GAP131              8B40
GAP135              8B4C
GAP141              8B54
GAP161              8B80
GAP163              8B96
GAP165              8BA0
GAP171              8BA6
GAP181              8BC2
GAP191              8BC8
GAP197              8BDA
GAP199              8BDC
GASRGN              8BE2
GDCMD               85A4
GET41               9A44
GETA                8AAC
GETCHAR             A1F4
GETCHARF            A1FC
GETDECNU            972C
GETEXP              96FA
GETEXP15            9702
GETEXP21            96FE
GETEXP39            9718
GETF305             99FE
GETF308             9A12
GETF311             9A12
GETF312             9A22
GETF313             9A26
GETF314             9A28
GETF325             9A2E
GETF333             9A34
GETFIELD            99F2
GETHEX              97D8
GETHEXNU            9734
GETIMM              AA56
GETN20              973A
GETN30              9744
GETN40              9750
GETN50              975A
GETN55              9762
GETN57              9766
GETN60              976A
GETN65              9774
GETN70              977E
GETN75              9788
GETN77              97A2
GETN80              97BC
GETN85              97C0
GETN90              97C2
GETN95              97C6
GETNDATA            97CC
GETNUMA             9728
GETNUMD             9720
GETNUMD9            9722
GETREGA             9A56
GETREGAD            9A64
GETREGD             9A3C
GETSER1             98A4
GETSER2             98A8
GOCMD               8596
GOCMD1              8598
GOCMD1A             858C
GOSET1              8578
GT21                8566
GTCMD               854A
GTHX2               97F2
HECMD               8DF4
HELP4               8E0C
HELP6               8E54
HELP81              8E42
HELP85              8E52
HEX2DEC             8ECE
HISPC               FFFFFFFC
HX2DC               8EDE
HX2DC0              8EE2
HX2DC1              8EEA
HX2DC2              8F04
HX2DC22             8F06
HX2DC3              8F10
HX2DC4              8F18
HX2DC5              8F20
HX2DC57             8F28
HX2DC6              8F2C
IBSR                AE3E
ICC                 AE3A
ICC35               AE50
ICC55               AE66
ICCCC               AF06
ICCCC9              AF1C
IDBCC               AE26
ILINK               AB9E
IM7788              AADA
IM7799              AADE
IMMED               AB26
IMMED45             AB4C
IMMED55             AB80
IMMED65             AB86
IMMED75             AB96
IMOVE               AB9A
IMOVE19             AF64
IMOVEA1             AF3E
IMOVEMFR            AAC6
IMOVEMTR            AAF6
IMOVEP              ADBE
IMOVEP11            ADCE
IMOVEP35            ADEA
IMOVEP66            ADF8
IMOVEQ              AD4E
IMVFSR              AD6E
IMVFUSP             AD7E
IMVT44              AD9C
IMVTCCR             ADAE
IMVTSR              AD8E
IMVTUSP             ADA2
INCHNE              99A8
INFROM              620
INIT                8018
INIT0               8118
INITHRAM            800C
INITVECT            8110
INITVMSG            82EC
INPORT1             62C
INPORT2             634
INPORT3             63C
IQUICK              AD4A
IQUICK21            AF7C
IQUICK31            AF92
IQUICKA             AF6A
ISCC                AE1A
ISETD               AE76
ISETD12             AE7C
ISETS               AE86
ISHIFT              AEA2
ISHIFT13            AEAE
ISHIFT23            AED2
ISHIFT33            AEDE
ISHIFT44            AEE2
ISHIFTM1            AEEC
ISTOP               AB12
KI                  B366
KIEND               B368
LAST                B7EA
LDATA               FFFFFFC4
LF                  A
LINK                1E
LOCVARSZ            10
LONG                66F
M300                A0A2
M340                A0EE
M350                A0FA
M352                A12E
M410                A138
M415                A140
M420                A152
M424                A156
M426                A15A
M428                A164
M430                A16A
M432                A178
M4324               A1A6
M4326               A1AC
M435                A1CA
M437                A1D2
M440                A1E0
MABCD               A246
MABCD55             A282
MABCD9              A254
MACSBUG             81C4
MACSBUG1            81F2
MADD                A2FE
MADD46              A330
MADD56              A33C
MADD58              A34C
MADDA               A3A6
MADDA21             A3B0
MADDI               A358
MADDQ               A3CE
MADDQ25             A40C
MADDX               A410
MADDX5              A446
MAND                A452
MAND77              A486
MAND90              A49C
MAND91              A4AA
MAND97              A4AE
MANDI               A36E
MANDI23             A388
MASL                A500
MB100               A57A
MB105               A592
MB145               A5B4
MB185               A5BA
MB200               A5BE
MBCHG               A570
MBCLR               A5D4
MBRA                A5FA
MBRA23              A614
MBRA27              A622
MBSET               A5C8
MBTST               A5E0
MCHK                A652
MCLR                A66C
MCMMD2              A214
MCMP                A28C
MCMP39              A2E2
MCMP56              A2EA
MCMPM               A67A
MDBCC               A5EC
MDC                 AAB6
MDCMD               8F32
MEMSIZE             46C
MEOR                A4B4
MEOR90              A4D4
MEXG                A6A4
MEXG25              A6C6
MEXG35              A6D0
MEXT                A6DE
MJMP                A9EE
MJMP22              AA0A
MJMP32              AA10
MJMP42              AA14
MLEA                AA1A
MLINK               AA64
MM045               9112
MM05                90F4
MM054               9126
MM056               9132
MM058               9140
MM060               914E
MM064               9154
MM065               915A
MM10                915E
MM11                916E
MM12                9192
MM14                919C
MM16                91A6
MM18                91AE
MM22                91FC
MM24                920A
MM26                9218
MM315               A8C0
MM40                9224
MM50                9248
MM508               A906
MM60                924E
MM70                A92C
MM80                A95A
MM804               A972
MM806               A990
MM825               A9A8
MM90                9254
MM905               9260
MM95                9258
MMA225              A9DA
MMCMD               90E2
MMDI                9048
MMDI22              9052
MMDI23              9054
MMDI26              9094
MMDI27              909E
MMDI29              90B4
MMDI30              90C6
MMDI31              9068
MMDI34              907A
MMDI44              90CA
MMM40               A8C8
MMM44               A732
MMM46               A732
MMM48               A758
MMM50               A8EA
MMM60               A918
MMOVE               A8A6
MMOVEA              A9C2
MMOVEA1             A9BA
MMOVEM              A6F8
MMOVEP              A7F8
MMOVEQ              A85A
MMP344              A82A
MMP348              A83A
MMP368              A856
MMQ20               A874
MORES0              89F4
MORESP              8A0A
MOVEMR              B1FA
MOVEMR11            B20A
MOVEMR33            B212
MOVEMR44            B224
MOVEMR77            B23E
MOVEMR79            B250
MOVEMR88            B252
MOVEMR94            B26A
MOVEMS              B1E6
MOVEMS2             B1F6
MPEA                AA34
MSCC                A562
MSCMD               9266
MSG                 80A8
MSG001              828C
MSG002              8E5C
MSG008              808A
MSG008E             8091
MSG009              8DBA
MSG010              95C6
MSG011              980C
MSG012              9584
MSG013              999C
MSG014              8DCE
MSG017              930C
MSG018              96E8
MSG019              80E0
MSG020              8DDC
MSG021              8098
MSG111              B35C
MSGBR               8650
MSGEOT              8097
MSGT14              B6EA
MSL150              A51E
MSL200              A534
MSL300              A546
MSTOP               AA82
MSWAP               AA42
MTBL                A7E8
MTCLR               9534
MTRAP               AA9A
MTSETUP             9322
MTSTOR0             954C
MTSTOR1             953C
MUNLK               AAAC
N68                 718
NOAUTOLF            9972
NOBR0               865C
NOBR1               8660
NOBR3               8676
NOBR4               8682
NOBRCMD             85AA
NOC                 80
NOCMD               8280
NOTCHR              9004
NULLPADS            618
NUMCON0             8816
NUMCON1             883A
NUMCON2             8846
NUMCON3             885E
NW                  40
NXTBP               8FD2
NXTBP3              8FE6
NXTCHR              8FF2
OFCMD               948A
OFFSET              44C
OPC                 61D
OPCTBL              B572
OPTIONS             4E6
OUT1CR              9822
OUT1CR0             983C
OUT1CRX             9836
OUTBSIZE            50
OUTCH               9978
OUTCH1              9874
OUTCH2              9894
OUTCH3              989A
OUTCHRTS            98A2
OUTP2               9864
OUTP3               986E
OUTPORT1            630
OUTPORT2            638
OUTPORT3            640
OUTPUT              983C
OUTPUT2             9846
OUTPUT20            985C
OUTPUT21            985C
OUTPUT2X            9856
OUTTO               61C
P2PHY               80C4
P2PHY2              80D6
PCOUNTER            E
PDIPORT             644
PENDOP              16
PER3                9386
PER4                9364
PERCMD              935A
PNCA3               8A50
PNMSG011            97FA
PNT2HX              95EA
PNT4HX              95E2
PNT6HX              95DC
PNT8HX              95D4
PNTCLS              94AC
PNTCLS1             94B2
PNTCLS2             94C4
PNTCLSA             949E
PNTCLSB             94A6
PNTCLSD             9494
PNTREG              94D0
PNTREG1             94FA
PNTSREC             8A8A
PNTSRECX            8A84
PNTSRTS             8AAA
PNTZ0               9670
PNTZ1               9672
PNTZ2               967A
PNTZ3               9690
PNTZ4               9686
PNTZ8               9696
PNTZ81              969E
PNTZ9               96A2
PNTZHX              9660
PORTIN1             98B2
PORTIN10            98D2
PORTIN1N            98C4
PORTIN1V            98D6
PORTIN1W            98D8
PORTIN1X            98BE
PPHY                80BC
PRINT3              8FB8
PRINT5              8F76
PRINT7              8F92
PRINT8              8F48
PRINT9              901E
PRINTDI             8F66
PRINTDI5            8F96
PRINTMB             8F5A
PRINTR              946A
PRINTR2             9484
PTRBUFE             1A
PTROP               12
PUM11               89C4
PUM13               89CC
PUNCH5              89BE
PUTADR              8FC0
PUTCHR              9008
PUTHEX              95F2
RAMERR              9558
RAMTEST             9508
READBUF             98DC
REGA7               444
REGNAMES            886A
REGPC               400
REGS                408
REGSR               404
REGTBL              9392
REGUS               448
RETURN              98A6
RETURN5             9468
RL111               A75C
RL114               A76C
RL115               A76E
RL30                A7E0
RL333               A77C
RL444               A788
RL555               A7B2
RL666               A7BE
S2REC               8A38
SAVE                8BFE
SAVEAV4             4D2
SAVEREGS            8A
SAVHEX              9602
SCAN                945A
SCAN2               945C
SCANP6              99CA
SCANPORT            99C2
SCHR                AD66
SCOMMON             AE16
SCREEN1             610
SCREEN2             614
SEMACS              941C
SETA                93C2
SETA7               93D4
SETBIT              A7CC
SETD                93BC
SETM1               9278
SETM3               92A0
SETM5               92BA
SETM6               92BC
SETM7               92DE
SETME               92D2
SETO                948A
SETPC               93C8
SETR                93F6
SETR0               93FE
SETR4               9420
SETR5               9426
SETRN               93EA
SETSR               93CE
SETSR1              942A
SETSR15             9458
SETSS               93DE
SETUS               93E4
SI201               A88A
SI222               A8A4
SIZEBYTE            A898
SIZELONG            A87C
SIZEWORD            A88C
SOLIST              829A
SSA7                53C
START               8146
START11             8164
START1S             8124
SV_29               8C3E
SV_3                805A
SV_31               8D6A
SV_32               9570
SV_33               95B0
SV_378              B6D6
SWAP                8D1E
SWAP1               8D2C
SWAP99              8D4C
SWAPEND             8D54
SWAPIN              8CF8
SWAPIN1             8D34
SWAPOUT             8D0E
SWAPOUT1            8D44
SYNTAX              80B6
SYSTACK             77C
T100                B67A
T400                B690
T44                 8912
T448                891E
T449                8926
T450                B6AE
T500                B6C2
T600                B6FC
T700                B702
TAPENULS            64A
TBL                 B368
TBLE                B572
TBLKEYS             9D40
TBLOPC              9D8C
TBLOPCE             A090
TCMD15              8510
TCMDHOT             850E
TD07                8880
TD09                8892
TD1                 889E
TD25                88D2
TD27                88CA
TD39                88F6
TD4                 88F8
TD9                 892A
TDATA               0
TDCC                8932
TDCC9               8982
TDCC91              898E
TDISPLY             8876
TEMP                4D6
TISOK               8C84
TLENGTH             C
TLSPEC              B
TMCHARS             4EA
TNB                 A
TRACE               8C2C
TRACE01             8C8E
TRACE03             8CAA
TRACE08             8CA2
TRACE16             8C58
TRACE2              8538
TRACE39             8CB8
TRACECNT            4DA
TRACEON             4DE
TRAP14              B672
TRCMD               84FA
TTCMD               8516
UNSTACK             8CCE
UNTRACE             8CC0
V2                  8008
VECT                8314
VECTBE              8042
VECTI               82F6
VECTI2              8306
VERSION             4
WALK0               950E
WALK1               951C
WALK3               950C
WHAT                809E
WHAT93              80A2
X                   AAC6
XBASE               9A36
XONOFF              4E6
_00000000           99C0
